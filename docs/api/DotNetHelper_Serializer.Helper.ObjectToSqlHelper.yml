### YamlMime:ManagedReference
items:
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper
  commentId: T:DotNetHelper_Serializer.Helper.ObjectToSqlHelper
  id: ObjectToSqlHelper
  parent: DotNetHelper_Serializer.Helper
  children:
  - DotNetHelper_Serializer.Helper.ObjectToSqlHelper.#ctor(DotNetHelper_Contracts.Enum.DataSource.DataBaseType)
  - DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildDbParameterList``1(``0,System.Func{System.String,System.Object,System.Data.Common.DbParameter},DotNetHelper_Serializer.Interface.IXmlSerializer,DotNetHelper_Serializer.Interface.IJsonSerializer,DotNetHelper_Serializer.Interface.ICsvSerializer)
  - DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildDeleteQuery``1(System.Text.StringBuilder,System.String,``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  - DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildGetQuery(System.Text.StringBuilder,System.String,System.String)
  - DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildGetQuery``1(System.Text.StringBuilder,System.String,System.String)
  - DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildInsertQuery``1(System.Text.StringBuilder,System.String,``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  - DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildInsertQueryWithOutputs``1(System.Text.StringBuilder,System.String)
  - DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildInsertQueryWithOutputs``1(System.Text.StringBuilder,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  - DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildUpdateQuery``1(System.Text.StringBuilder,System.String,``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  - DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildUpsertQuery``1(System.Text.StringBuilder,System.String,``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  - DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildWhereClause(System.Func{System.String,System.Object,System.Data.Common.DbParameter},System.Dynamic.ExpandoObject,System.String)
  - DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildWhereClause(System.Text.StringBuilder,System.Collections.Generic.List{DotNetHelper_Serializer.Extension.AdvanceMember},System.Boolean)
  - DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildWhereClauseAndGeDbParameters(System.Func{System.String,System.Object,System.Data.Common.DbParameter},System.Text.StringBuilder,System.Collections.Generic.List{DotNetHelper_Serializer.Extension.AdvanceMember},System.Boolean)
  - DotNetHelper_Serializer.Helper.ObjectToSqlHelper.ConvertToDatabaseValue(DotNetHelper_Serializer.Extension.DynamicMember,System.Object)
  - DotNetHelper_Serializer.Helper.ObjectToSqlHelper.DatabaseType
  - DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields(System.Type)
  - DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields``1
  - DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetKeyFields(System.Type)
  - DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetKeyFields``1(``0)
  - DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetNonIdentityFields``1(``0)
  - DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetNonKeyFields``1(``0)
  langs:
  - csharp
  - vb
  name: ObjectToSqlHelper
  nameWithType: ObjectToSqlHelper
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper
  type: Class
  source:
    remote:
      path: src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: ObjectToSqlHelper
    path: ../src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
    startLine: 21
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.Helper
  syntax:
    content: public class ObjectToSqlHelper
    content.vb: Public Class ObjectToSqlHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - DotNetHelper_Serializer.Helper.ObjectToSqlHelper.DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.DatabaseType
  commentId: P:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.DatabaseType
  id: DatabaseType
  parent: DotNetHelper_Serializer.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: DatabaseType
  nameWithType: ObjectToSqlHelper.DatabaseType
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.DatabaseType
  type: Property
  source:
    remote:
      path: src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: DatabaseType
    path: ../src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
    startLine: 26
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.Helper
  syntax:
    content: public DataBaseType DatabaseType { get; }
    parameters: []
    return:
      type: DotNetHelper_Contracts.Enum.DataSource.DataBaseType
    content.vb: Public ReadOnly Property DatabaseType As DataBaseType
  overload: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.DatabaseType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.#ctor(DotNetHelper_Contracts.Enum.DataSource.DataBaseType)
  commentId: M:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.#ctor(DotNetHelper_Contracts.Enum.DataSource.DataBaseType)
  id: '#ctor(DotNetHelper_Contracts.Enum.DataSource.DataBaseType)'
  parent: DotNetHelper_Serializer.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: ObjectToSqlHelper(DataBaseType)
  nameWithType: ObjectToSqlHelper.ObjectToSqlHelper(DataBaseType)
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.ObjectToSqlHelper(DotNetHelper_Contracts.Enum.DataSource.DataBaseType)
  type: Constructor
  source:
    remote:
      path: src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: .ctor
    path: ../src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
    startLine: 28
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.Helper
  syntax:
    content: public ObjectToSqlHelper(DataBaseType type)
    parameters:
    - id: type
      type: DotNetHelper_Contracts.Enum.DataSource.DataBaseType
    content.vb: Public Sub New(type As DataBaseType)
  overload: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildWhereClause(System.Text.StringBuilder,System.Collections.Generic.List{DotNetHelper_Serializer.Extension.AdvanceMember},System.Boolean)
  commentId: M:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildWhereClause(System.Text.StringBuilder,System.Collections.Generic.List{DotNetHelper_Serializer.Extension.AdvanceMember},System.Boolean)
  id: BuildWhereClause(System.Text.StringBuilder,System.Collections.Generic.List{DotNetHelper_Serializer.Extension.AdvanceMember},System.Boolean)
  parent: DotNetHelper_Serializer.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: BuildWhereClause(StringBuilder, List<AdvanceMember>, Boolean)
  nameWithType: ObjectToSqlHelper.BuildWhereClause(StringBuilder, List<AdvanceMember>, Boolean)
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildWhereClause(System.Text.StringBuilder, System.Collections.Generic.List<DotNetHelper_Serializer.Extension.AdvanceMember>, System.Boolean)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: BuildWhereClause
    path: ../src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
    startLine: 40
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.Helper
  syntax:
    content: public void BuildWhereClause(StringBuilder sqlBuilder, List<AdvanceMember> keyFields, bool throwOnNoAttributes)
    parameters:
    - id: sqlBuilder
      type: System.Text.StringBuilder
    - id: keyFields
      type: System.Collections.Generic.List{DotNetHelper_Serializer.Extension.AdvanceMember}
    - id: throwOnNoAttributes
      type: System.Boolean
    content.vb: Public Sub BuildWhereClause(sqlBuilder As StringBuilder, keyFields As List(Of AdvanceMember), throwOnNoAttributes As Boolean)
  overload: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildWhereClause*
  nameWithType.vb: ObjectToSqlHelper.BuildWhereClause(StringBuilder, List(Of AdvanceMember), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildWhereClause(System.Text.StringBuilder, System.Collections.Generic.List(Of DotNetHelper_Serializer.Extension.AdvanceMember), System.Boolean)
  name.vb: BuildWhereClause(StringBuilder, List(Of AdvanceMember), Boolean)
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildWhereClauseAndGeDbParameters(System.Func{System.String,System.Object,System.Data.Common.DbParameter},System.Text.StringBuilder,System.Collections.Generic.List{DotNetHelper_Serializer.Extension.AdvanceMember},System.Boolean)
  commentId: M:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildWhereClauseAndGeDbParameters(System.Func{System.String,System.Object,System.Data.Common.DbParameter},System.Text.StringBuilder,System.Collections.Generic.List{DotNetHelper_Serializer.Extension.AdvanceMember},System.Boolean)
  id: BuildWhereClauseAndGeDbParameters(System.Func{System.String,System.Object,System.Data.Common.DbParameter},System.Text.StringBuilder,System.Collections.Generic.List{DotNetHelper_Serializer.Extension.AdvanceMember},System.Boolean)
  parent: DotNetHelper_Serializer.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: BuildWhereClauseAndGeDbParameters(Func<String, Object, DbParameter>, StringBuilder, List<AdvanceMember>, Boolean)
  nameWithType: ObjectToSqlHelper.BuildWhereClauseAndGeDbParameters(Func<String, Object, DbParameter>, StringBuilder, List<AdvanceMember>, Boolean)
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildWhereClauseAndGeDbParameters(System.Func<System.String, System.Object, System.Data.Common.DbParameter>, System.Text.StringBuilder, System.Collections.Generic.List<DotNetHelper_Serializer.Extension.AdvanceMember>, System.Boolean)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: BuildWhereClauseAndGeDbParameters
    path: ../src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
    startLine: 64
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.Helper
  syntax:
    content: public List<DbParameter> BuildWhereClauseAndGeDbParameters(Func<string, object, DbParameter> GetNewParameter, StringBuilder sqlBuilder, List<AdvanceMember> keyFields, bool throwOnNoAttributes)
    parameters:
    - id: GetNewParameter
      type: System.Func{System.String,System.Object,System.Data.Common.DbParameter}
    - id: sqlBuilder
      type: System.Text.StringBuilder
    - id: keyFields
      type: System.Collections.Generic.List{DotNetHelper_Serializer.Extension.AdvanceMember}
    - id: throwOnNoAttributes
      type: System.Boolean
    return:
      type: System.Collections.Generic.List{System.Data.Common.DbParameter}
    content.vb: Public Function BuildWhereClauseAndGeDbParameters(GetNewParameter As Func(Of String, Object, DbParameter), sqlBuilder As StringBuilder, keyFields As List(Of AdvanceMember), throwOnNoAttributes As Boolean) As List(Of DbParameter)
  overload: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildWhereClauseAndGeDbParameters*
  nameWithType.vb: ObjectToSqlHelper.BuildWhereClauseAndGeDbParameters(Func(Of String, Object, DbParameter), StringBuilder, List(Of AdvanceMember), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildWhereClauseAndGeDbParameters(System.Func(Of System.String, System.Object, System.Data.Common.DbParameter), System.Text.StringBuilder, System.Collections.Generic.List(Of DotNetHelper_Serializer.Extension.AdvanceMember), System.Boolean)
  name.vb: BuildWhereClauseAndGeDbParameters(Func(Of String, Object, DbParameter), StringBuilder, List(Of AdvanceMember), Boolean)
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildWhereClause(System.Func{System.String,System.Object,System.Data.Common.DbParameter},System.Dynamic.ExpandoObject,System.String)
  commentId: M:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildWhereClause(System.Func{System.String,System.Object,System.Data.Common.DbParameter},System.Dynamic.ExpandoObject,System.String)
  id: BuildWhereClause(System.Func{System.String,System.Object,System.Data.Common.DbParameter},System.Dynamic.ExpandoObject,System.String)
  parent: DotNetHelper_Serializer.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: BuildWhereClause(Func<String, Object, DbParameter>, ExpandoObject, String)
  nameWithType: ObjectToSqlHelper.BuildWhereClause(Func<String, Object, DbParameter>, ExpandoObject, String)
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildWhereClause(System.Func<System.String, System.Object, System.Data.Common.DbParameter>, System.Dynamic.ExpandoObject, System.String)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: BuildWhereClause
    path: ../src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
    startLine: 88
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.Helper
  syntax:
    content: public Tuple<List<DbParameter>, string> BuildWhereClause(Func<string, object, DbParameter> GetNewParameter, ExpandoObject parameters, string additionalWhere = null)
    parameters:
    - id: GetNewParameter
      type: System.Func{System.String,System.Object,System.Data.Common.DbParameter}
    - id: parameters
      type: System.Dynamic.ExpandoObject
    - id: additionalWhere
      type: System.String
    return:
      type: System.Tuple{System.Collections.Generic.List{System.Data.Common.DbParameter},System.String}
    content.vb: Public Function BuildWhereClause(GetNewParameter As Func(Of String, Object, DbParameter), parameters As ExpandoObject, additionalWhere As String = Nothing) As Tuple(Of List(Of DbParameter), String)
  overload: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildWhereClause*
  nameWithType.vb: ObjectToSqlHelper.BuildWhereClause(Func(Of String, Object, DbParameter), ExpandoObject, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildWhereClause(System.Func(Of System.String, System.Object, System.Data.Common.DbParameter), System.Dynamic.ExpandoObject, System.String)
  name.vb: BuildWhereClause(Func(Of String, Object, DbParameter), ExpandoObject, String)
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetNonKeyFields``1(``0)
  commentId: M:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetNonKeyFields``1(``0)
  id: GetNonKeyFields``1(``0)
  parent: DotNetHelper_Serializer.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: GetNonKeyFields<T>(T)
  nameWithType: ObjectToSqlHelper.GetNonKeyFields<T>(T)
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetNonKeyFields<T>(T)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: GetNonKeyFields
    path: ../src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
    startLine: 193
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.Helper
  summary: "\nGets the non key fields.\n"
  example: []
  syntax:
    content: >-
      public List<AdvanceMember> GetNonKeyFields<T>(T poco = null)
          where T : class
    parameters:
    - id: poco
      type: '{T}'
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Collections.Generic.List{DotNetHelper_Serializer.Extension.AdvanceMember}
      description: List&lt;AdvanceMember>.
    content.vb: Public Function GetNonKeyFields(Of T As Class)(poco As T = Nothing) As List(Of AdvanceMember)
  overload: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetNonKeyFields*
  nameWithType.vb: ObjectToSqlHelper.GetNonKeyFields(Of T)(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetNonKeyFields(Of T)(T)
  name.vb: GetNonKeyFields(Of T)(T)
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetKeyFields``1(``0)
  commentId: M:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetKeyFields``1(``0)
  id: GetKeyFields``1(``0)
  parent: DotNetHelper_Serializer.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: GetKeyFields<T>(T)
  nameWithType: ObjectToSqlHelper.GetKeyFields<T>(T)
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetKeyFields<T>(T)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: GetKeyFields
    path: ../src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
    startLine: 217
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.Helper
  summary: "\nGets the key fields.\n"
  example: []
  syntax:
    content: >-
      public List<AdvanceMember> GetKeyFields<T>(T poco = null)
          where T : class
    parameters:
    - id: poco
      type: '{T}'
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Collections.Generic.List{DotNetHelper_Serializer.Extension.AdvanceMember}
      description: List&lt;AdvanceMember>.
    content.vb: Public Function GetKeyFields(Of T As Class)(poco As T = Nothing) As List(Of AdvanceMember)
  overload: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetKeyFields*
  nameWithType.vb: ObjectToSqlHelper.GetKeyFields(Of T)(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetKeyFields(Of T)(T)
  name.vb: GetKeyFields(Of T)(T)
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetKeyFields(System.Type)
  commentId: M:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetKeyFields(System.Type)
  id: GetKeyFields(System.Type)
  parent: DotNetHelper_Serializer.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: GetKeyFields(Type)
  nameWithType: ObjectToSqlHelper.GetKeyFields(Type)
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetKeyFields(System.Type)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: GetKeyFields
    path: ../src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
    startLine: 240
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.Helper
  summary: "\nGets the key fields.\n"
  example: []
  syntax:
    content: public List<AdvanceMember> GetKeyFields(Type type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Collections.Generic.List{DotNetHelper_Serializer.Extension.AdvanceMember}
      description: List&lt;AdvanceMember>.
    content.vb: Public Function GetKeyFields(type As Type) As List(Of AdvanceMember)
  overload: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetKeyFields*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetNonIdentityFields``1(``0)
  commentId: M:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetNonIdentityFields``1(``0)
  id: GetNonIdentityFields``1(``0)
  parent: DotNetHelper_Serializer.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: GetNonIdentityFields<T>(T)
  nameWithType: ObjectToSqlHelper.GetNonIdentityFields<T>(T)
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetNonIdentityFields<T>(T)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: GetNonIdentityFields
    path: ../src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
    startLine: 256
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.Helper
  summary: "\nGets the non identity fields.\n"
  example: []
  syntax:
    content: >-
      public static List<AdvanceMember> GetNonIdentityFields<T>(T poco = null)
          where T : class
    parameters:
    - id: poco
      type: '{T}'
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Collections.Generic.List{DotNetHelper_Serializer.Extension.AdvanceMember}
      description: List&lt;AdvanceMember>.
    content.vb: Public Shared Function GetNonIdentityFields(Of T As Class)(poco As T = Nothing) As List(Of AdvanceMember)
  overload: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetNonIdentityFields*
  nameWithType.vb: ObjectToSqlHelper.GetNonIdentityFields(Of T)(T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetNonIdentityFields(Of T)(T)
  name.vb: GetNonIdentityFields(Of T)(T)
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields``1
  commentId: M:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields``1
  id: GetAllNonIgnoreFields``1
  parent: DotNetHelper_Serializer.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: GetAllNonIgnoreFields<T>()
  nameWithType: ObjectToSqlHelper.GetAllNonIgnoreFields<T>()
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields<T>()
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: GetAllNonIgnoreFields
    path: ../src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
    startLine: 276
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.Helper
  summary: "\nGets all non ignore fields.\n"
  example: []
  syntax:
    content: >-
      public List<AdvanceMember> GetAllNonIgnoreFields<T>()
          where T : class
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Collections.Generic.List{DotNetHelper_Serializer.Extension.AdvanceMember}
      description: List&lt;AdvanceMember>.
    content.vb: Public Function GetAllNonIgnoreFields(Of T As Class) As List(Of AdvanceMember)
  overload: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields*
  nameWithType.vb: ObjectToSqlHelper.GetAllNonIgnoreFields(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields(Of T)()
  name.vb: GetAllNonIgnoreFields(Of T)()
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields(System.Type)
  commentId: M:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields(System.Type)
  id: GetAllNonIgnoreFields(System.Type)
  parent: DotNetHelper_Serializer.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: GetAllNonIgnoreFields(Type)
  nameWithType: ObjectToSqlHelper.GetAllNonIgnoreFields(Type)
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields(System.Type)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: GetAllNonIgnoreFields
    path: ../src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
    startLine: 288
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.Helper
  summary: "\nGets all non ignore fields.\n"
  example: []
  syntax:
    content: public List<AdvanceMember> GetAllNonIgnoreFields(Type type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Collections.Generic.List{DotNetHelper_Serializer.Extension.AdvanceMember}
      description: List&lt;AdvanceMember>.
    content.vb: Public Function GetAllNonIgnoreFields(type As Type) As List(Of AdvanceMember)
  overload: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildInsertQuery``1(System.Text.StringBuilder,System.String,``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  commentId: M:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildInsertQuery``1(System.Text.StringBuilder,System.String,``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  id: BuildInsertQuery``1(System.Text.StringBuilder,System.String,``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  parent: DotNetHelper_Serializer.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: BuildInsertQuery<T>(StringBuilder, String, T, Expression<Func<T, Object>>)
  nameWithType: ObjectToSqlHelper.BuildInsertQuery<T>(StringBuilder, String, T, Expression<Func<T, Object>>)
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildInsertQuery<T>(System.Text.StringBuilder, System.String, T, System.Linq.Expressions.Expression<System.Func<T, System.Object>>)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: BuildInsertQuery
    path: ../src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
    startLine: 305
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.Helper
  summary: "\nBuilds the insert query.\n"
  example: []
  syntax:
    content: >-
      public void BuildInsertQuery<T>(StringBuilder sqlBuilder, string tableName, T poco, Expression<Func<T, object>> overrideKeys)
          where T : class
    parameters:
    - id: sqlBuilder
      type: System.Text.StringBuilder
      description: The SQL builder.
    - id: tableName
      type: System.String
      description: Name of the table.
    - id: poco
      type: '{T}'
      description: The poco.
    - id: overrideKeys
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Object}}
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Sub BuildInsertQuery(Of T As Class)(sqlBuilder As StringBuilder, tableName As String, poco As T, overrideKeys As Expression(Of Func(Of T, Object)))
  overload: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildInsertQuery*
  nameWithType.vb: ObjectToSqlHelper.BuildInsertQuery(Of T)(StringBuilder, String, T, Expression(Of Func(Of T, Object)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildInsertQuery(Of T)(System.Text.StringBuilder, System.String, T, System.Linq.Expressions.Expression(Of System.Func(Of T, System.Object)))
  name.vb: BuildInsertQuery(Of T)(StringBuilder, String, T, Expression(Of Func(Of T, Object)))
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildInsertQueryWithOutputs``1(System.Text.StringBuilder,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  commentId: M:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildInsertQueryWithOutputs``1(System.Text.StringBuilder,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  id: BuildInsertQueryWithOutputs``1(System.Text.StringBuilder,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  parent: DotNetHelper_Serializer.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: BuildInsertQueryWithOutputs<T>(StringBuilder, String, Expression<Func<T, Object>>)
  nameWithType: ObjectToSqlHelper.BuildInsertQueryWithOutputs<T>(StringBuilder, String, Expression<Func<T, Object>>)
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildInsertQueryWithOutputs<T>(System.Text.StringBuilder, System.String, System.Linq.Expressions.Expression<System.Func<T, System.Object>>)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: BuildInsertQueryWithOutputs
    path: ../src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
    startLine: 343
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.Helper
  summary: "\nBuilds the insert query and return the expression.\n"
  example: []
  syntax:
    content: >-
      public void BuildInsertQueryWithOutputs<T>(StringBuilder sqlBuilder, string tableName, Expression<Func<T, object>> expression)
          where T : class
    parameters:
    - id: sqlBuilder
      type: System.Text.StringBuilder
      description: The SQL builder.
    - id: tableName
      type: System.String
      description: Name of the table.
    - id: expression
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Object}}
      description: ''
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Sub BuildInsertQueryWithOutputs(Of T As Class)(sqlBuilder As StringBuilder, tableName As String, expression As Expression(Of Func(Of T, Object)))
  overload: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildInsertQueryWithOutputs*
  nameWithType.vb: ObjectToSqlHelper.BuildInsertQueryWithOutputs(Of T)(StringBuilder, String, Expression(Of Func(Of T, Object)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildInsertQueryWithOutputs(Of T)(System.Text.StringBuilder, System.String, System.Linq.Expressions.Expression(Of System.Func(Of T, System.Object)))
  name.vb: BuildInsertQueryWithOutputs(Of T)(StringBuilder, String, Expression(Of Func(Of T, Object)))
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildInsertQueryWithOutputs``1(System.Text.StringBuilder,System.String)
  commentId: M:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildInsertQueryWithOutputs``1(System.Text.StringBuilder,System.String)
  id: BuildInsertQueryWithOutputs``1(System.Text.StringBuilder,System.String)
  parent: DotNetHelper_Serializer.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: BuildInsertQueryWithOutputs<T>(StringBuilder, String)
  nameWithType: ObjectToSqlHelper.BuildInsertQueryWithOutputs<T>(StringBuilder, String)
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildInsertQueryWithOutputs<T>(System.Text.StringBuilder, System.String)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: BuildInsertQueryWithOutputs
    path: ../src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
    startLine: 435
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.Helper
  summary: "\nBuilds the insert query and return the expression.\n"
  example: []
  syntax:
    content: >-
      public void BuildInsertQueryWithOutputs<T>(StringBuilder sqlBuilder, string tableName)
          where T : class
    parameters:
    - id: sqlBuilder
      type: System.Text.StringBuilder
      description: The SQL builder.
    - id: tableName
      type: System.String
      description: Name of the table.
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Sub BuildInsertQueryWithOutputs(Of T As Class)(sqlBuilder As StringBuilder, tableName As String)
  overload: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildInsertQueryWithOutputs*
  nameWithType.vb: ObjectToSqlHelper.BuildInsertQueryWithOutputs(Of T)(StringBuilder, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildInsertQueryWithOutputs(Of T)(System.Text.StringBuilder, System.String)
  name.vb: BuildInsertQueryWithOutputs(Of T)(StringBuilder, String)
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildUpdateQuery``1(System.Text.StringBuilder,System.String,``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  commentId: M:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildUpdateQuery``1(System.Text.StringBuilder,System.String,``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  id: BuildUpdateQuery``1(System.Text.StringBuilder,System.String,``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  parent: DotNetHelper_Serializer.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: BuildUpdateQuery<T>(StringBuilder, String, T, Expression<Func<T, Object>>)
  nameWithType: ObjectToSqlHelper.BuildUpdateQuery<T>(StringBuilder, String, T, Expression<Func<T, Object>>)
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildUpdateQuery<T>(System.Text.StringBuilder, System.String, T, System.Linq.Expressions.Expression<System.Func<T, System.Object>>)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: BuildUpdateQuery
    path: ../src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
    startLine: 487
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.Helper
  summary: "\nBuilds the update query.\n"
  example: []
  syntax:
    content: >-
      public void BuildUpdateQuery<T>(StringBuilder sqlBuilder, string tableName, T poco, Expression<Func<T, object>> overrideKeys)
          where T : class
    parameters:
    - id: sqlBuilder
      type: System.Text.StringBuilder
      description: The SQL builder.
    - id: tableName
      type: System.String
      description: Name of the table.
    - id: poco
      type: '{T}'
      description: The poco.
    - id: overrideKeys
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Object}}
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Sub BuildUpdateQuery(Of T As Class)(sqlBuilder As StringBuilder, tableName As String, poco As T, overrideKeys As Expression(Of Func(Of T, Object)))
  overload: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildUpdateQuery*
  nameWithType.vb: ObjectToSqlHelper.BuildUpdateQuery(Of T)(StringBuilder, String, T, Expression(Of Func(Of T, Object)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildUpdateQuery(Of T)(System.Text.StringBuilder, System.String, T, System.Linq.Expressions.Expression(Of System.Func(Of T, System.Object)))
  name.vb: BuildUpdateQuery(Of T)(StringBuilder, String, T, Expression(Of Func(Of T, Object)))
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildDeleteQuery``1(System.Text.StringBuilder,System.String,``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  commentId: M:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildDeleteQuery``1(System.Text.StringBuilder,System.String,``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  id: BuildDeleteQuery``1(System.Text.StringBuilder,System.String,``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  parent: DotNetHelper_Serializer.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: BuildDeleteQuery<T>(StringBuilder, String, T, Expression<Func<T, Object>>)
  nameWithType: ObjectToSqlHelper.BuildDeleteQuery<T>(StringBuilder, String, T, Expression<Func<T, Object>>)
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildDeleteQuery<T>(System.Text.StringBuilder, System.String, T, System.Linq.Expressions.Expression<System.Func<T, System.Object>>)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: BuildDeleteQuery
    path: ../src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
    startLine: 525
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.Helper
  summary: "\nBuilds the delete query.\n"
  example: []
  syntax:
    content: >-
      public void BuildDeleteQuery<T>(StringBuilder sqlBuilder, string tableName, T poco, Expression<Func<T, object>> overrideKeys)
          where T : class
    parameters:
    - id: sqlBuilder
      type: System.Text.StringBuilder
      description: The SQL builder.
    - id: tableName
      type: System.String
      description: Name of the table.
    - id: poco
      type: '{T}'
      description: The poco.
    - id: overrideKeys
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Object}}
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Sub BuildDeleteQuery(Of T As Class)(sqlBuilder As StringBuilder, tableName As String, poco As T, overrideKeys As Expression(Of Func(Of T, Object)))
  overload: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildDeleteQuery*
  nameWithType.vb: ObjectToSqlHelper.BuildDeleteQuery(Of T)(StringBuilder, String, T, Expression(Of Func(Of T, Object)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildDeleteQuery(Of T)(System.Text.StringBuilder, System.String, T, System.Linq.Expressions.Expression(Of System.Func(Of T, System.Object)))
  name.vb: BuildDeleteQuery(Of T)(StringBuilder, String, T, Expression(Of Func(Of T, Object)))
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildGetQuery(System.Text.StringBuilder,System.String,System.String)
  commentId: M:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildGetQuery(System.Text.StringBuilder,System.String,System.String)
  id: BuildGetQuery(System.Text.StringBuilder,System.String,System.String)
  parent: DotNetHelper_Serializer.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: BuildGetQuery(StringBuilder, String, String)
  nameWithType: ObjectToSqlHelper.BuildGetQuery(StringBuilder, String, String)
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildGetQuery(System.Text.StringBuilder, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: BuildGetQuery
    path: ../src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
    startLine: 552
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.Helper
  summary: "\nBuilds the get query.\n"
  example: []
  syntax:
    content: public void BuildGetQuery(StringBuilder sqlBuilder, string tableName, string whereClause)
    parameters:
    - id: sqlBuilder
      type: System.Text.StringBuilder
      description: The SQL builder.
    - id: tableName
      type: System.String
      description: Name of the table.
    - id: whereClause
      type: System.String
      description: The where clause.
    content.vb: Public Sub BuildGetQuery(sqlBuilder As StringBuilder, tableName As String, whereClause As String)
  overload: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildGetQuery*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildGetQuery``1(System.Text.StringBuilder,System.String,System.String)
  commentId: M:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildGetQuery``1(System.Text.StringBuilder,System.String,System.String)
  id: BuildGetQuery``1(System.Text.StringBuilder,System.String,System.String)
  parent: DotNetHelper_Serializer.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: BuildGetQuery<T>(StringBuilder, String, String)
  nameWithType: ObjectToSqlHelper.BuildGetQuery<T>(StringBuilder, String, String)
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildGetQuery<T>(System.Text.StringBuilder, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: BuildGetQuery
    path: ../src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
    startLine: 572
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.Helper
  summary: "\nBuilds the get query.\n"
  example: []
  syntax:
    content: >-
      public void BuildGetQuery<T>(StringBuilder sqlBuilder, string tableName, string whereClause)
          where T : class
    parameters:
    - id: sqlBuilder
      type: System.Text.StringBuilder
      description: The SQL builder.
    - id: tableName
      type: System.String
      description: Name of the table.
    - id: whereClause
      type: System.String
      description: The where clause.
    typeParameters:
    - id: T
    content.vb: Public Sub BuildGetQuery(Of T As Class)(sqlBuilder As StringBuilder, tableName As String, whereClause As String)
  overload: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildGetQuery*
  nameWithType.vb: ObjectToSqlHelper.BuildGetQuery(Of T)(StringBuilder, String, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildGetQuery(Of T)(System.Text.StringBuilder, System.String, System.String)
  name.vb: BuildGetQuery(Of T)(StringBuilder, String, String)
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildUpsertQuery``1(System.Text.StringBuilder,System.String,``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  commentId: M:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildUpsertQuery``1(System.Text.StringBuilder,System.String,``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  id: BuildUpsertQuery``1(System.Text.StringBuilder,System.String,``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})
  parent: DotNetHelper_Serializer.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: BuildUpsertQuery<T>(StringBuilder, String, T, Expression<Func<T, Object>>)
  nameWithType: ObjectToSqlHelper.BuildUpsertQuery<T>(StringBuilder, String, T, Expression<Func<T, Object>>)
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildUpsertQuery<T>(System.Text.StringBuilder, System.String, T, System.Linq.Expressions.Expression<System.Func<T, System.Object>>)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: BuildUpsertQuery
    path: ../src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
    startLine: 592
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.Helper
  summary: "\nBuilds the upsert query.\n"
  example: []
  syntax:
    content: >-
      public void BuildUpsertQuery<T>(StringBuilder sqlBuilder, string tableName, T poco, Expression<Func<T, object>> overrideKeys)
          where T : class
    parameters:
    - id: sqlBuilder
      type: System.Text.StringBuilder
      description: The SQL builder.
    - id: tableName
      type: System.String
      description: Name of the table.
    - id: poco
      type: '{T}'
      description: The poco.
    - id: overrideKeys
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Object}}
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Sub BuildUpsertQuery(Of T As Class)(sqlBuilder As StringBuilder, tableName As String, poco As T, overrideKeys As Expression(Of Func(Of T, Object)))
  overload: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildUpsertQuery*
  nameWithType.vb: ObjectToSqlHelper.BuildUpsertQuery(Of T)(StringBuilder, String, T, Expression(Of Func(Of T, Object)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildUpsertQuery(Of T)(System.Text.StringBuilder, System.String, T, System.Linq.Expressions.Expression(Of System.Func(Of T, System.Object)))
  name.vb: BuildUpsertQuery(Of T)(StringBuilder, String, T, Expression(Of Func(Of T, Object)))
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.ConvertToDatabaseValue(DotNetHelper_Serializer.Extension.DynamicMember,System.Object)
  commentId: M:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.ConvertToDatabaseValue(DotNetHelper_Serializer.Extension.DynamicMember,System.Object)
  id: ConvertToDatabaseValue(DotNetHelper_Serializer.Extension.DynamicMember,System.Object)
  parent: DotNetHelper_Serializer.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: ConvertToDatabaseValue(DynamicMember, Object)
  nameWithType: ObjectToSqlHelper.ConvertToDatabaseValue(DynamicMember, Object)
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.ConvertToDatabaseValue(DotNetHelper_Serializer.Extension.DynamicMember, System.Object)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: ConvertToDatabaseValue
    path: ../src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
    startLine: 628
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.Helper
  summary: "\nConverts to database value.\n"
  example: []
  syntax:
    content: public object ConvertToDatabaseValue(DynamicMember member, object value)
    parameters:
    - id: member
      type: DotNetHelper_Serializer.Extension.DynamicMember
      description: The member.
    - id: value
      type: System.Object
      description: The value.
    return:
      type: System.Object
      description: System.Object.
    content.vb: Public Function ConvertToDatabaseValue(member As DynamicMember, value As Object) As Object
  overload: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.ConvertToDatabaseValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildDbParameterList``1(``0,System.Func{System.String,System.Object,System.Data.Common.DbParameter},DotNetHelper_Serializer.Interface.IXmlSerializer,DotNetHelper_Serializer.Interface.IJsonSerializer,DotNetHelper_Serializer.Interface.ICsvSerializer)
  commentId: M:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildDbParameterList``1(``0,System.Func{System.String,System.Object,System.Data.Common.DbParameter},DotNetHelper_Serializer.Interface.IXmlSerializer,DotNetHelper_Serializer.Interface.IJsonSerializer,DotNetHelper_Serializer.Interface.ICsvSerializer)
  id: BuildDbParameterList``1(``0,System.Func{System.String,System.Object,System.Data.Common.DbParameter},DotNetHelper_Serializer.Interface.IXmlSerializer,DotNetHelper_Serializer.Interface.IJsonSerializer,DotNetHelper_Serializer.Interface.ICsvSerializer)
  parent: DotNetHelper_Serializer.Helper.ObjectToSqlHelper
  langs:
  - csharp
  - vb
  name: BuildDbParameterList<T>(T, Func<String, Object, DbParameter>, IXmlSerializer, IJsonSerializer, ICsvSerializer)
  nameWithType: ObjectToSqlHelper.BuildDbParameterList<T>(T, Func<String, Object, DbParameter>, IXmlSerializer, IJsonSerializer, ICsvSerializer)
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildDbParameterList<T>(T, System.Func<System.String, System.Object, System.Data.Common.DbParameter>, DotNetHelper_Serializer.Interface.IXmlSerializer, DotNetHelper_Serializer.Interface.IJsonSerializer, DotNetHelper_Serializer.Interface.ICsvSerializer)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: BuildDbParameterList
    path: ../src/DotNetHelper-Serializer/Helper/ObjectToSqlHelper.cs
    startLine: 663
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.Helper
  summary: "\nBuilds the SQL parameter list.\n"
  example: []
  syntax:
    content: >-
      public List<DbParameter> BuildDbParameterList<T>(T poco, Func<string, object, DbParameter> GetNewParameter, IXmlSerializer XmlSerializer, IJsonSerializer JsonSerializer, ICsvSerializer CsvSerializer)
          where T : class
    parameters:
    - id: poco
      type: '{T}'
      description: The poco.
    - id: GetNewParameter
      type: System.Func{System.String,System.Object,System.Data.Common.DbParameter}
    - id: XmlSerializer
      type: DotNetHelper_Serializer.Interface.IXmlSerializer
    - id: JsonSerializer
      type: DotNetHelper_Serializer.Interface.IJsonSerializer
    - id: CsvSerializer
      type: DotNetHelper_Serializer.Interface.ICsvSerializer
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Collections.Generic.List{System.Data.Common.DbParameter}
      description: List&lt;DbParameter>.
    content.vb: Public Function BuildDbParameterList(Of T As Class)(poco As T, GetNewParameter As Func(Of String, Object, DbParameter), XmlSerializer As IXmlSerializer, JsonSerializer As IJsonSerializer, CsvSerializer As ICsvSerializer) As List(Of DbParameter)
  overload: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildDbParameterList*
  nameWithType.vb: ObjectToSqlHelper.BuildDbParameterList(Of T)(T, Func(Of String, Object, DbParameter), IXmlSerializer, IJsonSerializer, ICsvSerializer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildDbParameterList(Of T)(T, System.Func(Of System.String, System.Object, System.Data.Common.DbParameter), DotNetHelper_Serializer.Interface.IXmlSerializer, DotNetHelper_Serializer.Interface.IJsonSerializer, DotNetHelper_Serializer.Interface.ICsvSerializer)
  name.vb: BuildDbParameterList(Of T)(T, Func(Of String, Object, DbParameter), IXmlSerializer, IJsonSerializer, ICsvSerializer)
references:
- uid: DotNetHelper_Serializer.Helper
  commentId: N:DotNetHelper_Serializer.Helper
  name: DotNetHelper_Serializer.Helper
  nameWithType: DotNetHelper_Serializer.Helper
  fullName: DotNetHelper_Serializer.Helper
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1
  commentId: M:DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1(``0)
  parent: DotNetHelper_Serializer.Extension.TypeExtension
  definition: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1(``0)
  name: CanHaveNullValue<ObjectToSqlHelper>()
  nameWithType: TypeExtension.CanHaveNullValue<ObjectToSqlHelper>()
  fullName: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue<DotNetHelper_Serializer.Helper.ObjectToSqlHelper>()
  nameWithType.vb: TypeExtension.CanHaveNullValue(Of ObjectToSqlHelper)()
  fullName.vb: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue(Of DotNetHelper_Serializer.Helper.ObjectToSqlHelper)()
  name.vb: CanHaveNullValue(Of ObjectToSqlHelper)()
  spec.csharp:
  - uid: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1
    name: CanHaveNullValue<ObjectToSqlHelper>
    nameWithType: TypeExtension.CanHaveNullValue<ObjectToSqlHelper>
    fullName: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue<DotNetHelper_Serializer.Helper.ObjectToSqlHelper>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1
    name: CanHaveNullValue(Of ObjectToSqlHelper)
    nameWithType: TypeExtension.CanHaveNullValue(Of ObjectToSqlHelper)
    fullName: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue(Of DotNetHelper_Serializer.Helper.ObjectToSqlHelper)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1(``0)
  commentId: M:DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1(``0)
  name: CanHaveNullValue<T>(T)
  nameWithType: TypeExtension.CanHaveNullValue<T>(T)
  fullName: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue<T>(T)
  nameWithType.vb: TypeExtension.CanHaveNullValue(Of T)(T)
  fullName.vb: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue(Of T)(T)
  name.vb: CanHaveNullValue(Of T)(T)
  spec.csharp:
  - uid: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1(``0)
    name: CanHaveNullValue<T>
    nameWithType: TypeExtension.CanHaveNullValue<T>
    fullName: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1(``0)
    name: CanHaveNullValue(Of T)
    nameWithType: TypeExtension.CanHaveNullValue(Of T)
    fullName: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_Serializer.Extension.TypeExtension
  commentId: T:DotNetHelper_Serializer.Extension.TypeExtension
  parent: DotNetHelper_Serializer.Extension
  name: TypeExtension
  nameWithType: TypeExtension
  fullName: DotNetHelper_Serializer.Extension.TypeExtension
- uid: DotNetHelper_Serializer.Extension
  commentId: N:DotNetHelper_Serializer.Extension
  name: DotNetHelper_Serializer.Extension
  nameWithType: DotNetHelper_Serializer.Extension
  fullName: DotNetHelper_Serializer.Extension
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.DatabaseType*
  commentId: Overload:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.DatabaseType
  name: DatabaseType
  nameWithType: ObjectToSqlHelper.DatabaseType
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.DatabaseType
- uid: DotNetHelper_Contracts.Enum.DataSource.DataBaseType
  commentId: T:DotNetHelper_Contracts.Enum.DataSource.DataBaseType
  parent: DotNetHelper_Contracts.Enum.DataSource
  isExternal: true
  name: DataBaseType
  nameWithType: DataBaseType
  fullName: DotNetHelper_Contracts.Enum.DataSource.DataBaseType
- uid: DotNetHelper_Contracts.Enum.DataSource
  commentId: N:DotNetHelper_Contracts.Enum.DataSource
  isExternal: true
  name: DotNetHelper_Contracts.Enum.DataSource
  nameWithType: DotNetHelper_Contracts.Enum.DataSource
  fullName: DotNetHelper_Contracts.Enum.DataSource
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.#ctor*
  commentId: Overload:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.#ctor
  name: ObjectToSqlHelper
  nameWithType: ObjectToSqlHelper.ObjectToSqlHelper
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.ObjectToSqlHelper
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildWhereClause*
  commentId: Overload:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildWhereClause
  name: BuildWhereClause
  nameWithType: ObjectToSqlHelper.BuildWhereClause
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildWhereClause
- uid: System.Text.StringBuilder
  commentId: T:System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: System.Collections.Generic.List{DotNetHelper_Serializer.Extension.AdvanceMember}
  commentId: T:System.Collections.Generic.List{DotNetHelper_Serializer.Extension.AdvanceMember}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<AdvanceMember>
  nameWithType: List<AdvanceMember>
  fullName: System.Collections.Generic.List<DotNetHelper_Serializer.Extension.AdvanceMember>
  nameWithType.vb: List(Of AdvanceMember)
  fullName.vb: System.Collections.Generic.List(Of DotNetHelper_Serializer.Extension.AdvanceMember)
  name.vb: List(Of AdvanceMember)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DotNetHelper_Serializer.Extension.AdvanceMember
    name: AdvanceMember
    nameWithType: AdvanceMember
    fullName: DotNetHelper_Serializer.Extension.AdvanceMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DotNetHelper_Serializer.Extension.AdvanceMember
    name: AdvanceMember
    nameWithType: AdvanceMember
    fullName: DotNetHelper_Serializer.Extension.AdvanceMember
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildWhereClauseAndGeDbParameters*
  commentId: Overload:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildWhereClauseAndGeDbParameters
  name: BuildWhereClauseAndGeDbParameters
  nameWithType: ObjectToSqlHelper.BuildWhereClauseAndGeDbParameters
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildWhereClauseAndGeDbParameters
- uid: System.Func{System.String,System.Object,System.Data.Common.DbParameter}
  commentId: T:System.Func{System.String,System.Object,System.Data.Common.DbParameter}
  parent: System
  definition: System.Func`3
  name: Func<String, Object, DbParameter>
  nameWithType: Func<String, Object, DbParameter>
  fullName: System.Func<System.String, System.Object, System.Data.Common.DbParameter>
  nameWithType.vb: Func(Of String, Object, DbParameter)
  fullName.vb: System.Func(Of System.String, System.Object, System.Data.Common.DbParameter)
  name.vb: Func(Of String, Object, DbParameter)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.Common.DbParameter
    name: DbParameter
    nameWithType: DbParameter
    fullName: System.Data.Common.DbParameter
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.Common.DbParameter
    name: DbParameter
    nameWithType: DbParameter
    fullName: System.Data.Common.DbParameter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{System.Data.Common.DbParameter}
  commentId: T:System.Collections.Generic.List{System.Data.Common.DbParameter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<DbParameter>
  nameWithType: List<DbParameter>
  fullName: System.Collections.Generic.List<System.Data.Common.DbParameter>
  nameWithType.vb: List(Of DbParameter)
  fullName.vb: System.Collections.Generic.List(Of System.Data.Common.DbParameter)
  name.vb: List(Of DbParameter)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.DbParameter
    name: DbParameter
    nameWithType: DbParameter
    fullName: System.Data.Common.DbParameter
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Data.Common.DbParameter
    name: DbParameter
    nameWithType: DbParameter
    fullName: System.Data.Common.DbParameter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Dynamic.ExpandoObject
  commentId: T:System.Dynamic.ExpandoObject
  parent: System.Dynamic
  isExternal: true
  name: ExpandoObject
  nameWithType: ExpandoObject
  fullName: System.Dynamic.ExpandoObject
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Tuple{System.Collections.Generic.List{System.Data.Common.DbParameter},System.String}
  commentId: T:System.Tuple{System.Collections.Generic.List{System.Data.Common.DbParameter},System.String}
  parent: System
  definition: System.Tuple`2
  name: Tuple<List<DbParameter>, String>
  nameWithType: Tuple<List<DbParameter>, String>
  fullName: System.Tuple<System.Collections.Generic.List<System.Data.Common.DbParameter>, System.String>
  nameWithType.vb: Tuple(Of List(Of DbParameter), String)
  fullName.vb: System.Tuple(Of System.Collections.Generic.List(Of System.Data.Common.DbParameter), System.String)
  name.vb: Tuple(Of List(Of DbParameter), String)
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Common.DbParameter
    name: DbParameter
    nameWithType: DbParameter
    fullName: System.Data.Common.DbParameter
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Data.Common.DbParameter
    name: DbParameter
    nameWithType: DbParameter
    fullName: System.Data.Common.DbParameter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Dynamic
  commentId: N:System.Dynamic
  isExternal: true
  name: System.Dynamic
  nameWithType: System.Dynamic
  fullName: System.Dynamic
- uid: System.Tuple`2
  commentId: T:System.Tuple`2
  isExternal: true
  name: Tuple<T1, T2>
  nameWithType: Tuple<T1, T2>
  fullName: System.Tuple<T1, T2>
  nameWithType.vb: Tuple(Of T1, T2)
  fullName.vb: System.Tuple(Of T1, T2)
  name.vb: Tuple(Of T1, T2)
  spec.csharp:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetNonKeyFields*
  commentId: Overload:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetNonKeyFields
  name: GetNonKeyFields
  nameWithType: ObjectToSqlHelper.GetNonKeyFields
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetNonKeyFields
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetKeyFields*
  commentId: Overload:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetKeyFields
  name: GetKeyFields
  nameWithType: ObjectToSqlHelper.GetKeyFields
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetKeyFields
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetNonIdentityFields*
  commentId: Overload:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetNonIdentityFields
  name: GetNonIdentityFields
  nameWithType: ObjectToSqlHelper.GetNonIdentityFields
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetNonIdentityFields
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields*
  commentId: Overload:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields
  name: GetAllNonIgnoreFields
  nameWithType: ObjectToSqlHelper.GetAllNonIgnoreFields
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.GetAllNonIgnoreFields
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildInsertQuery*
  commentId: Overload:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildInsertQuery
  name: BuildInsertQuery
  nameWithType: ObjectToSqlHelper.BuildInsertQuery
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildInsertQuery
- uid: System.Linq.Expressions.Expression{System.Func{{T},System.Object}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{``0,System.Object}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<T, Object>>
  nameWithType: Expression<Func<T, Object>>
  fullName: System.Linq.Expressions.Expression<System.Func<T, System.Object>>
  nameWithType.vb: Expression(Of Func(Of T, Object))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of T, System.Object))
  name.vb: Expression(Of Func(Of T, Object))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildInsertQueryWithOutputs*
  commentId: Overload:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildInsertQueryWithOutputs
  name: BuildInsertQueryWithOutputs
  nameWithType: ObjectToSqlHelper.BuildInsertQueryWithOutputs
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildInsertQueryWithOutputs
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildUpdateQuery*
  commentId: Overload:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildUpdateQuery
  name: BuildUpdateQuery
  nameWithType: ObjectToSqlHelper.BuildUpdateQuery
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildUpdateQuery
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildDeleteQuery*
  commentId: Overload:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildDeleteQuery
  name: BuildDeleteQuery
  nameWithType: ObjectToSqlHelper.BuildDeleteQuery
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildDeleteQuery
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildGetQuery*
  commentId: Overload:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildGetQuery
  name: BuildGetQuery
  nameWithType: ObjectToSqlHelper.BuildGetQuery
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildGetQuery
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildUpsertQuery*
  commentId: Overload:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildUpsertQuery
  name: BuildUpsertQuery
  nameWithType: ObjectToSqlHelper.BuildUpsertQuery
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildUpsertQuery
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.ConvertToDatabaseValue*
  commentId: Overload:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.ConvertToDatabaseValue
  name: ConvertToDatabaseValue
  nameWithType: ObjectToSqlHelper.ConvertToDatabaseValue
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.ConvertToDatabaseValue
- uid: DotNetHelper_Serializer.Extension.DynamicMember
  commentId: T:DotNetHelper_Serializer.Extension.DynamicMember
  parent: DotNetHelper_Serializer.Extension
  name: DynamicMember
  nameWithType: DynamicMember
  fullName: DotNetHelper_Serializer.Extension.DynamicMember
- uid: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildDbParameterList*
  commentId: Overload:DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildDbParameterList
  name: BuildDbParameterList
  nameWithType: ObjectToSqlHelper.BuildDbParameterList
  fullName: DotNetHelper_Serializer.Helper.ObjectToSqlHelper.BuildDbParameterList
- uid: DotNetHelper_Serializer.Interface.IXmlSerializer
  commentId: T:DotNetHelper_Serializer.Interface.IXmlSerializer
  parent: DotNetHelper_Serializer.Interface
  name: IXmlSerializer
  nameWithType: IXmlSerializer
  fullName: DotNetHelper_Serializer.Interface.IXmlSerializer
- uid: DotNetHelper_Serializer.Interface.IJsonSerializer
  commentId: T:DotNetHelper_Serializer.Interface.IJsonSerializer
  parent: DotNetHelper_Serializer.Interface
  name: IJsonSerializer
  nameWithType: IJsonSerializer
  fullName: DotNetHelper_Serializer.Interface.IJsonSerializer
- uid: DotNetHelper_Serializer.Interface.ICsvSerializer
  commentId: T:DotNetHelper_Serializer.Interface.ICsvSerializer
  parent: DotNetHelper_Serializer.Interface
  name: ICsvSerializer
  nameWithType: ICsvSerializer
  fullName: DotNetHelper_Serializer.Interface.ICsvSerializer
- uid: DotNetHelper_Serializer.Interface
  commentId: N:DotNetHelper_Serializer.Interface
  name: DotNetHelper_Serializer.Interface
  nameWithType: DotNetHelper_Serializer.Interface
  fullName: DotNetHelper_Serializer.Interface
