### YamlMime:ManagedReference
items:
- uid: DotNetHelper_Serializer.Extension.ExtString
  commentId: T:DotNetHelper_Serializer.Extension.ExtString
  id: ExtString
  parent: DotNetHelper_Serializer.Extension
  children:
  - DotNetHelper_Serializer.Extension.ExtString.GetJsonType(System.String)
  - DotNetHelper_Serializer.Extension.ExtString.IsValidJson(System.String,System.Type)
  - DotNetHelper_Serializer.Extension.ExtString.IsValidJson``1(System.String)
  - DotNetHelper_Serializer.Extension.ExtString.JsonToList``1(System.String,System.Boolean,Newtonsoft.Json.JsonSerializer,System.Boolean)
  langs:
  - csharp
  - vb
  name: ExtString
  nameWithType: ExtString
  fullName: DotNetHelper_Serializer.Extension.ExtString
  type: Class
  source:
    remote:
      path: src/DotNetHelper-Serializer/Extension/ExtString.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer
    id: ExtString
    path: ../src/DotNetHelper-Serializer/Extension/ExtString.cs
    startLine: 10
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.Extension
  syntax:
    content: public static class ExtString
    content.vb: Public Module ExtString
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: DotNetHelper_Serializer.Extension.ExtString.JsonToList``1(System.String,System.Boolean,Newtonsoft.Json.JsonSerializer,System.Boolean)
  commentId: M:DotNetHelper_Serializer.Extension.ExtString.JsonToList``1(System.String,System.Boolean,Newtonsoft.Json.JsonSerializer,System.Boolean)
  id: JsonToList``1(System.String,System.Boolean,Newtonsoft.Json.JsonSerializer,System.Boolean)
  isExtensionMethod: true
  parent: DotNetHelper_Serializer.Extension.ExtString
  langs:
  - csharp
  - vb
  name: JsonToList<T>(String, Boolean, JsonSerializer, Boolean)
  nameWithType: ExtString.JsonToList<T>(String, Boolean, JsonSerializer, Boolean)
  fullName: DotNetHelper_Serializer.Extension.ExtString.JsonToList<T>(System.String, System.Boolean, Newtonsoft.Json.JsonSerializer, System.Boolean)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/Extension/ExtString.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer
    id: JsonToList
    path: ../src/DotNetHelper-Serializer/Extension/ExtString.cs
    startLine: 19
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.Extension
  summary: "\nMaps Json to a list of T \n"
  example: []
  syntax:
    content: >-
      public static List<T> JsonToList<T>(this string json, bool throwOnError, JsonSerializer serializer = null, bool validateData = false)
          where T : class
    parameters:
    - id: json
      type: System.String
      description: ''
    - id: throwOnError
      type: System.Boolean
      description: if true return empty list on exception during parsing json
    - id: serializer
      type: Newtonsoft.Json.JsonSerializer
    - id: validateData
      type: System.Boolean
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Collections.Generic.List{{T}}
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function JsonToList(Of T As Class)(json As String, throwOnError As Boolean, serializer As JsonSerializer = Nothing, validateData As Boolean = False) As List(Of T)
  overload: DotNetHelper_Serializer.Extension.ExtString.JsonToList*
  nameWithType.vb: ExtString.JsonToList(Of T)(String, Boolean, JsonSerializer, Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DotNetHelper_Serializer.Extension.ExtString.JsonToList(Of T)(System.String, System.Boolean, Newtonsoft.Json.JsonSerializer, System.Boolean)
  name.vb: JsonToList(Of T)(String, Boolean, JsonSerializer, Boolean)
- uid: DotNetHelper_Serializer.Extension.ExtString.IsValidJson``1(System.String)
  commentId: M:DotNetHelper_Serializer.Extension.ExtString.IsValidJson``1(System.String)
  id: IsValidJson``1(System.String)
  isExtensionMethod: true
  parent: DotNetHelper_Serializer.Extension.ExtString
  langs:
  - csharp
  - vb
  name: IsValidJson<T>(String)
  nameWithType: ExtString.IsValidJson<T>(String)
  fullName: DotNetHelper_Serializer.Extension.ExtString.IsValidJson<T>(System.String)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/Extension/ExtString.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer
    id: IsValidJson
    path: ../src/DotNetHelper-Serializer/Extension/ExtString.cs
    startLine: 87
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.Extension
  syntax:
    content: public static bool IsValidJson<T>(this string strInput)
    parameters:
    - id: strInput
      type: System.String
    typeParameters:
    - id: T
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsValidJson(Of T)(strInput As String) As Boolean
  overload: DotNetHelper_Serializer.Extension.ExtString.IsValidJson*
  nameWithType.vb: ExtString.IsValidJson(Of T)(String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DotNetHelper_Serializer.Extension.ExtString.IsValidJson(Of T)(System.String)
  name.vb: IsValidJson(Of T)(String)
- uid: DotNetHelper_Serializer.Extension.ExtString.IsValidJson(System.String,System.Type)
  commentId: M:DotNetHelper_Serializer.Extension.ExtString.IsValidJson(System.String,System.Type)
  id: IsValidJson(System.String,System.Type)
  isExtensionMethod: true
  parent: DotNetHelper_Serializer.Extension.ExtString
  langs:
  - csharp
  - vb
  name: IsValidJson(String, Type)
  nameWithType: ExtString.IsValidJson(String, Type)
  fullName: DotNetHelper_Serializer.Extension.ExtString.IsValidJson(System.String, System.Type)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/Extension/ExtString.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer
    id: IsValidJson
    path: ../src/DotNetHelper-Serializer/Extension/ExtString.cs
    startLine: 108
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.Extension
  syntax:
    content: public static bool IsValidJson(this string strInput, Type type)
    parameters:
    - id: strInput
      type: System.String
    - id: type
      type: System.Type
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsValidJson(strInput As String, type As Type) As Boolean
  overload: DotNetHelper_Serializer.Extension.ExtString.IsValidJson*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DotNetHelper_Serializer.Extension.ExtString.GetJsonType(System.String)
  commentId: M:DotNetHelper_Serializer.Extension.ExtString.GetJsonType(System.String)
  id: GetJsonType(System.String)
  isExtensionMethod: true
  parent: DotNetHelper_Serializer.Extension.ExtString
  langs:
  - csharp
  - vb
  name: GetJsonType(String)
  nameWithType: ExtString.GetJsonType(String)
  fullName: DotNetHelper_Serializer.Extension.ExtString.GetJsonType(System.String)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/Extension/ExtString.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer
    id: GetJsonType
    path: ../src/DotNetHelper-Serializer/Extension/ExtString.cs
    startLine: 130
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.Extension
  syntax:
    content: public static JTokenType GetJsonType(this string strInput)
    parameters:
    - id: strInput
      type: System.String
    return:
      type: Newtonsoft.Json.Linq.JTokenType
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetJsonType(strInput As String) As JTokenType
  overload: DotNetHelper_Serializer.Extension.ExtString.GetJsonType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: DotNetHelper_Serializer.Extension
  commentId: N:DotNetHelper_Serializer.Extension
  name: DotNetHelper_Serializer.Extension
  nameWithType: DotNetHelper_Serializer.Extension
  fullName: DotNetHelper_Serializer.Extension
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DotNetHelper_Serializer.Extension.ExtString.JsonToList*
  commentId: Overload:DotNetHelper_Serializer.Extension.ExtString.JsonToList
  name: JsonToList
  nameWithType: ExtString.JsonToList
  fullName: DotNetHelper_Serializer.Extension.ExtString.JsonToList
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Newtonsoft.Json.JsonSerializer
  commentId: T:Newtonsoft.Json.JsonSerializer
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: Newtonsoft.Json.JsonSerializer
- uid: System.Collections.Generic.List{{T}}
  commentId: T:System.Collections.Generic.List{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json
  commentId: N:Newtonsoft.Json
  isExternal: true
  name: Newtonsoft.Json
  nameWithType: Newtonsoft.Json
  fullName: Newtonsoft.Json
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: DotNetHelper_Serializer.Extension.ExtString.IsValidJson*
  commentId: Overload:DotNetHelper_Serializer.Extension.ExtString.IsValidJson
  name: IsValidJson
  nameWithType: ExtString.IsValidJson
  fullName: DotNetHelper_Serializer.Extension.ExtString.IsValidJson
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: DotNetHelper_Serializer.Extension.ExtString.GetJsonType*
  commentId: Overload:DotNetHelper_Serializer.Extension.ExtString.GetJsonType
  name: GetJsonType
  nameWithType: ExtString.GetJsonType
  fullName: DotNetHelper_Serializer.Extension.ExtString.GetJsonType
- uid: Newtonsoft.Json.Linq.JTokenType
  commentId: T:Newtonsoft.Json.Linq.JTokenType
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JTokenType
  nameWithType: JTokenType
  fullName: Newtonsoft.Json.Linq.JTokenType
- uid: Newtonsoft.Json.Linq
  commentId: N:Newtonsoft.Json.Linq
  isExternal: true
  name: Newtonsoft.Json.Linq
  nameWithType: Newtonsoft.Json.Linq
  fullName: Newtonsoft.Json.Linq
