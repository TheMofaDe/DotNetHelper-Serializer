### YamlMime:ManagedReference
items:
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract
  commentId: T:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract
  id: XmlEnumContract
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts
  children:
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.#ctor(System.Type,DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlName,System.Collections.Generic.IEnumerable{DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumItem})
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.IsFlag
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.Items
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.UnderlyingType
  langs:
  - csharp
  - vb
  name: XmlEnumContract
  nameWithType: XmlEnumContract
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract
  type: Class
  source:
    remote:
      path: src/DotNetHelper-Serializer/DataSource/Xml/Contracts/XmlEnumContract.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer
    id: XmlEnumContract
    path: ../src/DotNetHelper-Serializer/DataSource/Xml/Contracts/XmlEnumContract.cs
    startLine: 5
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.DataSource.Xml.Contracts
  syntax:
    content: 'public sealed class XmlEnumContract : XmlContract'
    content.vb: >-
      Public NotInheritable Class XmlEnumContract
          Inherits XmlContract
  inheritance:
  - System.Object
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlContract
  inheritedMembers:
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlContract.ValueType
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlContract.Name
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlContract.GetDefaultMember
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.#ctor(System.Type,DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlName,System.Collections.Generic.IEnumerable{DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumItem})
  commentId: M:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.#ctor(System.Type,DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlName,System.Collections.Generic.IEnumerable{DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumItem})
  id: '#ctor(System.Type,DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlName,System.Collections.Generic.IEnumerable{DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumItem})'
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract
  langs:
  - csharp
  - vb
  name: XmlEnumContract(Type, XmlName, IEnumerable<XmlEnumItem>)
  nameWithType: XmlEnumContract.XmlEnumContract(Type, XmlName, IEnumerable<XmlEnumItem>)
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.XmlEnumContract(System.Type, DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlName, System.Collections.Generic.IEnumerable<DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumItem>)
  type: Constructor
  source:
    remote:
      path: src/DotNetHelper-Serializer/DataSource/Xml/Contracts/XmlEnumContract.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer
    id: .ctor
    path: ../src/DotNetHelper-Serializer/DataSource/Xml/Contracts/XmlEnumContract.cs
    startLine: 9
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.DataSource.Xml.Contracts
  syntax:
    content: public XmlEnumContract(Type valueType, XmlName name, IEnumerable<XmlEnumItem> items)
    parameters:
    - id: valueType
      type: System.Type
    - id: name
      type: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlName
    - id: items
      type: System.Collections.Generic.IEnumerable{DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumItem}
    content.vb: Public Sub New(valueType As Type, name As XmlName, items As IEnumerable(Of XmlEnumItem))
  overload: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.#ctor*
  nameWithType.vb: XmlEnumContract.XmlEnumContract(Type, XmlName, IEnumerable(Of XmlEnumItem))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.XmlEnumContract(System.Type, DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlName, System.Collections.Generic.IEnumerable(Of DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumItem))
  name.vb: XmlEnumContract(Type, XmlName, IEnumerable(Of XmlEnumItem))
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.UnderlyingType
  commentId: P:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.UnderlyingType
  id: UnderlyingType
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract
  langs:
  - csharp
  - vb
  name: UnderlyingType
  nameWithType: XmlEnumContract.UnderlyingType
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.UnderlyingType
  type: Property
  source:
    remote:
      path: src/DotNetHelper-Serializer/DataSource/Xml/Contracts/XmlEnumContract.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer
    id: UnderlyingType
    path: ../src/DotNetHelper-Serializer/DataSource/Xml/Contracts/XmlEnumContract.cs
    startLine: 27
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.DataSource.Xml.Contracts
  syntax:
    content: public Type UnderlyingType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public ReadOnly Property UnderlyingType As Type
  overload: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.UnderlyingType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.Items
  commentId: P:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.Items
  id: Items
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract
  langs:
  - csharp
  - vb
  name: Items
  nameWithType: XmlEnumContract.Items
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.Items
  type: Property
  source:
    remote:
      path: src/DotNetHelper-Serializer/DataSource/Xml/Contracts/XmlEnumContract.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer
    id: Items
    path: ../src/DotNetHelper-Serializer/DataSource/Xml/Contracts/XmlEnumContract.cs
    startLine: 29
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.DataSource.Xml.Contracts
  syntax:
    content: public IEnumerable<XmlEnumItem> Items { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumItem}
    content.vb: Public ReadOnly Property Items As IEnumerable(Of XmlEnumItem)
  overload: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.Items*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.IsFlag
  commentId: P:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.IsFlag
  id: IsFlag
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract
  langs:
  - csharp
  - vb
  name: IsFlag
  nameWithType: XmlEnumContract.IsFlag
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.IsFlag
  type: Property
  source:
    remote:
      path: src/DotNetHelper-Serializer/DataSource/Xml/Contracts/XmlEnumContract.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer
    id: IsFlag
    path: ../src/DotNetHelper-Serializer/DataSource/Xml/Contracts/XmlEnumContract.cs
    startLine: 31
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.DataSource.Xml.Contracts
  syntax:
    content: public bool IsFlag { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFlag As Boolean
  overload: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.IsFlag*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts
  commentId: N:DotNetHelper_Serializer.DataSource.Xml.Contracts
  name: DotNetHelper_Serializer.DataSource.Xml.Contracts
  nameWithType: DotNetHelper_Serializer.DataSource.Xml.Contracts
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlContract
  commentId: T:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlContract
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts
  name: XmlContract
  nameWithType: XmlContract
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlContract
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlContract.ValueType
  commentId: P:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlContract.ValueType
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlContract
  name: ValueType
  nameWithType: XmlContract.ValueType
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlContract.ValueType
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlContract.Name
  commentId: P:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlContract.Name
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlContract
  name: Name
  nameWithType: XmlContract.Name
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlContract.Name
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlContract.GetDefaultMember
  commentId: M:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlContract.GetDefaultMember
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlContract
  name: GetDefaultMember()
  nameWithType: XmlContract.GetDefaultMember()
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlContract.GetDefaultMember()
  spec.csharp:
  - uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlContract.GetDefaultMember
    name: GetDefaultMember
    nameWithType: XmlContract.GetDefaultMember
    fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlContract.GetDefaultMember
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlContract.GetDefaultMember
    name: GetDefaultMember
    nameWithType: XmlContract.GetDefaultMember
    fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlContract.GetDefaultMember
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1
  commentId: M:DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1(``0)
  parent: DotNetHelper_Serializer.Extension.TypeExtension
  definition: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1(``0)
  name: CanHaveNullValue<XmlEnumContract>()
  nameWithType: TypeExtension.CanHaveNullValue<XmlEnumContract>()
  fullName: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue<DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract>()
  nameWithType.vb: TypeExtension.CanHaveNullValue(Of XmlEnumContract)()
  fullName.vb: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue(Of DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract)()
  name.vb: CanHaveNullValue(Of XmlEnumContract)()
  spec.csharp:
  - uid: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1
    name: CanHaveNullValue<XmlEnumContract>
    nameWithType: TypeExtension.CanHaveNullValue<XmlEnumContract>
    fullName: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue<DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1
    name: CanHaveNullValue(Of XmlEnumContract)
    nameWithType: TypeExtension.CanHaveNullValue(Of XmlEnumContract)
    fullName: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue(Of DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1(``0)
  commentId: M:DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1(``0)
  name: CanHaveNullValue<T>(T)
  nameWithType: TypeExtension.CanHaveNullValue<T>(T)
  fullName: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue<T>(T)
  nameWithType.vb: TypeExtension.CanHaveNullValue(Of T)(T)
  fullName.vb: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue(Of T)(T)
  name.vb: CanHaveNullValue(Of T)(T)
  spec.csharp:
  - uid: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1(``0)
    name: CanHaveNullValue<T>
    nameWithType: TypeExtension.CanHaveNullValue<T>
    fullName: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1(``0)
    name: CanHaveNullValue(Of T)
    nameWithType: TypeExtension.CanHaveNullValue(Of T)
    fullName: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_Serializer.Extension.TypeExtension
  commentId: T:DotNetHelper_Serializer.Extension.TypeExtension
  parent: DotNetHelper_Serializer.Extension
  name: TypeExtension
  nameWithType: TypeExtension
  fullName: DotNetHelper_Serializer.Extension.TypeExtension
- uid: DotNetHelper_Serializer.Extension
  commentId: N:DotNetHelper_Serializer.Extension
  name: DotNetHelper_Serializer.Extension
  nameWithType: DotNetHelper_Serializer.Extension
  fullName: DotNetHelper_Serializer.Extension
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.#ctor*
  commentId: Overload:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.#ctor
  name: XmlEnumContract
  nameWithType: XmlEnumContract.XmlEnumContract
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.XmlEnumContract
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlName
  commentId: T:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlName
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts
  name: XmlName
  nameWithType: XmlName
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlName
- uid: System.Collections.Generic.IEnumerable{DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumItem}
  commentId: T:System.Collections.Generic.IEnumerable{DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<XmlEnumItem>
  nameWithType: IEnumerable<XmlEnumItem>
  fullName: System.Collections.Generic.IEnumerable<DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumItem>
  nameWithType.vb: IEnumerable(Of XmlEnumItem)
  fullName.vb: System.Collections.Generic.IEnumerable(Of DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumItem)
  name.vb: IEnumerable(Of XmlEnumItem)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumItem
    name: XmlEnumItem
    nameWithType: XmlEnumItem
    fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumItem
    name: XmlEnumItem
    nameWithType: XmlEnumItem
    fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.UnderlyingType*
  commentId: Overload:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.UnderlyingType
  name: UnderlyingType
  nameWithType: XmlEnumContract.UnderlyingType
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.UnderlyingType
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.Items*
  commentId: Overload:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.Items
  name: Items
  nameWithType: XmlEnumContract.Items
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.Items
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.IsFlag*
  commentId: Overload:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.IsFlag
  name: IsFlag
  nameWithType: XmlEnumContract.IsFlag
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.IsFlag
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
