### YamlMime:ManagedReference
items:
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember
  commentId: T:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember
  id: XmlMember
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts
  children:
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.DefaultValue
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.DefaultValueHandling
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.Item
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.KnownTypes
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.MappingType
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.Name
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.NullValueHandling
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.TypeHandling
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.ValueType
  langs:
  - csharp
  - vb
  name: XmlMember
  nameWithType: XmlMember
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember
  type: Class
  source:
    remote:
      path: src/DotNetHelper-Serializer/DataSource/Xml/Contracts/XmlMember.cs
      branch: UnitTest
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: XmlMember
    path: ../src/DotNetHelper-Serializer/DataSource/Xml/Contracts/XmlMember.cs
    startLine: 7
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.DataSource.Xml.Contracts
  syntax:
    content: public class XmlMember
    content.vb: Public Class XmlMember
  inheritance:
  - System.Object
  derivedClasses:
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlItem
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlKnownType
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlProperty
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.ValueType
  commentId: P:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.ValueType
  id: ValueType
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember
  langs:
  - csharp
  - vb
  name: ValueType
  nameWithType: XmlMember.ValueType
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.ValueType
  type: Property
  source:
    remote:
      path: src/DotNetHelper-Serializer/DataSource/Xml/Contracts/XmlMember.cs
      branch: UnitTest
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: ValueType
    path: ../src/DotNetHelper-Serializer/DataSource/Xml/Contracts/XmlMember.cs
    startLine: 82
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.DataSource.Xml.Contracts
  syntax:
    content: public Type ValueType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public ReadOnly Property ValueType As Type
  overload: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.ValueType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.Name
  commentId: P:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.Name
  id: Name
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: XmlMember.Name
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.Name
  type: Property
  source:
    remote:
      path: src/DotNetHelper-Serializer/DataSource/Xml/Contracts/XmlMember.cs
      branch: UnitTest
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: Name
    path: ../src/DotNetHelper-Serializer/DataSource/Xml/Contracts/XmlMember.cs
    startLine: 84
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.DataSource.Xml.Contracts
  syntax:
    content: public XmlName Name { get; }
    parameters: []
    return:
      type: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlName
    content.vb: Public ReadOnly Property Name As XmlName
  overload: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.MappingType
  commentId: P:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.MappingType
  id: MappingType
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember
  langs:
  - csharp
  - vb
  name: MappingType
  nameWithType: XmlMember.MappingType
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.MappingType
  type: Property
  source:
    remote:
      path: src/DotNetHelper-Serializer/DataSource/Xml/Contracts/XmlMember.cs
      branch: UnitTest
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: MappingType
    path: ../src/DotNetHelper-Serializer/DataSource/Xml/Contracts/XmlMember.cs
    startLine: 86
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.DataSource.Xml.Contracts
  syntax:
    content: public XmlMappingType MappingType { get; }
    parameters: []
    return:
      type: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMappingType
    content.vb: Public ReadOnly Property MappingType As XmlMappingType
  overload: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.MappingType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.TypeHandling
  commentId: P:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.TypeHandling
  id: TypeHandling
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember
  langs:
  - csharp
  - vb
  name: TypeHandling
  nameWithType: XmlMember.TypeHandling
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.TypeHandling
  type: Property
  source:
    remote:
      path: src/DotNetHelper-Serializer/DataSource/Xml/Contracts/XmlMember.cs
      branch: UnitTest
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: TypeHandling
    path: ../src/DotNetHelper-Serializer/DataSource/Xml/Contracts/XmlMember.cs
    startLine: 88
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.DataSource.Xml.Contracts
  syntax:
    content: public XmlTypeHandling? TypeHandling { get; }
    parameters: []
    return:
      type: System.Nullable{DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlTypeHandling}
    content.vb: Public ReadOnly Property TypeHandling As XmlTypeHandling?
  overload: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.TypeHandling*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.NullValueHandling
  commentId: P:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.NullValueHandling
  id: NullValueHandling
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember
  langs:
  - csharp
  - vb
  name: NullValueHandling
  nameWithType: XmlMember.NullValueHandling
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.NullValueHandling
  type: Property
  source:
    remote:
      path: src/DotNetHelper-Serializer/DataSource/Xml/Contracts/XmlMember.cs
      branch: UnitTest
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: NullValueHandling
    path: ../src/DotNetHelper-Serializer/DataSource/Xml/Contracts/XmlMember.cs
    startLine: 90
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.DataSource.Xml.Contracts
  syntax:
    content: public XmlNullValueHandling? NullValueHandling { get; }
    parameters: []
    return:
      type: System.Nullable{DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlNullValueHandling}
    content.vb: Public ReadOnly Property NullValueHandling As XmlNullValueHandling?
  overload: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.NullValueHandling*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.DefaultValueHandling
  commentId: P:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.DefaultValueHandling
  id: DefaultValueHandling
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember
  langs:
  - csharp
  - vb
  name: DefaultValueHandling
  nameWithType: XmlMember.DefaultValueHandling
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.DefaultValueHandling
  type: Property
  source:
    remote:
      path: src/DotNetHelper-Serializer/DataSource/Xml/Contracts/XmlMember.cs
      branch: UnitTest
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: DefaultValueHandling
    path: ../src/DotNetHelper-Serializer/DataSource/Xml/Contracts/XmlMember.cs
    startLine: 92
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.DataSource.Xml.Contracts
  syntax:
    content: public XmlDefaultValueHandling? DefaultValueHandling { get; }
    parameters: []
    return:
      type: System.Nullable{DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlDefaultValueHandling}
    content.vb: Public ReadOnly Property DefaultValueHandling As XmlDefaultValueHandling?
  overload: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.DefaultValueHandling*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.DefaultValue
  commentId: P:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.DefaultValue
  id: DefaultValue
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember
  langs:
  - csharp
  - vb
  name: DefaultValue
  nameWithType: XmlMember.DefaultValue
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.DefaultValue
  type: Property
  source:
    remote:
      path: src/DotNetHelper-Serializer/DataSource/Xml/Contracts/XmlMember.cs
      branch: UnitTest
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: DefaultValue
    path: ../src/DotNetHelper-Serializer/DataSource/Xml/Contracts/XmlMember.cs
    startLine: 94
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.DataSource.Xml.Contracts
  syntax:
    content: public object DefaultValue { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property DefaultValue As Object
  overload: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.DefaultValue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.Item
  commentId: P:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.Item
  id: Item
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember
  langs:
  - csharp
  - vb
  name: Item
  nameWithType: XmlMember.Item
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.Item
  type: Property
  source:
    remote:
      path: src/DotNetHelper-Serializer/DataSource/Xml/Contracts/XmlMember.cs
      branch: UnitTest
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: Item
    path: ../src/DotNetHelper-Serializer/DataSource/Xml/Contracts/XmlMember.cs
    startLine: 96
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.DataSource.Xml.Contracts
  syntax:
    content: public XmlItem Item { get; }
    parameters: []
    return:
      type: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlItem
    content.vb: Public ReadOnly Property Item As XmlItem
  overload: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.Item*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.KnownTypes
  commentId: P:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.KnownTypes
  id: KnownTypes
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember
  langs:
  - csharp
  - vb
  name: KnownTypes
  nameWithType: XmlMember.KnownTypes
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.KnownTypes
  type: Property
  source:
    remote:
      path: src/DotNetHelper-Serializer/DataSource/Xml/Contracts/XmlMember.cs
      branch: UnitTest
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: KnownTypes
    path: ../src/DotNetHelper-Serializer/DataSource/Xml/Contracts/XmlMember.cs
    startLine: 98
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.DataSource.Xml.Contracts
  syntax:
    content: public IReadOnlyList<XmlKnownType> KnownTypes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlKnownType}
    content.vb: Public ReadOnly Property KnownTypes As IReadOnlyList(Of XmlKnownType)
  overload: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.KnownTypes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts
  commentId: N:DotNetHelper_Serializer.DataSource.Xml.Contracts
  name: DotNetHelper_Serializer.DataSource.Xml.Contracts
  nameWithType: DotNetHelper_Serializer.DataSource.Xml.Contracts
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1
  commentId: M:DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1(``0)
  parent: DotNetHelper_Serializer.Extension.TypeExtension
  definition: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1(``0)
  name: CanHaveNullValue<XmlMember>()
  nameWithType: TypeExtension.CanHaveNullValue<XmlMember>()
  fullName: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue<DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember>()
  nameWithType.vb: TypeExtension.CanHaveNullValue(Of XmlMember)()
  fullName.vb: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue(Of DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember)()
  name.vb: CanHaveNullValue(Of XmlMember)()
  spec.csharp:
  - uid: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1
    name: CanHaveNullValue<XmlMember>
    nameWithType: TypeExtension.CanHaveNullValue<XmlMember>
    fullName: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue<DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1
    name: CanHaveNullValue(Of XmlMember)
    nameWithType: TypeExtension.CanHaveNullValue(Of XmlMember)
    fullName: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue(Of DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1(``0)
  commentId: M:DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1(``0)
  name: CanHaveNullValue<T>(T)
  nameWithType: TypeExtension.CanHaveNullValue<T>(T)
  fullName: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue<T>(T)
  nameWithType.vb: TypeExtension.CanHaveNullValue(Of T)(T)
  fullName.vb: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue(Of T)(T)
  name.vb: CanHaveNullValue(Of T)(T)
  spec.csharp:
  - uid: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1(``0)
    name: CanHaveNullValue<T>
    nameWithType: TypeExtension.CanHaveNullValue<T>
    fullName: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1(``0)
    name: CanHaveNullValue(Of T)
    nameWithType: TypeExtension.CanHaveNullValue(Of T)
    fullName: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_Serializer.Extension.TypeExtension
  commentId: T:DotNetHelper_Serializer.Extension.TypeExtension
  parent: DotNetHelper_Serializer.Extension
  name: TypeExtension
  nameWithType: TypeExtension
  fullName: DotNetHelper_Serializer.Extension.TypeExtension
- uid: DotNetHelper_Serializer.Extension
  commentId: N:DotNetHelper_Serializer.Extension
  name: DotNetHelper_Serializer.Extension
  nameWithType: DotNetHelper_Serializer.Extension
  fullName: DotNetHelper_Serializer.Extension
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.ValueType*
  commentId: Overload:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.ValueType
  name: ValueType
  nameWithType: XmlMember.ValueType
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.ValueType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.Name*
  commentId: Overload:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.Name
  name: Name
  nameWithType: XmlMember.Name
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.Name
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlName
  commentId: T:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlName
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts
  name: XmlName
  nameWithType: XmlName
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlName
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.MappingType*
  commentId: Overload:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.MappingType
  name: MappingType
  nameWithType: XmlMember.MappingType
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.MappingType
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMappingType
  commentId: T:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMappingType
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts
  name: XmlMappingType
  nameWithType: XmlMappingType
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMappingType
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.TypeHandling*
  commentId: Overload:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.TypeHandling
  name: TypeHandling
  nameWithType: XmlMember.TypeHandling
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.TypeHandling
- uid: System.Nullable{DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlTypeHandling}
  commentId: T:System.Nullable{DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlTypeHandling}
  parent: System
  definition: System.Nullable`1
  name: Nullable<XmlTypeHandling>
  nameWithType: Nullable<XmlTypeHandling>
  fullName: System.Nullable<DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlTypeHandling>
  nameWithType.vb: Nullable(Of XmlTypeHandling)
  fullName.vb: System.Nullable(Of DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlTypeHandling)
  name.vb: Nullable(Of XmlTypeHandling)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlTypeHandling
    name: XmlTypeHandling
    nameWithType: XmlTypeHandling
    fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlTypeHandling
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlTypeHandling
    name: XmlTypeHandling
    nameWithType: XmlTypeHandling
    fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlTypeHandling
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.NullValueHandling*
  commentId: Overload:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.NullValueHandling
  name: NullValueHandling
  nameWithType: XmlMember.NullValueHandling
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.NullValueHandling
- uid: System.Nullable{DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlNullValueHandling}
  commentId: T:System.Nullable{DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlNullValueHandling}
  parent: System
  definition: System.Nullable`1
  name: Nullable<XmlNullValueHandling>
  nameWithType: Nullable<XmlNullValueHandling>
  fullName: System.Nullable<DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlNullValueHandling>
  nameWithType.vb: Nullable(Of XmlNullValueHandling)
  fullName.vb: System.Nullable(Of DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlNullValueHandling)
  name.vb: Nullable(Of XmlNullValueHandling)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlNullValueHandling
    name: XmlNullValueHandling
    nameWithType: XmlNullValueHandling
    fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlNullValueHandling
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlNullValueHandling
    name: XmlNullValueHandling
    nameWithType: XmlNullValueHandling
    fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlNullValueHandling
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.DefaultValueHandling*
  commentId: Overload:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.DefaultValueHandling
  name: DefaultValueHandling
  nameWithType: XmlMember.DefaultValueHandling
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.DefaultValueHandling
- uid: System.Nullable{DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlDefaultValueHandling}
  commentId: T:System.Nullable{DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlDefaultValueHandling}
  parent: System
  definition: System.Nullable`1
  name: Nullable<XmlDefaultValueHandling>
  nameWithType: Nullable<XmlDefaultValueHandling>
  fullName: System.Nullable<DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlDefaultValueHandling>
  nameWithType.vb: Nullable(Of XmlDefaultValueHandling)
  fullName.vb: System.Nullable(Of DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlDefaultValueHandling)
  name.vb: Nullable(Of XmlDefaultValueHandling)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlDefaultValueHandling
    name: XmlDefaultValueHandling
    nameWithType: XmlDefaultValueHandling
    fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlDefaultValueHandling
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlDefaultValueHandling
    name: XmlDefaultValueHandling
    nameWithType: XmlDefaultValueHandling
    fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlDefaultValueHandling
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.DefaultValue*
  commentId: Overload:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.DefaultValue
  name: DefaultValue
  nameWithType: XmlMember.DefaultValue
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.DefaultValue
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.Item*
  commentId: Overload:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.Item
  name: Item
  nameWithType: XmlMember.Item
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.Item
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlItem
  commentId: T:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlItem
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts
  name: XmlItem
  nameWithType: XmlItem
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlItem
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.KnownTypes*
  commentId: Overload:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.KnownTypes
  name: KnownTypes
  nameWithType: XmlMember.KnownTypes
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.KnownTypes
- uid: System.Collections.Generic.IReadOnlyList{DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlKnownType}
  commentId: T:System.Collections.Generic.IReadOnlyList{DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlKnownType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<XmlKnownType>
  nameWithType: IReadOnlyList<XmlKnownType>
  fullName: System.Collections.Generic.IReadOnlyList<DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlKnownType>
  nameWithType.vb: IReadOnlyList(Of XmlKnownType)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlKnownType)
  name.vb: IReadOnlyList(Of XmlKnownType)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlKnownType
    name: XmlKnownType
    nameWithType: XmlKnownType
    fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlKnownType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlKnownType
    name: XmlKnownType
    nameWithType: XmlKnownType
    fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlKnownType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
