### YamlMime:ManagedReference
items:
- uid: DotNetHelper_Serializer.Extension.ExtDataTable
  commentId: T:DotNetHelper_Serializer.Extension.ExtDataTable
  id: ExtDataTable
  parent: DotNetHelper_Serializer.Extension
  children:
  - DotNetHelper_Serializer.Extension.ExtDataTable.MapToType``1(System.Data.DataRow)
  - DotNetHelper_Serializer.Extension.ExtDataTable.SetColumnPosition(System.Data.DataTable,System.String,System.Int32)
  - DotNetHelper_Serializer.Extension.ExtDataTable.SetColumnsOrder(System.Data.DataTable,System.String[])
  langs:
  - csharp
  - vb
  name: ExtDataTable
  nameWithType: ExtDataTable
  fullName: DotNetHelper_Serializer.Extension.ExtDataTable
  type: Class
  source:
    remote:
      path: src/DotNetHelper-Serializer/Extension/ExtDataTable.cs
      branch: UnitTest
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: ExtDataTable
    path: ../src/DotNetHelper-Serializer/Extension/ExtDataTable.cs
    startLine: 5
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.Extension
  syntax:
    content: public static class ExtDataTable
    content.vb: Public Module ExtDataTable
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: DotNetHelper_Serializer.Extension.ExtDataTable.SetColumnsOrder(System.Data.DataTable,System.String[])
  commentId: M:DotNetHelper_Serializer.Extension.ExtDataTable.SetColumnsOrder(System.Data.DataTable,System.String[])
  id: SetColumnsOrder(System.Data.DataTable,System.String[])
  isExtensionMethod: true
  parent: DotNetHelper_Serializer.Extension.ExtDataTable
  langs:
  - csharp
  - vb
  name: SetColumnsOrder(DataTable, String[])
  nameWithType: ExtDataTable.SetColumnsOrder(DataTable, String[])
  fullName: DotNetHelper_Serializer.Extension.ExtDataTable.SetColumnsOrder(System.Data.DataTable, System.String[])
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/Extension/ExtDataTable.cs
      branch: UnitTest
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: SetColumnsOrder
    path: ../src/DotNetHelper-Serializer/Extension/ExtDataTable.cs
    startLine: 14
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.Extension
  summary: "\nSetOrdinal of DataTable columns based on the index of the columnNames array. Removes invalid column names first.\n"
  remarks: 'http://stackoverflow.com/questions/3757997/how-to-change-datatable-colums-order '
  example: []
  syntax:
    content: public static void SetColumnsOrder(this DataTable table, params string[] columnNames)
    parameters:
    - id: table
      type: System.Data.DataTable
      description: ''
    - id: columnNames
      type: System.String[]
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SetColumnsOrder(table As DataTable, ParamArray columnNames As String())
  overload: DotNetHelper_Serializer.Extension.ExtDataTable.SetColumnsOrder*
  nameWithType.vb: ExtDataTable.SetColumnsOrder(DataTable, String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DotNetHelper_Serializer.Extension.ExtDataTable.SetColumnsOrder(System.Data.DataTable, System.String())
  name.vb: SetColumnsOrder(DataTable, String())
- uid: DotNetHelper_Serializer.Extension.ExtDataTable.SetColumnPosition(System.Data.DataTable,System.String,System.Int32)
  commentId: M:DotNetHelper_Serializer.Extension.ExtDataTable.SetColumnPosition(System.Data.DataTable,System.String,System.Int32)
  id: SetColumnPosition(System.Data.DataTable,System.String,System.Int32)
  isExtensionMethod: true
  parent: DotNetHelper_Serializer.Extension.ExtDataTable
  langs:
  - csharp
  - vb
  name: SetColumnPosition(DataTable, String, Int32)
  nameWithType: ExtDataTable.SetColumnPosition(DataTable, String, Int32)
  fullName: DotNetHelper_Serializer.Extension.ExtDataTable.SetColumnPosition(System.Data.DataTable, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/Extension/ExtDataTable.cs
      branch: UnitTest
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: SetColumnPosition
    path: ../src/DotNetHelper-Serializer/Extension/ExtDataTable.cs
    startLine: 40
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.Extension
  summary: "\nSetOrdinal of DataTable columns based on the index of the columnNames array. Removes invalid column names first.\n"
  remarks: http://stackoverflow.com/questions/3757997/how-to-change-datatable-colums-order
  example: []
  syntax:
    content: public static bool SetColumnPosition(this DataTable table, string columnName, int position)
    parameters:
    - id: table
      type: System.Data.DataTable
      description: ''
    - id: columnName
      type: System.String
    - id: position
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetColumnPosition(table As DataTable, columnName As String, position As Integer) As Boolean
  overload: DotNetHelper_Serializer.Extension.ExtDataTable.SetColumnPosition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DotNetHelper_Serializer.Extension.ExtDataTable.MapToType``1(System.Data.DataRow)
  commentId: M:DotNetHelper_Serializer.Extension.ExtDataTable.MapToType``1(System.Data.DataRow)
  id: MapToType``1(System.Data.DataRow)
  isExtensionMethod: true
  parent: DotNetHelper_Serializer.Extension.ExtDataTable
  langs:
  - csharp
  - vb
  name: MapToType<T>(DataRow)
  nameWithType: ExtDataTable.MapToType<T>(DataRow)
  fullName: DotNetHelper_Serializer.Extension.ExtDataTable.MapToType<T>(System.Data.DataRow)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/Extension/ExtDataTable.cs
      branch: UnitTest
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: MapToType
    path: ../src/DotNetHelper-Serializer/Extension/ExtDataTable.cs
    startLine: 61
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.Extension
  summary: "\n\n"
  example: []
  syntax:
    content: >-
      public static T MapToType<T>(this DataRow row)
          where T : class
    parameters:
    - id: row
      type: System.Data.DataRow
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}'
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function MapToType(Of T As Class)(row As DataRow) As T
  overload: DotNetHelper_Serializer.Extension.ExtDataTable.MapToType*
  nameWithType.vb: ExtDataTable.MapToType(Of T)(DataRow)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: DotNetHelper_Serializer.Extension.ExtDataTable.MapToType(Of T)(System.Data.DataRow)
  name.vb: MapToType(Of T)(DataRow)
references:
- uid: DotNetHelper_Serializer.Extension
  commentId: N:DotNetHelper_Serializer.Extension
  name: DotNetHelper_Serializer.Extension
  nameWithType: DotNetHelper_Serializer.Extension
  fullName: DotNetHelper_Serializer.Extension
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DotNetHelper_Serializer.Extension.ExtDataTable.SetColumnsOrder*
  commentId: Overload:DotNetHelper_Serializer.Extension.ExtDataTable.SetColumnsOrder
  name: SetColumnsOrder
  nameWithType: ExtDataTable.SetColumnsOrder
  fullName: DotNetHelper_Serializer.Extension.ExtDataTable.SetColumnsOrder
- uid: System.Data.DataTable
  commentId: T:System.Data.DataTable
  parent: System.Data
  isExternal: true
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Data
  commentId: N:System.Data
  isExternal: true
  name: System.Data
  nameWithType: System.Data
  fullName: System.Data
- uid: DotNetHelper_Serializer.Extension.ExtDataTable.SetColumnPosition*
  commentId: Overload:DotNetHelper_Serializer.Extension.ExtDataTable.SetColumnPosition
  name: SetColumnPosition
  nameWithType: ExtDataTable.SetColumnPosition
  fullName: DotNetHelper_Serializer.Extension.ExtDataTable.SetColumnPosition
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: DotNetHelper_Serializer.Extension.ExtDataTable.MapToType*
  commentId: Overload:DotNetHelper_Serializer.Extension.ExtDataTable.MapToType
  name: MapToType
  nameWithType: ExtDataTable.MapToType
  fullName: DotNetHelper_Serializer.Extension.ExtDataTable.MapToType
- uid: System.Data.DataRow
  commentId: T:System.Data.DataRow
  parent: System.Data
  isExternal: true
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
