### YamlMime:ManagedReference
items:
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions
  commentId: T:DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions
  id: NamingConventions
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts
  children:
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.CamelCase(System.String)
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.Dashed(System.String)
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.Ignore(System.String)
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.Underscore(System.String)
  langs:
  - csharp
  - vb
  name: NamingConventions
  nameWithType: NamingConventions
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions
  type: Class
  source:
    remote:
      path: src/DotNetHelper-Serializer/DataSource/Xml/Contracts/NamingConventions.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer
    id: NamingConventions
    path: ../src/DotNetHelper-Serializer/DataSource/Xml/Contracts/NamingConventions.cs
    startLine: 5
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.DataSource.Xml.Contracts
  syntax:
    content: public static class NamingConventions
    content.vb: Public Module NamingConventions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.Ignore(System.String)
  commentId: M:DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.Ignore(System.String)
  id: Ignore(System.String)
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions
  langs:
  - csharp
  - vb
  name: Ignore(String)
  nameWithType: NamingConventions.Ignore(String)
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.Ignore(System.String)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/DataSource/Xml/Contracts/NamingConventions.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer
    id: Ignore
    path: ../src/DotNetHelper-Serializer/DataSource/Xml/Contracts/NamingConventions.cs
    startLine: 7
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.DataSource.Xml.Contracts
  syntax:
    content: public static string Ignore(string value)
    parameters:
    - id: value
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function Ignore(value As String) As String
  overload: DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.Ignore*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.CamelCase(System.String)
  commentId: M:DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.CamelCase(System.String)
  id: CamelCase(System.String)
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions
  langs:
  - csharp
  - vb
  name: CamelCase(String)
  nameWithType: NamingConventions.CamelCase(String)
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.CamelCase(System.String)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/DataSource/Xml/Contracts/NamingConventions.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer
    id: CamelCase
    path: ../src/DotNetHelper-Serializer/DataSource/Xml/Contracts/NamingConventions.cs
    startLine: 12
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.DataSource.Xml.Contracts
  syntax:
    content: public static string CamelCase(string value)
    parameters:
    - id: value
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function CamelCase(value As String) As String
  overload: DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.CamelCase*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.Dashed(System.String)
  commentId: M:DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.Dashed(System.String)
  id: Dashed(System.String)
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions
  langs:
  - csharp
  - vb
  name: Dashed(String)
  nameWithType: NamingConventions.Dashed(String)
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.Dashed(System.String)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/DataSource/Xml/Contracts/NamingConventions.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer
    id: Dashed
    path: ../src/DotNetHelper-Serializer/DataSource/Xml/Contracts/NamingConventions.cs
    startLine: 32
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.DataSource.Xml.Contracts
  syntax:
    content: public static string Dashed(string value)
    parameters:
    - id: value
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function Dashed(value As String) As String
  overload: DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.Dashed*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.Underscore(System.String)
  commentId: M:DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.Underscore(System.String)
  id: Underscore(System.String)
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions
  langs:
  - csharp
  - vb
  name: Underscore(String)
  nameWithType: NamingConventions.Underscore(String)
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.Underscore(System.String)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/DataSource/Xml/Contracts/NamingConventions.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer
    id: Underscore
    path: ../src/DotNetHelper-Serializer/DataSource/Xml/Contracts/NamingConventions.cs
    startLine: 37
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.DataSource.Xml.Contracts
  syntax:
    content: public static string Underscore(string value)
    parameters:
    - id: value
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function Underscore(value As String) As String
  overload: DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.Underscore*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts
  commentId: N:DotNetHelper_Serializer.DataSource.Xml.Contracts
  name: DotNetHelper_Serializer.DataSource.Xml.Contracts
  nameWithType: DotNetHelper_Serializer.DataSource.Xml.Contracts
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.Ignore*
  commentId: Overload:DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.Ignore
  name: Ignore
  nameWithType: NamingConventions.Ignore
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.Ignore
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.CamelCase*
  commentId: Overload:DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.CamelCase
  name: CamelCase
  nameWithType: NamingConventions.CamelCase
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.CamelCase
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.Dashed*
  commentId: Overload:DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.Dashed
  name: Dashed
  nameWithType: NamingConventions.Dashed
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.Dashed
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.Underscore*
  commentId: Overload:DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.Underscore
  name: Underscore
  nameWithType: NamingConventions.Underscore
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.Underscore
