### YamlMime:ManagedReference
items:
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection
  commentId: T:DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection
  id: XmlKnownTypeBuilderCollection
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders
  children:
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.#ctor
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.#ctor(System.Collections.Generic.IEnumerable{DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder})
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Add(DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder)
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Add(System.Type,DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlName)
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Build
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Contains(System.Type)
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Count
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.GetEnumerator
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Remove(System.Type)
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Set(DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder)
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  - vb
  name: XmlKnownTypeBuilderCollection
  nameWithType: XmlKnownTypeBuilderCollection
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection
  type: Class
  source:
    remote:
      path: src/DotNetHelper-Serializer/DataSource/Xml/Contracts/Builders/XmlKnownTypeBuilderCollection.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: XmlKnownTypeBuilderCollection
    path: ../src/DotNetHelper-Serializer/DataSource/Xml/Contracts/Builders/XmlKnownTypeBuilderCollection.cs
    startLine: 6
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders
  syntax:
    content: 'public sealed class XmlKnownTypeBuilderCollection : IEnumerable<XmlKnownTypeBuilder>, IEnumerable'
    content.vb: >-
      Public NotInheritable Class XmlKnownTypeBuilderCollection
          Implements IEnumerable(Of XmlKnownTypeBuilder), IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.#ctor
  commentId: M:DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.#ctor
  id: '#ctor'
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection
  langs:
  - csharp
  - vb
  name: XmlKnownTypeBuilderCollection()
  nameWithType: XmlKnownTypeBuilderCollection.XmlKnownTypeBuilderCollection()
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.XmlKnownTypeBuilderCollection()
  type: Constructor
  source:
    remote:
      path: src/DotNetHelper-Serializer/DataSource/Xml/Contracts/Builders/XmlKnownTypeBuilderCollection.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: .ctor
    path: ../src/DotNetHelper-Serializer/DataSource/Xml/Contracts/Builders/XmlKnownTypeBuilderCollection.cs
    startLine: 10
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders
  syntax:
    content: public XmlKnownTypeBuilderCollection()
    content.vb: Public Sub New
  overload: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.#ctor(System.Collections.Generic.IEnumerable{DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder})
  commentId: M:DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.#ctor(System.Collections.Generic.IEnumerable{DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder})
  id: '#ctor(System.Collections.Generic.IEnumerable{DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder})'
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection
  langs:
  - csharp
  - vb
  name: XmlKnownTypeBuilderCollection(IEnumerable<XmlKnownTypeBuilder>)
  nameWithType: XmlKnownTypeBuilderCollection.XmlKnownTypeBuilderCollection(IEnumerable<XmlKnownTypeBuilder>)
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.XmlKnownTypeBuilderCollection(System.Collections.Generic.IEnumerable<DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder>)
  type: Constructor
  source:
    remote:
      path: src/DotNetHelper-Serializer/DataSource/Xml/Contracts/Builders/XmlKnownTypeBuilderCollection.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: .ctor
    path: ../src/DotNetHelper-Serializer/DataSource/Xml/Contracts/Builders/XmlKnownTypeBuilderCollection.cs
    startLine: 15
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders
  syntax:
    content: public XmlKnownTypeBuilderCollection(IEnumerable<XmlKnownTypeBuilder> items)
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder}
    content.vb: Public Sub New(items As IEnumerable(Of XmlKnownTypeBuilder))
  overload: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.#ctor*
  nameWithType.vb: XmlKnownTypeBuilderCollection.XmlKnownTypeBuilderCollection(IEnumerable(Of XmlKnownTypeBuilder))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.XmlKnownTypeBuilderCollection(System.Collections.Generic.IEnumerable(Of DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder))
  name.vb: XmlKnownTypeBuilderCollection(IEnumerable(Of XmlKnownTypeBuilder))
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Count
  commentId: P:DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Count
  id: Count
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: XmlKnownTypeBuilderCollection.Count
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Count
  type: Property
  source:
    remote:
      path: src/DotNetHelper-Serializer/DataSource/Xml/Contracts/Builders/XmlKnownTypeBuilderCollection.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: Count
    path: ../src/DotNetHelper-Serializer/DataSource/Xml/Contracts/Builders/XmlKnownTypeBuilderCollection.cs
    startLine: 25
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Add(System.Type,DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlName)
  commentId: M:DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Add(System.Type,DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlName)
  id: Add(System.Type,DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlName)
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection
  langs:
  - csharp
  - vb
  name: Add(Type, XmlName)
  nameWithType: XmlKnownTypeBuilderCollection.Add(Type, XmlName)
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Add(System.Type, DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlName)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/DataSource/Xml/Contracts/Builders/XmlKnownTypeBuilderCollection.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: Add
    path: ../src/DotNetHelper-Serializer/DataSource/Xml/Contracts/Builders/XmlKnownTypeBuilderCollection.cs
    startLine: 27
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders
  syntax:
    content: public void Add(Type valueType, XmlName name)
    parameters:
    - id: valueType
      type: System.Type
    - id: name
      type: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlName
    content.vb: Public Sub Add(valueType As Type, name As XmlName)
  overload: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Add(DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder)
  commentId: M:DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Add(DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder)
  id: Add(DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder)
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection
  langs:
  - csharp
  - vb
  name: Add(XmlKnownTypeBuilder)
  nameWithType: XmlKnownTypeBuilderCollection.Add(XmlKnownTypeBuilder)
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Add(DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/DataSource/Xml/Contracts/Builders/XmlKnownTypeBuilderCollection.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: Add
    path: ../src/DotNetHelper-Serializer/DataSource/Xml/Contracts/Builders/XmlKnownTypeBuilderCollection.cs
    startLine: 33
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders
  syntax:
    content: public void Add(XmlKnownTypeBuilder item)
    parameters:
    - id: item
      type: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder
    content.vb: Public Sub Add(item As XmlKnownTypeBuilder)
  overload: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Set(DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder)
  commentId: M:DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Set(DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder)
  id: Set(DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder)
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection
  langs:
  - csharp
  - vb
  name: Set(XmlKnownTypeBuilder)
  nameWithType: XmlKnownTypeBuilderCollection.Set(XmlKnownTypeBuilder)
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Set(DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/DataSource/Xml/Contracts/Builders/XmlKnownTypeBuilderCollection.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: Set
    path: ../src/DotNetHelper-Serializer/DataSource/Xml/Contracts/Builders/XmlKnownTypeBuilderCollection.cs
    startLine: 50
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders
  syntax:
    content: public void Set(XmlKnownTypeBuilder item)
    parameters:
    - id: item
      type: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder
    content.vb: Public Sub Set(item As XmlKnownTypeBuilder)
  overload: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Set*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Contains(System.Type)
  commentId: M:DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Contains(System.Type)
  id: Contains(System.Type)
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection
  langs:
  - csharp
  - vb
  name: Contains(Type)
  nameWithType: XmlKnownTypeBuilderCollection.Contains(Type)
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Contains(System.Type)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/DataSource/Xml/Contracts/Builders/XmlKnownTypeBuilderCollection.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: Contains
    path: ../src/DotNetHelper-Serializer/DataSource/Xml/Contracts/Builders/XmlKnownTypeBuilderCollection.cs
    startLine: 69
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders
  syntax:
    content: public bool Contains(Type valueType)
    parameters:
    - id: valueType
      type: System.Type
    return:
      type: System.Boolean
    content.vb: Public Function Contains(valueType As Type) As Boolean
  overload: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Remove(System.Type)
  commentId: M:DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Remove(System.Type)
  id: Remove(System.Type)
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection
  langs:
  - csharp
  - vb
  name: Remove(Type)
  nameWithType: XmlKnownTypeBuilderCollection.Remove(Type)
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Remove(System.Type)
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/DataSource/Xml/Contracts/Builders/XmlKnownTypeBuilderCollection.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: Remove
    path: ../src/DotNetHelper-Serializer/DataSource/Xml/Contracts/Builders/XmlKnownTypeBuilderCollection.cs
    startLine: 74
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders
  syntax:
    content: public bool Remove(Type valueType)
    parameters:
    - id: valueType
      type: System.Type
    return:
      type: System.Boolean
    content.vb: Public Function Remove(valueType As Type) As Boolean
  overload: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Remove*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Build
  commentId: M:DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Build
  id: Build
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: XmlKnownTypeBuilderCollection.Build()
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Build()
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/DataSource/Xml/Contracts/Builders/XmlKnownTypeBuilderCollection.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: Build
    path: ../src/DotNetHelper-Serializer/DataSource/Xml/Contracts/Builders/XmlKnownTypeBuilderCollection.cs
    startLine: 87
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders
  syntax:
    content: public IEnumerable<XmlKnownType> Build()
    return:
      type: System.Collections.Generic.IEnumerable{DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlKnownType}
    content.vb: Public Function Build As IEnumerable(Of XmlKnownType)
  overload: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Build*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.GetEnumerator
  commentId: M:DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.GetEnumerator
  id: GetEnumerator
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: XmlKnownTypeBuilderCollection.GetEnumerator()
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/DataSource/Xml/Contracts/Builders/XmlKnownTypeBuilderCollection.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: GetEnumerator
    path: ../src/DotNetHelper-Serializer/DataSource/Xml/Contracts/Builders/XmlKnownTypeBuilderCollection.cs
    startLine: 92
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders
  syntax:
    content: public IEnumerator<XmlKnownTypeBuilder> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder}
    content.vb: Public Function GetEnumerator As IEnumerator(Of XmlKnownTypeBuilder)
  overload: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.System#Collections#IEnumerable#GetEnumerator
  commentId: M:DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: XmlKnownTypeBuilderCollection.IEnumerable.GetEnumerator()
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/DotNetHelper-Serializer/DataSource/Xml/Contracts/Builders/XmlKnownTypeBuilderCollection.cs
      branch: master
      repo: https://github.com/TheMofaDe/DotNetHelper-Serializer.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../src/DotNetHelper-Serializer/DataSource/Xml/Contracts/Builders/XmlKnownTypeBuilderCollection.cs
    startLine: 97
  assemblies:
  - DotNetHelper-Serializer
  namespace: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: XmlKnownTypeBuilderCollection.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
references:
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders
  commentId: N:DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders
  name: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders
  nameWithType: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder}
  commentId: T:System.Collections.Generic.IEnumerable{DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<XmlKnownTypeBuilder>
  nameWithType: IEnumerable<XmlKnownTypeBuilder>
  fullName: System.Collections.Generic.IEnumerable<DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder>
  nameWithType.vb: IEnumerable(Of XmlKnownTypeBuilder)
  fullName.vb: System.Collections.Generic.IEnumerable(Of DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder)
  name.vb: IEnumerable(Of XmlKnownTypeBuilder)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder
    name: XmlKnownTypeBuilder
    nameWithType: XmlKnownTypeBuilder
    fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder
    name: XmlKnownTypeBuilder
    nameWithType: XmlKnownTypeBuilder
    fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1
  commentId: M:DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1(``0)
  parent: DotNetHelper_Serializer.Extension.TypeExtension
  definition: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1(``0)
  name: CanHaveNullValue<XmlKnownTypeBuilderCollection>()
  nameWithType: TypeExtension.CanHaveNullValue<XmlKnownTypeBuilderCollection>()
  fullName: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue<DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection>()
  nameWithType.vb: TypeExtension.CanHaveNullValue(Of XmlKnownTypeBuilderCollection)()
  fullName.vb: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue(Of DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection)()
  name.vb: CanHaveNullValue(Of XmlKnownTypeBuilderCollection)()
  spec.csharp:
  - uid: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1
    name: CanHaveNullValue<XmlKnownTypeBuilderCollection>
    nameWithType: TypeExtension.CanHaveNullValue<XmlKnownTypeBuilderCollection>
    fullName: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue<DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1
    name: CanHaveNullValue(Of XmlKnownTypeBuilderCollection)
    nameWithType: TypeExtension.CanHaveNullValue(Of XmlKnownTypeBuilderCollection)
    fullName: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue(Of DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1(``0)
  commentId: M:DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1(``0)
  name: CanHaveNullValue<T>(T)
  nameWithType: TypeExtension.CanHaveNullValue<T>(T)
  fullName: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue<T>(T)
  nameWithType.vb: TypeExtension.CanHaveNullValue(Of T)(T)
  fullName.vb: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue(Of T)(T)
  name.vb: CanHaveNullValue(Of T)(T)
  spec.csharp:
  - uid: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1(``0)
    name: CanHaveNullValue<T>
    nameWithType: TypeExtension.CanHaveNullValue<T>
    fullName: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue``1(``0)
    name: CanHaveNullValue(Of T)
    nameWithType: TypeExtension.CanHaveNullValue(Of T)
    fullName: DotNetHelper_Serializer.Extension.TypeExtension.CanHaveNullValue(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_Serializer.Extension.TypeExtension
  commentId: T:DotNetHelper_Serializer.Extension.TypeExtension
  parent: DotNetHelper_Serializer.Extension
  name: TypeExtension
  nameWithType: TypeExtension
  fullName: DotNetHelper_Serializer.Extension.TypeExtension
- uid: DotNetHelper_Serializer.Extension
  commentId: N:DotNetHelper_Serializer.Extension
  name: DotNetHelper_Serializer.Extension
  nameWithType: DotNetHelper_Serializer.Extension
  fullName: DotNetHelper_Serializer.Extension
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.#ctor*
  commentId: Overload:DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.#ctor
  name: XmlKnownTypeBuilderCollection
  nameWithType: XmlKnownTypeBuilderCollection.XmlKnownTypeBuilderCollection
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.XmlKnownTypeBuilderCollection
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Count*
  commentId: Overload:DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Count
  name: Count
  nameWithType: XmlKnownTypeBuilderCollection.Count
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Add*
  commentId: Overload:DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Add
  name: Add
  nameWithType: XmlKnownTypeBuilderCollection.Add
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Add
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlName
  commentId: T:DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlName
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts
  name: XmlName
  nameWithType: XmlName
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlName
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts
  commentId: N:DotNetHelper_Serializer.DataSource.Xml.Contracts
  name: DotNetHelper_Serializer.DataSource.Xml.Contracts
  nameWithType: DotNetHelper_Serializer.DataSource.Xml.Contracts
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder
  commentId: T:DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder
  parent: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders
  name: XmlKnownTypeBuilder
  nameWithType: XmlKnownTypeBuilder
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Set*
  commentId: Overload:DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Set
  name: Set
  nameWithType: XmlKnownTypeBuilderCollection.Set
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Set
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Contains*
  commentId: Overload:DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Contains
  name: Contains
  nameWithType: XmlKnownTypeBuilderCollection.Contains
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Contains
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Remove*
  commentId: Overload:DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Remove
  name: Remove
  nameWithType: XmlKnownTypeBuilderCollection.Remove
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Remove
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Build*
  commentId: Overload:DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Build
  name: Build
  nameWithType: XmlKnownTypeBuilderCollection.Build
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.Build
- uid: System.Collections.Generic.IEnumerable{DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlKnownType}
  commentId: T:System.Collections.Generic.IEnumerable{DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlKnownType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<XmlKnownType>
  nameWithType: IEnumerable<XmlKnownType>
  fullName: System.Collections.Generic.IEnumerable<DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlKnownType>
  nameWithType.vb: IEnumerable(Of XmlKnownType)
  fullName.vb: System.Collections.Generic.IEnumerable(Of DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlKnownType)
  name.vb: IEnumerable(Of XmlKnownType)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlKnownType
    name: XmlKnownType
    nameWithType: XmlKnownType
    fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlKnownType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlKnownType
    name: XmlKnownType
    nameWithType: XmlKnownType
    fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlKnownType
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.GetEnumerator*
  commentId: Overload:DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.GetEnumerator
  name: GetEnumerator
  nameWithType: XmlKnownTypeBuilderCollection.GetEnumerator
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<XmlKnownTypeBuilder>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of XmlKnownTypeBuilder).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<XmlKnownTypeBuilder>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of XmlKnownTypeBuilder).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder}
  commentId: T:System.Collections.Generic.IEnumerator{DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<XmlKnownTypeBuilder>
  nameWithType: IEnumerator<XmlKnownTypeBuilder>
  fullName: System.Collections.Generic.IEnumerator<DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder>
  nameWithType.vb: IEnumerator(Of XmlKnownTypeBuilder)
  fullName.vb: System.Collections.Generic.IEnumerator(Of DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder)
  name.vb: IEnumerator(Of XmlKnownTypeBuilder)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder
    name: XmlKnownTypeBuilder
    nameWithType: XmlKnownTypeBuilder
    fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder
    name: XmlKnownTypeBuilder
    nameWithType: XmlKnownTypeBuilder
    fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator
  nameWithType: XmlKnownTypeBuilderCollection.IEnumerable.GetEnumerator
  fullName: DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: XmlKnownTypeBuilderCollection.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
