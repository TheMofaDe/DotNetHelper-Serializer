{
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlGuidConverter.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlGuidConverter.html",
    "title": "Class XmlGuidConverter | DotNetHelper-Serializer",
    "keywords": "Class XmlGuidConverter Inheritance Object XmlConverter < Guid > XmlBasicConverter < Guid > XmlBasicRawConverter < Guid > XmlGuidConverter Implements IXmlConverter Inherited Members XmlBasicRawConverter<Guid>.WriteXml(XmlWriter, Object, XmlSerializationContext) XmlBasicConverter<Guid>.ReadXml(XmlReader, XmlSerializationContext) XmlConverter<Guid>.CanRead(Type) XmlConverter<Guid>.CanWrite(Type) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters.Basics Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlGuidConverter : XmlBasicRawConverter<Guid>, IXmlConverter Constructors | Improve this Doc View Source XmlGuidConverter(String) Declaration public XmlGuidConverter(string format = null) Parameters Type Name Description String format Properties | Improve this Doc View Source Format Declaration public string Format { get; } Property Value Type Description String Methods | Improve this Doc View Source Parse(String, XmlSerializationContext) Declaration protected override Guid Parse(string value, XmlSerializationContext context) Parameters Type Name Description String value XmlSerializationContext context Returns Type Description Guid Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.Guid>.Parse(System.String, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) | Improve this Doc View Source ToString(Guid, XmlSerializationContext) Declaration protected override string ToString(Guid value, XmlSerializationContext context) Parameters Type Name Description Guid value XmlSerializationContext context Returns Type Description String Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.Guid>.ToString(System.Guid, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) Implements IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.Extension.ExtDataTable.html": {
    "href": "api/DotNetHelper_Serializer.Extension.ExtDataTable.html",
    "title": "Class ExtDataTable | DotNetHelper-Serializer",
    "keywords": "Class ExtDataTable Inheritance Object ExtDataTable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.Extension Assembly : DotNetHelper-Serializer.dll Syntax public static class ExtDataTable Methods | Improve this Doc View Source MapToType<T>(DataRow) Declaration public static T MapToType<T>(this DataRow row) where T : class Parameters Type Name Description DataRow row Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source SetColumnPosition(DataTable, String, Int32) SetOrdinal of DataTable columns based on the index of the columnNames array. Removes invalid column names first. Declaration public static bool SetColumnPosition(this DataTable table, string columnName, int position) Parameters Type Name Description DataTable table String columnName Int32 position Returns Type Description Boolean Remarks http://stackoverflow.com/questions/3757997/how-to-change-datatable-colums-order | Improve this Doc View Source SetColumnsOrder(DataTable, String[]) SetOrdinal of DataTable columns based on the index of the columnNames array. Removes invalid column names first. Declaration public static void SetColumnsOrder(this DataTable table, params string[] columnNames) Parameters Type Name Description DataTable table String [] columnNames Remarks http://stackoverflow.com/questions/3757997/how-to-change-datatable-colums-order"
  },
  "api/DotNetHelper_Serializer.Extension.ExtDataReader.html": {
    "href": "api/DotNetHelper_Serializer.Extension.ExtDataReader.html",
    "title": "Class ExtDataReader | DotNetHelper-Serializer",
    "keywords": "Class ExtDataReader Inheritance Object ExtDataReader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.Extension Assembly : DotNetHelper-Serializer.dll Syntax public static class ExtDataReader Methods | Improve this Doc View Source AddParameters(IDbCommand, List<DbParameter>) Declaration public static void AddParameters(this IDbCommand command, List<DbParameter> parameters) Parameters Type Name Description IDbCommand command List < DbParameter > parameters | Improve this Doc View Source AddParameters(IDbCommand, List<IDbDataParameter>) Declaration public static void AddParameters(this IDbCommand command, List<IDbDataParameter> parameters) Parameters Type Name Description IDbCommand command List < IDbDataParameter > parameters | Improve this Doc View Source GetBytes(IDataReader, Int32) Reads all available bytes from reader Declaration public static byte[] GetBytes(this IDataReader reader, int ordinal) Parameters Type Name Description IDataReader reader Int32 ordinal Returns Type Description Byte [] | Improve this Doc View Source HasRows(IDataReader) Declaration public static bool? HasRows(this IDataReader reader) Parameters Type Name Description IDataReader reader Returns Type Description Nullable < Boolean > | Improve this Doc View Source MapToDataTable(IDataReader, String) Declaration public static DataTable MapToDataTable(this IDataReader reader, string tableName) Parameters Type Name Description IDataReader reader String tableName Returns Type Description DataTable | Improve this Doc View Source MapToDataTable<T>(IDataReader, String) Declaration public static DataTable MapToDataTable<T>(this IDataReader reader, string tableName) where T : class Parameters Type Name Description IDataReader reader String tableName Returns Type Description DataTable Type Parameters Name Description T | Improve this Doc View Source MapToList(IDataReader, Type) Declaration public static List<object> MapToList(this IDataReader reader, Type mapToType) Parameters Type Name Description IDataReader reader Type mapToType Returns Type Description List < Object > | Improve this Doc View Source MapToList<T>(IDataReader, IJsonSerializer, IXmlSerializer, ICsvSerializer) Declaration public static List<T> MapToList<T>(this IDataReader reader, IJsonSerializer jsonSerializer = null, IXmlSerializer xmlSerializer = null, ICsvSerializer csvSerializer = null) where T : class Parameters Type Name Description IDataReader reader IJsonSerializer jsonSerializer IXmlSerializer xmlSerializer ICsvSerializer csvSerializer Returns Type Description List <T> Type Parameters Name Description T | Improve this Doc View Source ToDictionary(IDataReader) Declaration public static List<Dictionary<string, object>> ToDictionary(this IDataReader datareader) Parameters Type Name Description IDataReader datareader Returns Type Description List < Dictionary < String , Object >>"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlDateTimeOffsetConverter.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlDateTimeOffsetConverter.html",
    "title": "Class XmlDateTimeOffsetConverter | DotNetHelper-Serializer",
    "keywords": "Class XmlDateTimeOffsetConverter Inheritance Object XmlConverter < DateTimeOffset > XmlBasicConverter < DateTimeOffset > XmlBasicRawConverter < DateTimeOffset > XmlDateTimeOffsetConverter Implements IXmlConverter Inherited Members XmlBasicRawConverter<DateTimeOffset>.WriteXml(XmlWriter, Object, XmlSerializationContext) XmlBasicConverter<DateTimeOffset>.ReadXml(XmlReader, XmlSerializationContext) XmlConverter<DateTimeOffset>.CanRead(Type) XmlConverter<DateTimeOffset>.CanWrite(Type) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters.Basics Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlDateTimeOffsetConverter : XmlBasicRawConverter<DateTimeOffset>, IXmlConverter Methods | Improve this Doc View Source Parse(String, XmlSerializationContext) Declaration protected override DateTimeOffset Parse(string value, XmlSerializationContext context) Parameters Type Name Description String value XmlSerializationContext context Returns Type Description DateTimeOffset Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.DateTimeOffset>.Parse(System.String, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) | Improve this Doc View Source ToString(DateTimeOffset, XmlSerializationContext) Declaration protected override string ToString(DateTimeOffset value, XmlSerializationContext context) Parameters Type Name Description DateTimeOffset value XmlSerializationContext context Returns Type Description String Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.DateTimeOffset>.ToString(System.DateTimeOffset, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) Implements IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMember.html",
    "title": "Class XmlMember | DotNetHelper-Serializer",
    "keywords": "Class XmlMember Inheritance Object XmlMember XmlItem XmlKnownType XmlProperty Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts Assembly : DotNetHelper-Serializer.dll Syntax public class XmlMember Properties | Improve this Doc View Source DefaultValue Declaration public object DefaultValue { get; } Property Value Type Description Object | Improve this Doc View Source DefaultValueHandling Declaration public XmlDefaultValueHandling? DefaultValueHandling { get; } Property Value Type Description Nullable < XmlDefaultValueHandling > | Improve this Doc View Source Item Declaration public XmlItem Item { get; } Property Value Type Description XmlItem | Improve this Doc View Source KnownTypes Declaration public IReadOnlyList<XmlKnownType> KnownTypes { get; } Property Value Type Description IReadOnlyList < XmlKnownType > | Improve this Doc View Source MappingType Declaration public XmlMappingType MappingType { get; } Property Value Type Description XmlMappingType | Improve this Doc View Source Name Declaration public XmlName Name { get; } Property Value Type Description XmlName | Improve this Doc View Source NullValueHandling Declaration public XmlNullValueHandling? NullValueHandling { get; } Property Value Type Description Nullable < XmlNullValueHandling > | Improve this Doc View Source TypeHandling Declaration public XmlTypeHandling? TypeHandling { get; } Property Value Type Description Nullable < XmlTypeHandling > | Improve this Doc View Source ValueType Declaration public Type ValueType { get; } Property Value Type Description Type Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.html",
    "title": "Namespace DotNetHelper_Serializer.DataSource.Xml.Converters | DotNetHelper-Serializer",
    "keywords": "Namespace DotNetHelper_Serializer.DataSource.Xml.Converters Classes XmlBasicConverter<T> XmlBasicRawConverter<T> XmlConverter<T> XmlConverterFactory XmlEnumConverter Interfaces IXmlConverter IXmlConverterFactory"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.XmlEnumConverter.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.XmlEnumConverter.html",
    "title": "Class XmlEnumConverter | DotNetHelper-Serializer",
    "keywords": "Class XmlEnumConverter Inheritance Object XmlEnumConverter Implements IXmlConverter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlEnumConverter : IXmlConverter Constructors | Improve this Doc View Source XmlEnumConverter() Declaration public XmlEnumConverter() | Improve this Doc View Source XmlEnumConverter(Char) Declaration public XmlEnumConverter(char separator) Parameters Type Name Description Char separator Methods | Improve this Doc View Source CanRead(Type) Declaration public bool CanRead(Type valueType) Parameters Type Name Description Type valueType Returns Type Description Boolean | Improve this Doc View Source CanWrite(Type) Declaration public bool CanWrite(Type valueType) Parameters Type Name Description Type valueType Returns Type Description Boolean | Improve this Doc View Source ReadXml(XmlReader, XmlSerializationContext) Declaration public object ReadXml(XmlReader reader, XmlSerializationContext context) Parameters Type Name Description XmlReader reader XmlSerializationContext context Returns Type Description Object | Improve this Doc View Source WriteXml(XmlWriter, Object, XmlSerializationContext) Declaration public void WriteXml(XmlWriter writer, object value, XmlSerializationContext context) Parameters Type Name Description XmlWriter writer Object value XmlSerializationContext context Implements IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.IXmlCollectionBuilder.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.IXmlCollectionBuilder.html",
    "title": "Interface IXmlCollectionBuilder | DotNetHelper-Serializer",
    "keywords": "Interface IXmlCollectionBuilder Inherited Members IXmlBuilder.ValueType IXmlBuilder.Name Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders Assembly : DotNetHelper-Serializer.dll Syntax public interface IXmlCollectionBuilder : IXmlBuilder Properties | Improve this Doc View Source Item Declaration XmlItemBuilder Item { get; set; } Property Value Type Description XmlItemBuilder Extension Methods TypeExtension.CanHaveNullValue<T>(T) XmlBuilderExtensions.SetName<TBuilder>(TBuilder, XmlName) XmlBuilderExtensions.SetItem<TBuilder>(TBuilder, XmlName) XmlBuilderExtensions.SetItem<TBuilder>(TBuilder, Type, XmlName) XmlBuilderExtensions.SetItem<TBuilder>(TBuilder, Action<XmlItemBuilder>) XmlBuilderExtensions.SetItem<TBuilder>(TBuilder, Type, Action<XmlItemBuilder>)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlUInt16Converter.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlUInt16Converter.html",
    "title": "Class XmlUInt16Converter | DotNetHelper-Serializer",
    "keywords": "Class XmlUInt16Converter Inheritance Object XmlConverter < UInt16 > XmlBasicConverter < UInt16 > XmlBasicRawConverter < UInt16 > XmlUInt16Converter Implements IXmlConverter Inherited Members XmlBasicRawConverter<UInt16>.WriteXml(XmlWriter, Object, XmlSerializationContext) XmlBasicConverter<UInt16>.ReadXml(XmlReader, XmlSerializationContext) XmlConverter<UInt16>.CanRead(Type) XmlConverter<UInt16>.CanWrite(Type) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters.Basics Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlUInt16Converter : XmlBasicRawConverter<ushort>, IXmlConverter Methods | Improve this Doc View Source Parse(String, XmlSerializationContext) Declaration protected override ushort Parse(string value, XmlSerializationContext context) Parameters Type Name Description String value XmlSerializationContext context Returns Type Description UInt16 Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.UInt16>.Parse(System.String, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) | Improve this Doc View Source ToString(UInt16, XmlSerializationContext) Declaration protected override string ToString(ushort value, XmlSerializationContext context) Parameters Type Name Description UInt16 value XmlSerializationContext context Returns Type Description String Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.UInt16>.ToString(System.UInt16, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) Implements IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.Interface.IDataSourceDb.html": {
    "href": "api/DotNetHelper_Serializer.Interface.IDataSourceDb.html",
    "title": "Interface IDataSourceDb | DotNetHelper-Serializer",
    "keywords": "Interface IDataSourceDb Inherited Members IDisposable.Dispose() Namespace : DotNetHelper_Serializer.Interface Assembly : DotNetHelper-Serializer.dll Syntax public interface IDataSourceDb : IDisposable Properties | Improve this Doc View Source AlwaysUseBulkInsert if T1 is true Bulk Insert Will Always be used when the object counts is greater than or equal to T2 Declaration (bool UseBulkInsert, int minimumRecordRequiredToUse)AlwaysUseBulkInsert { get; set; } Property Value Type Description ValueTuple < Boolean , Int32 > | Improve this Doc View Source ConnectionString Connection String That Will Used To Connect To Server Declaration string ConnectionString { get; set; } Property Value Type Description String The connection string. | Improve this Doc View Source CreateSchemaIfNotExist Create Schema If It Doesn't Exist When Excuting Queries Declaration bool CreateSchemaIfNotExist { get; set; } Property Value Type Description Boolean true if [create schema if not exist]; otherwise, false . | Improve this Doc View Source CreateTablesIfNotExist Create Table If It Doesn't Exist When Excuting Queries Only Works For Dynamic Execute Methods Declaration bool CreateTablesIfNotExist { get; set; } Property Value Type Description Boolean true if [create tables if not exist]; otherwise, false . | Improve this Doc View Source CsvSerializer Gets or sets the Csv Serializer for columns that stores its value as csv Declaration ICsvSerializer CsvSerializer { get; set; } Property Value Type Description ICsvSerializer | Improve this Doc View Source Database Database To Connect TO Declaration string Database { get; set; } Property Value Type Description String The database. | Improve this Doc View Source DBTYPE Gets or sets the dbtype. Declaration DataBaseType DBTYPE { get; } Property Value Type Description DotNetHelper_Contracts.Enum.DataSource.DataBaseType The dbtype. | Improve this Doc View Source EnableTransactionRollback Rollback Any Batch Data If One Record Fails Declaration bool EnableTransactionRollback { get; set; } Property Value Type Description Boolean true if [enable transaction rollback]; otherwise, false . | Improve this Doc View Source FullFileName Full File Name To The .MDF File Declaration string FullFileName { get; set; } Property Value Type Description String The full name of the file. | Improve this Doc View Source IntegratedSecurity Use Integrated Security AKA Windows Authentication Declaration bool IntegratedSecurity { get; set; } Property Value Type Description Boolean true if [integrated security]; otherwise, false . | Improve this Doc View Source IsSqlExpress Set true if Instance is SQLExpress Declaration bool IsSqlExpress { get; set; } Property Value Type Description Boolean true if this instance is SQL express; otherwise, false . | Improve this Doc View Source JetOledbSystemDatabase Only Used By OLEDB Connections Declaration string JetOledbSystemDatabase { get; set; } Property Value Type Description String | Improve this Doc View Source JsonSerializer Gets or sets the Json Serializer for columns that stores its value as json Declaration IJsonSerializer JsonSerializer { get; set; } Property Value Type Description IJsonSerializer | Improve this Doc View Source LastConnectionOpenTime Declaration DateTime? LastConnectionOpenTime { get; set; } Property Value Type Description Nullable < DateTime > | Improve this Doc View Source Password Password that will be used if connection string is null or empty Declaration string Password { get; set; } Property Value Type Description String The password. | Improve this Doc View Source PersistSecurityInfo Only Used By OLEDB Connections Declaration bool PersistSecurityInfo { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Port Gets or sets the port. Declaration int? Port { get; set; } Property Value Type Description Nullable < Int32 > The port. | Improve this Doc View Source Properties Gets or sets the properties. Declaration DataSourceProperties Properties { get; set; } Property Value Type Description DataSourceProperties The properties. | Improve this Doc View Source Provider Only Used BY OLEDB Connections Declaration string Provider { get; set; } Property Value Type Description String | Improve this Doc View Source QueryBucketManager Gets or sets the QueryBucketManger. Declaration QueryBucketManager QueryBucketManager { get; set; } Property Value Type Description QueryBucketManager The settings. | Improve this Doc View Source Server Server Name Or IP thats hosting An Sql Instance Declaration string Server { get; set; } Property Value Type Description String The server. | Improve this Doc View Source TableSchema TableSchema To Append to table name Declaration string TableSchema { get; set; } Property Value Type Description String The table schema. | Improve this Doc View Source ThrowCustomExceptions Set True If Being Use As Data Access For Public Apis. This Will Hide Thrown Execptions From The Public and return a friendly Message Declaration bool ThrowCustomExceptions { get; set; } Property Value Type Description Boolean true if [throw custom exceptions]; otherwise, false . | Improve this Doc View Source Timeout Gets or sets the timeout for sql command not the connection itself. Declaration TimeSpan Timeout { get; set; } Property Value Type Description TimeSpan The timeout. | Improve this Doc View Source UserName Username that will be used if connection string is null or empty Declaration string UserName { get; set; } Property Value Type Description String The name of the user. | Improve this Doc View Source XmlSerializer Gets or sets the Xml Serializer for columns that stores its value as xml Declaration IXmlSerializer XmlSerializer { get; set; } Property Value Type Description IXmlSerializer Methods | Improve this Doc View Source BuildConnectionString() Build a SqlConnection String Based On DataSource Properties Will AutoBuild A Connection String If An Connection String Is Not Already Defined Declaration string BuildConnectionString() Returns Type Description String connection string | Improve this Doc View Source BuildJoinString<T>() Declaration (string sql, string splitOn)BuildJoinString<T>() where T : class Returns Type Description ValueTuple < String , String > Type Parameters Name Description T | Improve this Doc View Source BulkInsert<T>(IEnumerable<T>, String) Bulks the insert. Declaration int BulkInsert<T>(IEnumerable<T> listPoco, string tableName) where T : class Parameters Type Name Description IEnumerable <T> listPoco The list poco. String tableName Name of the table. Returns Type Description Int32 System.Int32. Type Parameters Name Description T | Improve this Doc View Source BulkInsertDataTable(DataTable, SqlBulkCopyOptions, String, Action<SqlRowsCopiedEventArgs>) Declaration void BulkInsertDataTable(DataTable table, SqlBulkCopyOptions options, string destinationTableName = null, Action<SqlRowsCopiedEventArgs> callback = null) Parameters Type Name Description DataTable table SqlBulkCopyOptions options String destinationTableName Action < SqlRowsCopiedEventArgs > callback | Improve this Doc View Source CanConnect() Determines whether this instance can connect. Declaration bool CanConnect() Returns Type Description Boolean true if this instance can connect; otherwise, false . | Improve this Doc View Source CreateLocalDatabaseFile(String, String, Boolean) Connection String Must Be Valid To Create Declaration int CreateLocalDatabaseFile(string fullFilePath, string databaseName, bool overwrite = false) Parameters Type Name Description String fullFilePath The full file path. String databaseName Name of the database. Boolean overwrite if set to true [overwrite]. Returns Type Description Int32 System.Int32. | Improve this Doc View Source CreateScripts<T>(ActionType, List<T>, String, ScriptType, Expression<Func<T, Object>>) Creates the scripts. Declaration List<string> CreateScripts<T>(ActionType scriptsType, List<T> objects, string tableName = null, ScriptType type = ScriptType.HumanReadable, Expression<Func<T, object>> overrideKeys = null) where T : class Parameters Type Name Description DotNetHelper_Contracts.Enum.DataSource.ActionType scriptsType Type of the scripts. List <T> objects The objects. String tableName Name of the table. DotNetHelper_Contracts.Enum.DataSource.ScriptType type The type. Expression < Func <T, Object >> overrideKeys Returns Type Description List < String > List<System.String>. Type Parameters Name Description T Exceptions Type Condition ArgumentOutOfRangeException type - null | Improve this Doc View Source CreateTableFromClass(Type, String, Boolean) Creates the table from class. Declaration bool CreateTableFromClass(Type type, string tableName, bool dropIfExist = false) Parameters Type Name Description Type type String tableName Name of the table. Boolean dropIfExist if set to true [drop if exist]. Returns Type Description Boolean true if XXXX, false otherwise. | Improve this Doc View Source CreateTableFromClass<T>(String, Boolean) Creates the table from class. Declaration bool CreateTableFromClass<T>(string tableName, bool dropIfExist = false) where T : class Parameters Type Name Description String tableName Name of the table. Boolean dropIfExist if set to true [drop if exist]. Returns Type Description Boolean true if XXXX, false otherwise. Type Parameters Name Description T | Improve this Doc View Source CreateTableFromDynamicObject<T>(T, String, Boolean) Creates the table from a dynamic object . Declaration bool CreateTableFromDynamicObject<T>(T dynamicObject, string tableName, bool dropIfExist = false) where T : class Parameters Type Name Description T dynamicObject String tableName Name of the table. Boolean dropIfExist if set to true [drop if exist]. Returns Type Description Boolean true if XXXX, false otherwise. Type Parameters Name Description T | Improve this Doc View Source DBTypeToDotNetType(String) Databases the type of the type to dot net. Declaration Type DBTypeToDotNetType(string type) Parameters Type Name Description String type The type. Returns Type Description Type Type. | Improve this Doc View Source DropTable(String) Drops the table. Declaration bool DropTable(string tableName) Parameters Type Name Description String tableName Name of the table. Returns Type Description Boolean true if a table was drop then return true, false otherwise. | Improve this Doc View Source DumpTableDataToFile(String, String, FileOption, String) Dumps the table data to file. Declaration bool DumpTableDataToFile(string fullFilePath, string tableName, FileOption option, string whereClause = null) Parameters Type Name Description String fullFilePath The full file path. String tableName Name of the table. DotNetHelper_Contracts.Enum.IO.FileOption option The option. String whereClause The where clause. Returns Type Description Boolean true if XXXX, false otherwise. | Improve this Doc View Source ErrorHandling(Exception) Errors the handling. Declaration Exception ErrorHandling(Exception error) Parameters Type Name Description Exception error The error. Returns Type Description Exception Exception. | Improve this Doc View Source ErrorHandling(Exception, String) Errors the handling. Declaration Exception ErrorHandling(Exception error, string sql) Parameters Type Name Description Exception error The error. String sql Returns Type Description Exception Exception. | Improve this Doc View Source ExecuteDynamicQuery<T>(ActionType, T, String, Expression<Func<T, Object>>) Declaration int ExecuteDynamicQuery<T>(ActionType type, T poco, string tableName = null, Expression<Func<T, object>> overrideKeys = null) where T : class Parameters Type Name Description DotNetHelper_Contracts.Enum.DataSource.ActionType type T poco String tableName Expression < Func <T, Object >> overrideKeys Returns Type Description Int32 Type Parameters Name Description T | Improve this Doc View Source ExecuteDynamicQuery<T>(ActionType, IEnumerable<T>, String, Expression<Func<T, Object>>) Executes the dynamic query. Declaration int ExecuteDynamicQuery<T>(ActionType type, IEnumerable<T> poco, string tableName = null, Expression<Func<T, object>> overrideKeys = null) where T : class Parameters Type Name Description DotNetHelper_Contracts.Enum.DataSource.ActionType type Type Of Query To Execute IEnumerable <T> poco The Object To Execute Against String tableName Name of the table. Expression < Func <T, Object >> overrideKeys Returns Type Description Int32 Returns Record Affected Type Parameters Name Description T Exceptions Type Condition ArgumentOutOfRangeException type - null | Improve this Doc View Source ExecuteDynamicQueryReturnIdentity<T>(ActionType, T, String) Declaration T ExecuteDynamicQueryReturnIdentity<T>(ActionType type, T poco, string tableName = null) where T : class Parameters Type Name Description DotNetHelper_Contracts.Enum.DataSource.ActionType type T poco String tableName Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source ExecuteDynamicQueryWithOutputs<T>(ActionType, T, Expression<Func<T, Object>>, String) Declaration IDataReader ExecuteDynamicQueryWithOutputs<T>(ActionType type, T poco, Expression<Func<T, object>> expression, string tableName = null) where T : class Parameters Type Name Description DotNetHelper_Contracts.Enum.DataSource.ActionType type T poco Expression < Func <T, Object >> expression String tableName Returns Type Description IDataReader Type Parameters Name Description T | Improve this Doc View Source ExecuteManualNonQuerySql(String) Executes the manual non query SQL. Declaration int ExecuteManualNonQuerySql(string query) Parameters Type Name Description String query The query. Returns Type Description Int32 System.Int32. | Improve this Doc View Source ExecuteManualQuery(String) Retrieve A DataReader Of All Records From The Specified Query Please Make Sure You Closed The DataReader When No longer need Declaration IDataReader ExecuteManualQuery(string query) Parameters Type Name Description String query The query. Returns Type Description IDataReader IDataReader. Exceptions Type Condition NotImplementedException Sorry Haven't implemented this yet | Improve this Doc View Source ExecuteManualQuery(String, List<DbParameter>) Executes the manual query. Declaration IDataReader ExecuteManualQuery(string query, List<DbParameter> parameters) Parameters Type Name Description String query The query. List < DbParameter > parameters The parameters. Returns Type Description IDataReader IDataReader. | Improve this Doc View Source ExecuteManualSql<T>(String) Executes the manual SQL. Declaration List<T> ExecuteManualSql<T>(string query) where T : class Parameters Type Name Description String query The query. Returns Type Description List <T> List<T>. Type Parameters Name Description T | Improve this Doc View Source ExecuteStoredProcedure(String, List<DbParameter>) Executes the stored procedure. Declaration IDataReader ExecuteStoredProcedure(string procedureName, List<DbParameter> parameters) Parameters Type Name Description String procedureName Name of the procedure. List < DbParameter > parameters The parameters. Returns Type Description IDataReader IDataReader. | Improve this Doc View Source Get(String, String) Gets the specified table name. Declaration IDataReader Get(string tableName, string whereClause = null) Parameters Type Name Description String tableName Name of the table. String whereClause The where clause. Returns Type Description IDataReader IDataReader. | Improve this Doc View Source Get<T>(String, String) Gets the specified table name. Declaration List<T> Get<T>(string tableName = null, string whereClause = null) where T : class Parameters Type Name Description String tableName Name of the table. String whereClause The where clause. Returns Type Description List <T> List<T>. Type Parameters Name Description T | Improve this Doc View Source GetLinq<T>(Expression<Func<T, Boolean>>, String) Gets the specified T data filtering using the Linq Expression. Declaration List<T> GetLinq<T>(Expression<Func<T, bool>> whereExpression, string tableName = null) where T : class Parameters Type Name Description Expression < Func <T, Boolean >> whereExpression String tableName Name of the table. Returns Type Description List <T> List<T>. Type Parameters Name Description T | Improve this Doc View Source GetNewCommand(String, IDbConnection, IDbTransaction) Declaration IDbCommand GetNewCommand(string cmdText = null, IDbConnection connection = null, IDbTransaction dbTransaction = null) Parameters Type Name Description String cmdText IDbConnection connection IDbTransaction dbTransaction Returns Type Description IDbCommand | Improve this Doc View Source GetNewConnection(Boolean, Boolean) Declaration IDbConnection GetNewConnection(bool openConnection, bool throwOnFailOpenConnection) Parameters Type Name Description Boolean openConnection Boolean throwOnFailOpenConnection Returns Type Description IDbConnection | Improve this Doc View Source GetNewParameter(String, Object) Declaration DbParameter GetNewParameter(string parmeterName, object value) Parameters Type Name Description String parmeterName Object value Returns Type Description DbParameter | Improve this Doc View Source GetTopOne<T>(T, String) Get the Top 1 record where the primary key(s) matches if matching record exist then return default value Declaration T GetTopOne<T>(T obj, string tableName = null) where T : class Parameters Type Name Description T obj only use for key mapping against table String tableName Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source GetWithParameters<T>(String, ExpandoObject, String) Gets the specified table name data with dynamically building your where clause from your paramter object Declaration List<T> GetWithParameters<T>(string tableName, ExpandoObject dynamicParameters, string whereClause = null) where T : class Parameters Type Name Description String tableName Name of the table. ExpandoObject dynamicParameters String whereClause Returns Type Description List <T> List<T>. Type Parameters Name Description T | Improve this Doc View Source LogConnectionTime(IDbConnection, String) Logs the connection time. Declaration QueryBucket LogConnectionTime(IDbConnection connection, string query) Parameters Type Name Description IDbConnection connection The connection. String query The query. Returns Type Description QueryBucket QueryBucket. | Improve this Doc View Source RecordExist<T>(T, String, Expression<Func<T, Object>>) Declaration bool RecordExist<T>(T obj, string tableName, Expression<Func<T, object>> overrideKey = null) where T : class Parameters Type Name Description T obj String tableName Expression < Func <T, Object >> overrideKey Returns Type Description Boolean Type Parameters Name Description T | Improve this Doc View Source RefreshDataSourceProperties() Returns true if the refresh was succesful Declaration bool RefreshDataSourceProperties() Returns Type Description Boolean true if XXXX, false otherwise. | Improve this Doc View Source SchemaExist(String, Boolean) Checks If Schema Exist Declaration bool SchemaExist(string schema, bool createIfFalse = false) Parameters Type Name Description String schema The schema. Boolean createIfFalse if set to true [create if false]. Returns Type Description Boolean true if XXXX, false otherwise. | Improve this Doc View Source ScriptCSharpClassToTsql<T>(String) Scripts the c sharp class to TSQL. Declaration string ScriptCSharpClassToTsql<T>(string tableName = null) where T : class Parameters Type Name Description String tableName Name of the table. Returns Type Description String System.String. Type Parameters Name Description T | Improve this Doc View Source ScriptQueryToCSharpClass(String, String) Scripts the query to c sharp class. Declaration string ScriptQueryToCSharpClass(string query, string className = null) Parameters Type Name Description String query The query. String className Name of the class. Returns Type Description String System.String. | Improve this Doc View Source ScriptTableToCSharpClass(String) Scripts the table to c sharp class. Declaration string ScriptTableToCSharpClass(string tableName) Parameters Type Name Description String tableName Name of the table. Returns Type Description String System.String. | Improve this Doc View Source TableExist(String) Check If Table Exist Must Include Schema Declaration bool TableExist(string tableName) Parameters Type Name Description String tableName Name of the table. Returns Type Description Boolean true if XXXX, false otherwise. Events | Improve this Doc View Source OnSqlException Declaration event EventHandler OnSqlException Event Type Type Description EventHandler Extension Methods IDataSourceDBExtension.BuildDbParameterList<T>(IDataSourceDb, T) TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.TypeResolvers.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.TypeResolvers.html",
    "title": "Namespace DotNetHelper_Serializer.DataSource.Xml.TypeResolvers | DotNetHelper-Serializer",
    "keywords": "Namespace DotNetHelper_Serializer.DataSource.Xml.TypeResolvers Classes XmlTypeResolveException XmlTypeResolver Interfaces IXmlTypeResolver"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlPropertyBuilderCollection.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlPropertyBuilderCollection.html",
    "title": "Class XmlPropertyBuilderCollection | DotNetHelper-Serializer",
    "keywords": "Class XmlPropertyBuilderCollection Inheritance Object XmlPropertyBuilderCollection Implements IEnumerable < XmlPropertyBuilder > IEnumerable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlPropertyBuilderCollection : IEnumerable<XmlPropertyBuilder>, IEnumerable Constructors | Improve this Doc View Source XmlPropertyBuilderCollection() Declaration public XmlPropertyBuilderCollection() | Improve this Doc View Source XmlPropertyBuilderCollection(IEnumerable<XmlPropertyBuilder>) Declaration public XmlPropertyBuilderCollection(IEnumerable<XmlPropertyBuilder> items) Parameters Type Name Description IEnumerable < XmlPropertyBuilder > items Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Add(XmlPropertyBuilder) Declaration public void Add(XmlPropertyBuilder item) Parameters Type Name Description XmlPropertyBuilder item | Improve this Doc View Source Build() Declaration public IEnumerable<XmlProperty> Build() Returns Type Description IEnumerable < XmlProperty > | Improve this Doc View Source Contains(PropertyInfo) Declaration public bool Contains(PropertyInfo propertyInfo) Parameters Type Name Description PropertyInfo propertyInfo Returns Type Description Boolean | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<XmlPropertyBuilder> GetEnumerator() Returns Type Description IEnumerator < XmlPropertyBuilder > | Improve this Doc View Source Remove(PropertyInfo) Declaration public bool Remove(PropertyInfo propertyInfo) Parameters Type Name Description PropertyInfo propertyInfo Returns Type Description Boolean | Improve this Doc View Source Set(XmlPropertyBuilder) Declaration public void Set(XmlPropertyBuilder item) Parameters Type Name Description XmlPropertyBuilder item Explicit Interface Implementations | Improve this Doc View Source IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.TypeResolvers.XmlTypeResolver.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.TypeResolvers.XmlTypeResolver.html",
    "title": "Class XmlTypeResolver | DotNetHelper-Serializer",
    "keywords": "Class XmlTypeResolver Inheritance Object XmlTypeResolver Implements IXmlTypeResolver Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.TypeResolvers Assembly : DotNetHelper-Serializer.dll Syntax public class XmlTypeResolver : IXmlTypeResolver Properties | Improve this Doc View Source AssemblyResolver Declaration public Func<AssemblyName, Assembly> AssemblyResolver { get; set; } Property Value Type Description Func < AssemblyName , Assembly > | Improve this Doc View Source TypeResolver Declaration public Func<Assembly, string, bool, Type> TypeResolver { get; set; } Property Value Type Description Func < Assembly , String , Boolean , Type > Methods | Improve this Doc View Source GetTypeName(Type) Declaration public virtual string GetTypeName(Type valueType) Parameters Type Name Description Type valueType Returns Type Description String | Improve this Doc View Source ResolveTypeName(String) Declaration protected Type ResolveTypeName(string typeName) Parameters Type Name Description String typeName Returns Type Description Type | Improve this Doc View Source ResolveTypeName(Type, String) Declaration public Type ResolveTypeName(Type rootType, string typeName) Parameters Type Name Description Type rootType String typeName Returns Type Description Type Implements IXmlTypeResolver Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Objects.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Objects.html",
    "title": "Namespace DotNetHelper_Serializer.DataSource.Xml.Converters.Objects | DotNetHelper-Serializer",
    "keywords": "Namespace DotNetHelper_Serializer.DataSource.Xml.Converters.Objects Classes XmlObjectConverter"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.html",
    "title": "Namespace DotNetHelper_Serializer.DataSource.Xml.Converters.Basics | DotNetHelper-Serializer",
    "keywords": "Namespace DotNetHelper_Serializer.DataSource.Xml.Converters.Basics Classes XmlBooleanConverter XmlByteConverter XmlCharConverter XmlCustomDateTimeConverter XmlDateTimeConverter XmlDateTimeOffsetConverter XmlDecimalConverter XmlDoubleConverter XmlGuidConverter XmlInt16Converter XmlInt32Converter XmlInt64Converter XmlSByteConverter XmlSingleConverter XmlStringConverter XmlTimeSpanConverter XmlUInt16Converter XmlUInt32Converter XmlUInt64Converter"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlEnumContractBuilder-1.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlEnumContractBuilder-1.html",
    "title": "Class XmlEnumContractBuilder<T> | DotNetHelper-Serializer",
    "keywords": "Class XmlEnumContractBuilder<T> Inheritance Object XmlContractBuilder XmlEnumContractBuilder XmlEnumContractBuilder<T> Implements IXmlBuilder Inherited Members XmlEnumContractBuilder.Items XmlEnumContractBuilder.Create(XmlEnumContract) XmlEnumContractBuilder.Build() XmlEnumContractBuilder.BuildContract() XmlContractBuilder.ValueType XmlContractBuilder.Name Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlEnumContractBuilder<T> : XmlEnumContractBuilder, IXmlBuilder where T : struct, IConvertible Type Parameters Name Description T Constructors | Improve this Doc View Source XmlEnumContractBuilder() Declaration public XmlEnumContractBuilder() Implements IXmlBuilder Extension Methods TypeExtension.CanHaveNullValue<T>(T) XmlBuilderExtensions.SetName<TBuilder>(TBuilder, XmlName) XmlContractBuilderExtensions.SetItem<TBuilder>(TBuilder, Int64, String) XmlContractBuilderExtensions.SetItem<TBuilder>(TBuilder, XmlEnumItem) XmlContractBuilderExtensions.RemoveItem<TBuilder>(TBuilder, Int64) XmlContractBuilderExtensions.SetItem<T>(XmlEnumContractBuilder<T>, T, String) XmlContractBuilderExtensions.RemoveItem<T>(XmlEnumContractBuilder<T>, T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlBooleanConverter.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlBooleanConverter.html",
    "title": "Class XmlBooleanConverter | DotNetHelper-Serializer",
    "keywords": "Class XmlBooleanConverter Inheritance Object XmlConverter < Boolean > XmlBasicConverter < Boolean > XmlBasicRawConverter < Boolean > XmlBooleanConverter Implements IXmlConverter Inherited Members XmlBasicRawConverter<Boolean>.WriteXml(XmlWriter, Object, XmlSerializationContext) XmlBasicConverter<Boolean>.ReadXml(XmlReader, XmlSerializationContext) XmlConverter<Boolean>.CanRead(Type) XmlConverter<Boolean>.CanWrite(Type) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters.Basics Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlBooleanConverter : XmlBasicRawConverter<bool>, IXmlConverter Methods | Improve this Doc View Source Parse(String, XmlSerializationContext) Declaration protected override bool Parse(string value, XmlSerializationContext context) Parameters Type Name Description String value XmlSerializationContext context Returns Type Description Boolean Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.Boolean>.Parse(System.String, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) | Improve this Doc View Source ToString(Boolean, XmlSerializationContext) Declaration protected override string ToString(bool value, XmlSerializationContext context) Parameters Type Name Description Boolean value XmlSerializationContext context Returns Type Description String Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.Boolean>.ToString(System.Boolean, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) Implements IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlUInt32Converter.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlUInt32Converter.html",
    "title": "Class XmlUInt32Converter | DotNetHelper-Serializer",
    "keywords": "Class XmlUInt32Converter Inheritance Object XmlConverter < UInt32 > XmlBasicConverter < UInt32 > XmlBasicRawConverter < UInt32 > XmlUInt32Converter Implements IXmlConverter Inherited Members XmlBasicRawConverter<UInt32>.WriteXml(XmlWriter, Object, XmlSerializationContext) XmlBasicConverter<UInt32>.ReadXml(XmlReader, XmlSerializationContext) XmlConverter<UInt32>.CanRead(Type) XmlConverter<UInt32>.CanWrite(Type) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters.Basics Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlUInt32Converter : XmlBasicRawConverter<uint>, IXmlConverter Methods | Improve this Doc View Source Parse(String, XmlSerializationContext) Declaration protected override uint Parse(string value, XmlSerializationContext context) Parameters Type Name Description String value XmlSerializationContext context Returns Type Description UInt32 Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.UInt32>.Parse(System.String, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) | Improve this Doc View Source ToString(UInt32, XmlSerializationContext) Declaration protected override string ToString(uint value, XmlSerializationContext context) Parameters Type Name Description UInt32 value XmlSerializationContext context Returns Type Description String Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.UInt32>.ToString(System.UInt32, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) Implements IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.DataSourceJson.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.DataSourceJson.html",
    "title": "Class DataSourceJson | DotNetHelper-Serializer",
    "keywords": "Class DataSourceJson Inheritance Object DataSourceJson Implements IJsonSerializer DotNetHelper_IO.Interface.ISerializer IConvertible Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource Assembly : DotNetHelper-Serializer.dll Syntax public sealed class DataSourceJson : IJsonSerializer, ISerializer, IConvertible Constructors | Improve this Doc View Source DataSourceJson(JsonSerializerSettings) Declaration public DataSourceJson(JsonSerializerSettings settings = null) Parameters Type Name Description Newtonsoft.Json.JsonSerializerSettings settings | Improve this Doc View Source DataSourceJson(Encoding, JsonSerializerSettings) Declaration public DataSourceJson(Encoding encoding, JsonSerializerSettings settings = null) Parameters Type Name Description Encoding encoding Newtonsoft.Json.JsonSerializerSettings settings Properties | Improve this Doc View Source Encoding Declaration public Encoding Encoding { get; set; } Property Value Type Description Encoding | Improve this Doc View Source Settings Declaration public JsonSerializerSettings Settings { get; set; } Property Value Type Description Newtonsoft.Json.JsonSerializerSettings Methods | Improve this Doc View Source DeserializeFromFile(String) Declaration public dynamic DeserializeFromFile(string fullFilePath) Parameters Type Name Description String fullFilePath Returns Type Description Object | Improve this Doc View Source DeserializeFromFile(Type, String) Declaration public object DeserializeFromFile(Type type, string fullFilePath) Parameters Type Name Description Type type String fullFilePath Returns Type Description Object | Improve this Doc View Source DeserializeFromFile<T>(String) Declaration public T DeserializeFromFile<T>(string file) where T : class Parameters Type Name Description String file Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source DeserializeFromStream(Stream, Type) Declaration public object DeserializeFromStream(Stream stream, Type type) Parameters Type Name Description Stream stream Type type Returns Type Description Object | Improve this Doc View Source DeserializeFromStream<T>(Stream) Declaration public T DeserializeFromStream<T>(Stream stream) Parameters Type Name Description Stream stream Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source DeserializeFromString(String, Type) Declaration public object DeserializeFromString(string json, Type type) Parameters Type Name Description String json Type type Returns Type Description Object | Improve this Doc View Source DeserializeFromString<T>(String) Declaration public T DeserializeFromString<T>(string text) where T : class Parameters Type Name Description String text Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source DeserializeListFromFile(String) Declaration public IEnumerable<dynamic> DeserializeListFromFile(string fullFilePath) Parameters Type Name Description String fullFilePath Returns Type Description IEnumerable < Object > | Improve this Doc View Source DeserializeListFromFile<T>(String) Declaration public IEnumerable<T> DeserializeListFromFile<T>(string fullFilePath) where T : class Parameters Type Name Description String fullFilePath Returns Type Description IEnumerable <T> Type Parameters Name Description T | Improve this Doc View Source DeserializeToCSharpClass(String, String) Declaration public string DeserializeToCSharpClass(string content, string className = null) Parameters Type Name Description String content String className Returns Type Description String | Improve this Doc View Source DeserializeToList(String) Declaration public IEnumerable<dynamic> DeserializeToList(string content) Parameters Type Name Description String content Returns Type Description IEnumerable < Object > | Improve this Doc View Source DeserializeToList<T>(String) Declaration public List<T> DeserializeToList<T>(string content) where T : class Parameters Type Name Description String content Returns Type Description List <T> Type Parameters Name Description T | Improve this Doc View Source GetTypeCode() Declaration public TypeCode GetTypeCode() Returns Type Description TypeCode | Improve this Doc View Source SerializeToFile(Object, String, FileOption) Serializes to file. Declaration public void SerializeToFile(object obj, string fullFilePath, FileOption option = FileOption.DoNothingIfExist) Parameters Type Name Description Object obj The obj. String fullFilePath DotNetHelper_Contracts.Enum.IO.FileOption option Exceptions Type Condition ArgumentNullException obj | Improve this Doc View Source SerializeToFile(Object, Type, String, FileOption) Declaration public void SerializeToFile(object obj, Type type, string fullFilePath, FileOption option) Parameters Type Name Description Object obj Type type String fullFilePath DotNetHelper_Contracts.Enum.IO.FileOption option | Improve this Doc View Source SerializeToFile<T>(T, String, FileOption) Declaration public void SerializeToFile<T>(T obj, string file, FileOption mode) where T : class Parameters Type Name Description T obj String file DotNetHelper_Contracts.Enum.IO.FileOption mode Type Parameters Name Description T | Improve this Doc View Source SerializeToFile<T>(IEnumerable<T>, String, FileOption) Declaration public void SerializeToFile<T>(IEnumerable<T> list, string fullFilePath, FileOption option) where T : class Parameters Type Name Description IEnumerable <T> list String fullFilePath DotNetHelper_Contracts.Enum.IO.FileOption option Type Parameters Name Description T | Improve this Doc View Source SerializeToStream(Object, Type, Stream, Int32, Boolean) Declaration public void SerializeToStream(object obj, Type type, Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) Parameters Type Name Description Object obj Type type Stream stream Int32 bufferSize Boolean leaveStreamOpen | Improve this Doc View Source SerializeToStream<T>(T, Stream, Int32, Boolean) Declaration public void SerializeToStream<T>(T obj, Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) where T : class Parameters Type Name Description T obj Stream stream Int32 bufferSize Boolean leaveStreamOpen Type Parameters Name Description T | Improve this Doc View Source SerializeToString(Object) Declaration public string SerializeToString(object obj) Parameters Type Name Description Object obj Returns Type Description String | Improve this Doc View Source SerializeToString<T>(T) Declaration public string SerializeToString<T>(T obj) where T : class Parameters Type Name Description T obj Returns Type Description String Type Parameters Name Description T | Improve this Doc View Source SerializeToXml(String, IXmlSerializer) Declaration public string SerializeToXml(string json, IXmlSerializer xmlSerializer) Parameters Type Name Description String json IXmlSerializer xmlSerializer Returns Type Description String | Improve this Doc View Source ToBoolean(IFormatProvider) Declaration public bool ToBoolean(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Boolean | Improve this Doc View Source ToByte(IFormatProvider) Declaration public byte ToByte(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Byte | Improve this Doc View Source ToChar(IFormatProvider) Declaration public char ToChar(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Char | Improve this Doc View Source ToDateTime(IFormatProvider) Declaration public DateTime ToDateTime(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description DateTime | Improve this Doc View Source ToDecimal(IFormatProvider) Declaration public decimal ToDecimal(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Decimal | Improve this Doc View Source ToDouble(IFormatProvider) Declaration public double ToDouble(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Double | Improve this Doc View Source ToInt16(IFormatProvider) Declaration public short ToInt16(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Int16 | Improve this Doc View Source ToInt32(IFormatProvider) Declaration public int ToInt32(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Int32 | Improve this Doc View Source ToInt64(IFormatProvider) Declaration public long ToInt64(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Int64 | Improve this Doc View Source ToSByte(IFormatProvider) Declaration public sbyte ToSByte(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description SByte | Improve this Doc View Source ToSingle(IFormatProvider) Declaration public float ToSingle(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Single | Improve this Doc View Source ToString(IFormatProvider) Declaration public string ToString(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description String | Improve this Doc View Source ToType(Type, IFormatProvider) Declaration public object ToType(Type conversionType, IFormatProvider provider) Parameters Type Name Description Type conversionType IFormatProvider provider Returns Type Description Object | Improve this Doc View Source ToUInt16(IFormatProvider) Declaration public ushort ToUInt16(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description UInt16 | Improve this Doc View Source ToUInt32(IFormatProvider) Declaration public uint ToUInt32(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description UInt32 | Improve this Doc View Source ToUInt64(IFormatProvider) Declaration public ulong ToUInt64(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description UInt64 Implements IJsonSerializer DotNetHelper_IO.Interface.ISerializer System.IConvertible Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.IXmlObjectBuilder.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.IXmlObjectBuilder.html",
    "title": "Interface IXmlObjectBuilder | DotNetHelper-Serializer",
    "keywords": "Interface IXmlObjectBuilder Inherited Members IXmlBuilder.ValueType IXmlBuilder.Name Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders Assembly : DotNetHelper-Serializer.dll Syntax public interface IXmlObjectBuilder : IXmlBuilder Properties | Improve this Doc View Source DefaultValue Declaration object DefaultValue { get; set; } Property Value Type Description Object | Improve this Doc View Source DefaultValueHandling Declaration XmlDefaultValueHandling? DefaultValueHandling { get; set; } Property Value Type Description Nullable < XmlDefaultValueHandling > | Improve this Doc View Source NullValueHandling Declaration XmlNullValueHandling? NullValueHandling { get; set; } Property Value Type Description Nullable < XmlNullValueHandling > Extension Methods TypeExtension.CanHaveNullValue<T>(T) XmlBuilderExtensions.SetName<TBuilder>(TBuilder, XmlName) XmlBuilderExtensions.SetNullable<T>(T, Boolean) XmlBuilderExtensions.SetNullValueHandling<T>(T, Nullable<XmlNullValueHandling>) XmlBuilderExtensions.SetDefaultValue<TBuilder>(TBuilder, Object) XmlBuilderExtensions.SetDefaultValueHandling<TBuilder>(TBuilder, Nullable<XmlDefaultValueHandling>)"
  },
  "api/DotNetHelper_Serializer.Attribute.SqlTableAttritubeMembers.html": {
    "href": "api/DotNetHelper_Serializer.Attribute.SqlTableAttritubeMembers.html",
    "title": "Enum SqlTableAttritubeMembers | DotNetHelper-Serializer",
    "keywords": "Enum SqlTableAttritubeMembers Enum SqlColumnAttritubeMembers Namespace : DotNetHelper_Serializer.Attribute Assembly : DotNetHelper-Serializer.dll Syntax public enum SqlTableAttritubeMembers Fields Name Description JoinType TableName XReferenceTable Extension Methods TypeExtension.CanHaveNullValue<SqlTableAttritubeMembers>()"
  },
  "api/DotNetHelper_Serializer.Attribute.SqlColumnAttritubeMembers.html": {
    "href": "api/DotNetHelper_Serializer.Attribute.SqlColumnAttritubeMembers.html",
    "title": "Enum SqlColumnAttritubeMembers | DotNetHelper-Serializer",
    "keywords": "Enum SqlColumnAttritubeMembers Enum SqlColumnAttritubeMembers Namespace : DotNetHelper_Serializer.Attribute Assembly : DotNetHelper-Serializer.dll Syntax public enum SqlColumnAttritubeMembers Fields Name Description DefaultValue MappingIds MapTo SerializableType SetApiId SetAutoIncrementBy SetIgnore SetMaxColumnSize The set maximum column size SetNullable SetPrimaryKey SetStartIncrementAt SetSyncTime SetUtcDateTime SetxRefOnDeleteCascade SetxRefOnUpdateCascade SetxRefTableType TSQLDefaultValue xRefJoinOnColumn xRefTableName xRefTableSchema Extension Methods TypeExtension.CanHaveNullValue<SqlColumnAttritubeMembers>()"
  },
  "api/DotNetHelper_Serializer.Model.QueryBucketManager.html": {
    "href": "api/DotNetHelper_Serializer.Model.QueryBucketManager.html",
    "title": "Class QueryBucketManager | DotNetHelper-Serializer",
    "keywords": "Class QueryBucketManager Inheritance Object QueryBucketManager Implements IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.Model Assembly : DotNetHelper-Serializer.dll Syntax public class QueryBucketManager : IDisposable Properties | Improve this Doc View Source IncludeReadableQuery Declaration public bool IncludeReadableQuery { get; set; } Property Value Type Description Boolean | Improve this Doc View Source MaxBucketSize Declaration public int MaxBucketSize { get; set; } Property Value Type Description Int32 Methods | Improve this Doc View Source AddBucket(QueryBucket) Declaration public void AddBucket(QueryBucket bucket) Parameters Type Name Description QueryBucket bucket | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source OnBeforeAdd(QueryBucketEventArgs) Declaration protected virtual void OnBeforeAdd(QueryBucketEventArgs e) Parameters Type Name Description QueryBucketEventArgs e | Improve this Doc View Source OnFullBucket(FullQueryBucketEventArgs) Declaration protected virtual void OnFullBucket(FullQueryBucketEventArgs e) Parameters Type Name Description FullQueryBucketEventArgs e Events | Improve this Doc View Source BeforeAddToBucket Declaration public event QueryBucketManager.OnBeforeAddToBucketEventHandler BeforeAddToBucket Event Type Type Description QueryBucketManager.OnBeforeAddToBucketEventHandler | Improve this Doc View Source FullBucketReached Declaration public event QueryBucketManager.FullQueryBucketEventHandler FullBucketReached Event Type Type Description QueryBucketManager.FullQueryBucketEventHandler Implements System.IDisposable Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlDecimalConverter.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlDecimalConverter.html",
    "title": "Class XmlDecimalConverter | DotNetHelper-Serializer",
    "keywords": "Class XmlDecimalConverter Inheritance Object XmlConverter < Decimal > XmlBasicConverter < Decimal > XmlBasicRawConverter < Decimal > XmlDecimalConverter Implements IXmlConverter Inherited Members XmlBasicRawConverter<Decimal>.WriteXml(XmlWriter, Object, XmlSerializationContext) XmlBasicConverter<Decimal>.ReadXml(XmlReader, XmlSerializationContext) XmlConverter<Decimal>.CanRead(Type) XmlConverter<Decimal>.CanWrite(Type) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters.Basics Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlDecimalConverter : XmlBasicRawConverter<decimal>, IXmlConverter Methods | Improve this Doc View Source Parse(String, XmlSerializationContext) Declaration protected override decimal Parse(string value, XmlSerializationContext context) Parameters Type Name Description String value XmlSerializationContext context Returns Type Description Decimal Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.Decimal>.Parse(System.String, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) | Improve this Doc View Source ToString(Decimal, XmlSerializationContext) Declaration protected override string ToString(decimal value, XmlSerializationContext context) Parameters Type Name Description Decimal value XmlSerializationContext context Returns Type Description String Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.Decimal>.ToString(System.Decimal, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) Implements IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.DataSourceDb.SqlExceptionEventHandler.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.DataSourceDb.SqlExceptionEventHandler.html",
    "title": "Delegate DataSourceDb.SqlExceptionEventHandler | DotNetHelper-Serializer",
    "keywords": "Delegate DataSourceDb.SqlExceptionEventHandler Namespace : DotNetHelper_Serializer.DataSource Assembly : DotNetHelper-Serializer.dll Syntax public delegate void SqlExceptionEventHandler(object sender, SqlExceptionEventArgs e); Parameters Type Name Description Object sender DotNetHelper_Contracts.EventHandler.SqlExceptionEventArgs e Extension Methods TypeExtension.CanHaveNullValue<T>(T) TypeExtension.CopyObject<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlCharConverter.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlCharConverter.html",
    "title": "Class XmlCharConverter | DotNetHelper-Serializer",
    "keywords": "Class XmlCharConverter Inheritance Object XmlConverter < Char > XmlBasicConverter < Char > XmlBasicRawConverter < Char > XmlCharConverter Implements IXmlConverter Inherited Members XmlBasicRawConverter<Char>.WriteXml(XmlWriter, Object, XmlSerializationContext) XmlBasicConverter<Char>.ReadXml(XmlReader, XmlSerializationContext) XmlConverter<Char>.CanRead(Type) XmlConverter<Char>.CanWrite(Type) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters.Basics Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlCharConverter : XmlBasicRawConverter<char>, IXmlConverter Methods | Improve this Doc View Source Parse(String, XmlSerializationContext) Declaration protected override char Parse(string value, XmlSerializationContext context) Parameters Type Name Description String value XmlSerializationContext context Returns Type Description Char Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.Char>.Parse(System.String, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) | Improve this Doc View Source ToString(Char, XmlSerializationContext) Declaration protected override string ToString(char value, XmlSerializationContext context) Parameters Type Name Description Char value XmlSerializationContext context Returns Type Description String Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.Char>.ToString(System.Char, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) Implements IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.DataSourceDb.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.DataSourceDb.html",
    "title": "Class DataSourceDb | DotNetHelper-Serializer",
    "keywords": "Class DataSourceDb Inheritance Object DataSourceDb Implements IDataSourceDb IDisposable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource Assembly : DotNetHelper-Serializer.dll Syntax public class DataSourceDb : IDataSourceDb, IDisposable Constructors | Improve this Doc View Source DataSourceDb(DataBaseType, QueryBucketManager) DEFAULTS TO SQLSERVER Declaration public DataSourceDb(DataBaseType dbType = DataBaseType.SqlServer, QueryBucketManager options = null) Parameters Type Name Description DotNetHelper_Contracts.Enum.DataSource.DataBaseType dbType QueryBucketManager options The options. Properties | Improve this Doc View Source AlwaysUseBulkInsert if T1 is true Bulk Insert Will Always be used when the object counts is greater than or equal to T2 Declaration public (bool UseBulkInsert, int minimumRecordRequiredToUse)AlwaysUseBulkInsert { get; set; } Property Value Type Description ValueTuple < Boolean , Int32 > | Improve this Doc View Source ConnectionString Connection String That Will Used To Connect To Server Declaration public string ConnectionString { get; set; } Property Value Type Description String The connection string. | Improve this Doc View Source CreateSchemaIfNotExist Create Schema If It Doesn't Exist When Excuting Queries Declaration public bool CreateSchemaIfNotExist { get; set; } Property Value Type Description Boolean true if [create schema if not exist]; otherwise, false . | Improve this Doc View Source CreateTablesIfNotExist Create Table If It Doesn't Exist When Excuting Queries Only Works For Dynamic Execute Methods Declaration public bool CreateTablesIfNotExist { get; set; } Property Value Type Description Boolean true if [create tables if not exist]; otherwise, false . | Improve this Doc View Source CsvSerializer Gets or sets the Csv Serializer for columns that stores its value as csv Declaration public ICsvSerializer CsvSerializer { get; set; } Property Value Type Description ICsvSerializer | Improve this Doc View Source Database Database To Connect TO Declaration public string Database { get; set; } Property Value Type Description String The database. | Improve this Doc View Source DBTYPE Gets or sets the dbtype. Declaration public DataBaseType DBTYPE { get; } Property Value Type Description DotNetHelper_Contracts.Enum.DataSource.DataBaseType The dbtype. | Improve this Doc View Source EnableTransactionRollback Rollback Any Batch Data If One Record Fails Declaration public bool EnableTransactionRollback { get; set; } Property Value Type Description Boolean true if [enable transaction rollback]; otherwise, false . | Improve this Doc View Source FullFileName Full File Name To The .MDF File Declaration public string FullFileName { get; set; } Property Value Type Description String The full name of the file. | Improve this Doc View Source IntegratedSecurity Use Integrated Security AKA Windows Authentication Declaration public bool IntegratedSecurity { get; set; } Property Value Type Description Boolean true if [integrated security]; otherwise, false . | Improve this Doc View Source IsSqlExpress Set true if Instance is SQLExpress Declaration public bool IsSqlExpress { get; set; } Property Value Type Description Boolean true if this instance is SQL express; otherwise, false . | Improve this Doc View Source JetOledbSystemDatabase Only Used By OLEDB Connections Declaration public string JetOledbSystemDatabase { get; set; } Property Value Type Description String | Improve this Doc View Source JsonSerializer Gets or sets the Json Serializer for columns that stores its value as json Declaration public IJsonSerializer JsonSerializer { get; set; } Property Value Type Description IJsonSerializer | Improve this Doc View Source LastConnectionOpenTime Declaration public DateTime? LastConnectionOpenTime { get; set; } Property Value Type Description Nullable < DateTime > | Improve this Doc View Source ObjectSqlHelper Declaration public ObjectToSqlHelper ObjectSqlHelper { get; } Property Value Type Description ObjectToSqlHelper | Improve this Doc View Source Password Password that will be used if connection string is null or empty Declaration public string Password { get; set; } Property Value Type Description String The password. | Improve this Doc View Source PersistSecurityInfo Only Used By OLEDB Connections Declaration public bool PersistSecurityInfo { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Port Gets or sets the port. Declaration public int? Port { get; set; } Property Value Type Description Nullable < Int32 > The port. | Improve this Doc View Source Properties Gets or sets the properties. Declaration public DataSourceProperties Properties { get; set; } Property Value Type Description DataSourceProperties The properties. | Improve this Doc View Source Provider Only Used BY OLEDB Connections Declaration public string Provider { get; set; } Property Value Type Description String | Improve this Doc View Source QueryBucketManager Gets or sets the QueryBucketManger. Declaration public QueryBucketManager QueryBucketManager { get; set; } Property Value Type Description QueryBucketManager The settings. | Improve this Doc View Source Server Server Name Or IP thats hosting An Sql Instance Declaration public string Server { get; set; } Property Value Type Description String The server. | Improve this Doc View Source SqlSyntaxHelper Declaration public SqlSyntaxHelper SqlSyntaxHelper { get; } Property Value Type Description SqlSyntaxHelper | Improve this Doc View Source TableSchema TableSchema To Append to table name Declaration public string TableSchema { get; set; } Property Value Type Description String The table schema. | Improve this Doc View Source ThrowCustomExceptions Sometimes you don't want users to see the exact message. Setting this to true will throw a non-informant exception Declaration public bool ThrowCustomExceptions { get; set; } Property Value Type Description Boolean true if [throw custom exceptions]; otherwise, false . | Improve this Doc View Source Timeout Gets or sets the timeout for sql command not the connection itself. Declaration public TimeSpan Timeout { get; set; } Property Value Type Description TimeSpan The timeout. | Improve this Doc View Source UserName Username that will be used if connection string is null or empty Declaration public string UserName { get; set; } Property Value Type Description String The name of the user. | Improve this Doc View Source XmlSerializer Gets or sets the Xml Serializer for columns that stores its value as xml Declaration public IXmlSerializer XmlSerializer { get; set; } Property Value Type Description IXmlSerializer Methods | Improve this Doc View Source BuildConnectionString() Build a SqlConnection String Based On DataSource Properties Will AutoBuild A Connection String If An Connection String Is Not Already Defined Declaration public virtual string BuildConnectionString() Returns Type Description String connection string | Improve this Doc View Source BuildJoinString<T>() Declaration public (string sql, string splitOn)BuildJoinString<T>() where T : class Returns Type Description ValueTuple < String , String > Type Parameters Name Description T | Improve this Doc View Source BulkInsert<T>(IEnumerable<T>, String) Bulks the insert. Declaration public int BulkInsert<T>(IEnumerable<T> listPoco, string tableName) where T : class Parameters Type Name Description IEnumerable <T> listPoco The list poco. String tableName Name of the table. Returns Type Description Int32 System.Int32. Type Parameters Name Description T | Improve this Doc View Source BulkInsertDataTable(DataTable, SqlBulkCopyOptions, String, Action<SqlRowsCopiedEventArgs>) Declaration public void BulkInsertDataTable(DataTable table, SqlBulkCopyOptions options, string destinationTableName = null, Action<SqlRowsCopiedEventArgs> callback = null) Parameters Type Name Description DataTable table SqlBulkCopyOptions options String destinationTableName Action < SqlRowsCopiedEventArgs > callback | Improve this Doc View Source CanConnect() Determines whether this instance can connect. Declaration public bool CanConnect() Returns Type Description Boolean true if this instance can connect; otherwise, false . | Improve this Doc View Source CreateLocalDatabaseFile(String, String, Boolean) Connection String Must Be Valid To Create Declaration public int CreateLocalDatabaseFile(string fullFilePath, string databaseName, bool overwrite = false) Parameters Type Name Description String fullFilePath The full file path. String databaseName Name of the database. Boolean overwrite if set to true [overwrite]. Returns Type Description Int32 System.Int32. | Improve this Doc View Source CreateScripts<T>(ActionType, List<T>, String, ScriptType, Expression<Func<T, Object>>) Creates the scripts. Declaration public List<string> CreateScripts<T>(ActionType scriptsType, List<T> objects, string tableName = null, ScriptType type = ScriptType.HumanReadable, Expression<Func<T, object>> overrideKeys = null) where T : class Parameters Type Name Description DotNetHelper_Contracts.Enum.DataSource.ActionType scriptsType Type of the scripts. List <T> objects The objects. String tableName Name of the table. DotNetHelper_Contracts.Enum.DataSource.ScriptType type The type. Expression < Func <T, Object >> overrideKeys Returns Type Description List < String > List<System.String>. Type Parameters Name Description T Exceptions Type Condition ArgumentOutOfRangeException type - null | Improve this Doc View Source CreateTableFromClass(Type, String, Boolean) Creates the table from class. Declaration public bool CreateTableFromClass(Type type, string tableName, bool dropIfExist = false) Parameters Type Name Description Type type String tableName Name of the table. Boolean dropIfExist if set to true [drop if exist]. Returns Type Description Boolean true if XXXX, false otherwise. | Improve this Doc View Source CreateTableFromClass<T>(String, Boolean) Creates the table from class. Declaration public bool CreateTableFromClass<T>(string tableName, bool dropIfExist = false) where T : class Parameters Type Name Description String tableName Name of the table. Boolean dropIfExist if set to true [drop if exist]. Returns Type Description Boolean true if XXXX, false otherwise. Type Parameters Name Description T | Improve this Doc View Source CreateTableFromDynamicObject<T>(T, String, Boolean) Creates the table from a dynamic object . Declaration public bool CreateTableFromDynamicObject<T>(T dynamicObject, string tableName, bool dropIfExist = false) where T : class Parameters Type Name Description T dynamicObject String tableName Name of the table. Boolean dropIfExist if set to true [drop if exist]. Returns Type Description Boolean true if XXXX, false otherwise. Type Parameters Name Description T | Improve this Doc View Source DBTypeToDotNetType(String) Databases the type of the type to dot net. Declaration public Type DBTypeToDotNetType(string type) Parameters Type Name Description String type The type. Returns Type Description Type Type. | Improve this Doc View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() | Improve this Doc View Source DropTable(String) Drops the table. Declaration public bool DropTable(string tableName) Parameters Type Name Description String tableName Name of the table. Returns Type Description Boolean true if a table was drop then return true, false otherwise. | Improve this Doc View Source DumpTableDataToFile(String, String, FileOption, String) Dumps the table data to file. Declaration public bool DumpTableDataToFile(string fullFilePath, string tableName, FileOption option, string whereClause = null) Parameters Type Name Description String fullFilePath The full file path. String tableName Name of the table. DotNetHelper_Contracts.Enum.IO.FileOption option The option. String whereClause The where clause. Returns Type Description Boolean true if XXXX, false otherwise. | Improve this Doc View Source ErrorHandling(Exception) Errors the handling. Declaration public Exception ErrorHandling(Exception error) Parameters Type Name Description Exception error The error. Returns Type Description Exception Exception. | Improve this Doc View Source ErrorHandling(Exception, String) Errors the handling. Declaration public Exception ErrorHandling(Exception error, string sql) Parameters Type Name Description Exception error The error. String sql Returns Type Description Exception Exception. | Improve this Doc View Source ExecuteDynamicQuery<T>(ActionType, T, String, Expression<Func<T, Object>>) Declaration public int ExecuteDynamicQuery<T>(ActionType type, T poco, string tableName = null, Expression<Func<T, object>> overrideKeys = null) where T : class Parameters Type Name Description DotNetHelper_Contracts.Enum.DataSource.ActionType type T poco String tableName Expression < Func <T, Object >> overrideKeys Returns Type Description Int32 Type Parameters Name Description T | Improve this Doc View Source ExecuteDynamicQuery<T>(ActionType, IEnumerable<T>, String, Expression<Func<T, Object>>) Executes the dynamic query. Declaration public int ExecuteDynamicQuery<T>(ActionType type, IEnumerable<T> poco, string tableName = null, Expression<Func<T, object>> overrideKeys = null) where T : class Parameters Type Name Description DotNetHelper_Contracts.Enum.DataSource.ActionType type Type Of Query To Execute IEnumerable <T> poco The Object To Execute Against String tableName Name of the table. Expression < Func <T, Object >> overrideKeys Returns Type Description Int32 Returns Record Affected Type Parameters Name Description T Exceptions Type Condition ArgumentOutOfRangeException type - null | Improve this Doc View Source ExecuteDynamicQueryReturnIdentity<T>(ActionType, T, String) Declaration public T ExecuteDynamicQueryReturnIdentity<T>(ActionType type, T poco, string tableName = null) where T : class Parameters Type Name Description DotNetHelper_Contracts.Enum.DataSource.ActionType type T poco String tableName Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source ExecuteDynamicQueryWithOutputs<T>(ActionType, T, Expression<Func<T, Object>>, String) Declaration public IDataReader ExecuteDynamicQueryWithOutputs<T>(ActionType type, T poco, Expression<Func<T, object>> expression, string tableName = null) where T : class Parameters Type Name Description DotNetHelper_Contracts.Enum.DataSource.ActionType type T poco Expression < Func <T, Object >> expression String tableName Returns Type Description IDataReader Type Parameters Name Description T | Improve this Doc View Source ExecuteManualNonQuerySql(String) Executes the manual non query SQL. Declaration public int ExecuteManualNonQuerySql(string query) Parameters Type Name Description String query The query. Returns Type Description Int32 System.Int32. | Improve this Doc View Source ExecuteManualQuery(IDbConnection, String, CommandBehavior) Retrieve A DataReader Of All Records From The Specified Query Please Make Sure You Closed The DataReader When No longer need Declaration public IDataReader ExecuteManualQuery(IDbConnection connection, string query, CommandBehavior behavior = CommandBehavior.CloseConnection) Parameters Type Name Description IDbConnection connection String query The query. CommandBehavior behavior Returns Type Description IDataReader IDataReader. Exceptions Type Condition NotImplementedException Sorry Haven't implemented this yet | Improve this Doc View Source ExecuteManualQuery(String) Retrieve A DataReader Of All Records From The Specified Query Please Make Sure You Closed The DataReader When No longer need Declaration public IDataReader ExecuteManualQuery(string query) Parameters Type Name Description String query The query. Returns Type Description IDataReader IDataReader. Exceptions Type Condition NotImplementedException Sorry Haven't implemented this yet | Improve this Doc View Source ExecuteManualQuery(String, List<DbParameter>) Executes the manual query. Declaration public IDataReader ExecuteManualQuery(string query, List<DbParameter> parameters) Parameters Type Name Description String query The query. List < DbParameter > parameters The parameters. Returns Type Description IDataReader IDataReader. | Improve this Doc View Source ExecuteManualSql<T>(String) Executes the manual SQL. Declaration public List<T> ExecuteManualSql<T>(string query) where T : class Parameters Type Name Description String query The query. Returns Type Description List <T> List<T>. Type Parameters Name Description T | Improve this Doc View Source ExecuteStoredProcedure(String, List<DbParameter>) Executes the stored procedure. Declaration public IDataReader ExecuteStoredProcedure(string procedureName, List<DbParameter> parameters) Parameters Type Name Description String procedureName Name of the procedure. List < DbParameter > parameters The parameters. Returns Type Description IDataReader IDataReader. | Improve this Doc View Source Get(String, String) Gets the specified table name. Declaration public IDataReader Get(string tableName, string whereClause = null) Parameters Type Name Description String tableName Name of the table. String whereClause The where clause. Returns Type Description IDataReader IDataReader. | Improve this Doc View Source Get<T>(String, String) Gets the specified table name. Declaration public List<T> Get<T>(string tableName = null, string whereClause = null) where T : class Parameters Type Name Description String tableName Name of the table. String whereClause The where clause. Returns Type Description List <T> List<T>. Type Parameters Name Description T | Improve this Doc View Source GetDataSourceMetaDataQueries() Declaration public Tuple<string, string, string> GetDataSourceMetaDataQueries() Returns Type Description Tuple < String , String , String > | Improve this Doc View Source GetDefaultTableName(String, Boolean, Boolean, Boolean) Declaration public virtual string GetDefaultTableName(string tableName, bool includeDatabase = true, bool includeSchema = true, bool includeBrackets = true) Parameters Type Name Description String tableName Boolean includeDatabase Boolean includeSchema Boolean includeBrackets Returns Type Description String | Improve this Doc View Source GetDefaultTableName(Type, String, Boolean, Boolean, Boolean) Declaration public virtual string GetDefaultTableName(Type type, string tableName, bool includeDatabase = true, bool includeSchema = true, bool includeBrackets = true) Parameters Type Name Description Type type String tableName Boolean includeDatabase Boolean includeSchema Boolean includeBrackets Returns Type Description String | Improve this Doc View Source GetDefaultTableName<T>(String, Boolean, Boolean, Boolean) Declaration public virtual string GetDefaultTableName<T>(string tableName, bool includeDatabase = true, bool includeSchema = true, bool includeBrackets = true) Parameters Type Name Description String tableName Boolean includeDatabase Boolean includeSchema Boolean includeBrackets Returns Type Description String Type Parameters Name Description T | Improve this Doc View Source GetLinq<T>(Expression<Func<T, Boolean>>, String) Gets the specified T data filtering using the Linq Expression. Declaration public List<T> GetLinq<T>(Expression<Func<T, bool>> whereExpression, string tableName = null) where T : class Parameters Type Name Description Expression < Func <T, Boolean >> whereExpression String tableName Name of the table. Returns Type Description List <T> List<T>. Type Parameters Name Description T | Improve this Doc View Source GetNewCommand(String, IDbConnection, IDbTransaction) Declaration public virtual IDbCommand GetNewCommand(string cmdText = null, IDbConnection connection = null, IDbTransaction dbTransaction = null) Parameters Type Name Description String cmdText IDbConnection connection IDbTransaction dbTransaction Returns Type Description IDbCommand | Improve this Doc View Source GetNewConnection(Boolean, Boolean) Declaration public virtual IDbConnection GetNewConnection(bool openConnection, bool throwOnFailOpenConnection) Parameters Type Name Description Boolean openConnection Boolean throwOnFailOpenConnection Returns Type Description IDbConnection | Improve this Doc View Source GetNewParameter(String, Object) Declaration public virtual DbParameter GetNewParameter(string parmeterName, object value) Parameters Type Name Description String parmeterName Object value Returns Type Description DbParameter | Improve this Doc View Source GetTopOne<T>(T, String) Get the Top 1 record where the primary key(s) matches if matching record exist then return default value Declaration public T GetTopOne<T>(T obj, string tableName = null) where T : class Parameters Type Name Description T obj only use for key mapping against table String tableName Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source GetWithParameters<T>(String, ExpandoObject, String) Gets the specified table name data with dynamically building your where clause from your paramter object Declaration public List<T> GetWithParameters<T>(string tableName, ExpandoObject dynamicParameters, string whereClause = null) where T : class Parameters Type Name Description String tableName Name of the table. ExpandoObject dynamicParameters String whereClause Returns Type Description List <T> List<T>. Type Parameters Name Description T | Improve this Doc View Source LogConnectionTime(IDbConnection, String) Logs the connection time. Declaration public virtual QueryBucket LogConnectionTime(IDbConnection connection, string query) Parameters Type Name Description IDbConnection connection The connection. String query The query. Returns Type Description QueryBucket QueryBucket. | Improve this Doc View Source OnSqlExeception(SqlExceptionEventArgs) Declaration protected virtual void OnSqlExeception(SqlExceptionEventArgs e) Parameters Type Name Description DotNetHelper_Contracts.EventHandler.SqlExceptionEventArgs e | Improve this Doc View Source RecordExist<T>(T, String, Expression<Func<T, Object>>) Declaration public bool RecordExist<T>(T obj, string tableName, Expression<Func<T, object>> overrideKey = null) where T : class Parameters Type Name Description T obj String tableName Expression < Func <T, Object >> overrideKey Returns Type Description Boolean Type Parameters Name Description T | Improve this Doc View Source RefreshDataSourceProperties() Returns true if the refresh was succesful Declaration public bool RefreshDataSourceProperties() Returns Type Description Boolean true if XXXX, false otherwise. | Improve this Doc View Source SchemaExist(String, Boolean) Checks If Schema Exist Declaration public bool SchemaExist(string schema, bool createIfFalse = false) Parameters Type Name Description String schema The schema. Boolean createIfFalse if set to true [create if false]. Returns Type Description Boolean true if XXXX, false otherwise. | Improve this Doc View Source ScriptCSharpClassToTsql<T>(String) Scripts the c sharp class to TSQL. Declaration public string ScriptCSharpClassToTsql<T>(string tableName = null) where T : class Parameters Type Name Description String tableName Name of the table. Returns Type Description String System.String. Type Parameters Name Description T | Improve this Doc View Source ScriptQueryToCSharpClass(String, String) Scripts the query to c sharp class. Declaration public string ScriptQueryToCSharpClass(string query, string className = null) Parameters Type Name Description String query The query. String className Name of the class. Returns Type Description String System.String. | Improve this Doc View Source ScriptTableToCSharpClass(String) Scripts the table to c sharp class. Declaration public string ScriptTableToCSharpClass(string tableName) Parameters Type Name Description String tableName Name of the table. Returns Type Description String System.String. | Improve this Doc View Source TableExist(String) Check If Table Exist Must Include Schema Declaration public bool TableExist(string tableName) Parameters Type Name Description String tableName Name of the table. Returns Type Description Boolean true if XXXX, false otherwise. Events | Improve this Doc View Source OnSqlException Declaration public event EventHandler OnSqlException Event Type Type Description EventHandler Implements IDataSourceDb System.IDisposable Extension Methods IDataSourceDBExtension.BuildDbParameterList<T>(IDataSourceDb, T) TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.Model.QueryBucket.html": {
    "href": "api/DotNetHelper_Serializer.Model.QueryBucket.html",
    "title": "Class QueryBucket | DotNetHelper-Serializer",
    "keywords": "Class QueryBucket Inheritance Object QueryBucket Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.Model Assembly : DotNetHelper-Serializer.dll Syntax public class QueryBucket Properties | Improve this Doc View Source ConnectionDisposeTime Declaration public DateTime? ConnectionDisposeTime { get; set; } Property Value Type Description Nullable < DateTime > | Improve this Doc View Source ConnectionStartTime Declaration public DateTime ConnectionStartTime { get; set; } Property Value Type Description DateTime | Improve this Doc View Source DatabaseType Declaration public string DatabaseType { get; set; } Property Value Type Description String | Improve this Doc View Source ExecutedSuccesfully Declaration public bool? ExecutedSuccesfully { get; set; } Property Value Type Description Nullable < Boolean > | Improve this Doc View Source Query Declaration public string Query { get; set; } Property Value Type Description String | Improve this Doc View Source ReadableQuery Declaration public string ReadableQuery { get; set; } Property Value Type Description String | Improve this Doc View Source Server Declaration public string Server { get; set; } Property Value Type Description String Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.IXmlContractResolver.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.IXmlContractResolver.html",
    "title": "Interface IXmlContractResolver | DotNetHelper-Serializer",
    "keywords": "Interface IXmlContractResolver Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts Assembly : DotNetHelper-Serializer.dll Syntax public interface IXmlContractResolver Methods | Improve this Doc View Source ResolveContract(Type) Declaration XmlContract ResolveContract(Type valueType) Parameters Type Name Description Type valueType Returns Type Description XmlContract Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlEnumContractBuilder.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlEnumContractBuilder.html",
    "title": "Class XmlEnumContractBuilder | DotNetHelper-Serializer",
    "keywords": "Class XmlEnumContractBuilder Inheritance Object XmlContractBuilder XmlEnumContractBuilder XmlEnumContractBuilder<T> Implements IXmlBuilder Inherited Members XmlContractBuilder.ValueType XmlContractBuilder.Name Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders Assembly : DotNetHelper-Serializer.dll Syntax public class XmlEnumContractBuilder : XmlContractBuilder, IXmlBuilder Constructors | Improve this Doc View Source XmlEnumContractBuilder(Type) Declaration public XmlEnumContractBuilder(Type valueType) Parameters Type Name Description Type valueType Properties | Improve this Doc View Source Items Declaration public XmlEnumItemCollection Items { get; set; } Property Value Type Description XmlEnumItemCollection Methods | Improve this Doc View Source Build() Declaration public XmlEnumContract Build() Returns Type Description XmlEnumContract | Improve this Doc View Source BuildContract() Declaration public override XmlContract BuildContract() Returns Type Description XmlContract Overrides XmlContractBuilder.BuildContract() | Improve this Doc View Source Create(XmlEnumContract) Declaration public static XmlEnumContractBuilder Create(XmlEnumContract contract) Parameters Type Name Description XmlEnumContract contract Returns Type Description XmlEnumContractBuilder Implements IXmlBuilder Extension Methods TypeExtension.CanHaveNullValue<T>(T) XmlBuilderExtensions.SetName<TBuilder>(TBuilder, XmlName) XmlContractBuilderExtensions.SetItem<TBuilder>(TBuilder, Int64, String) XmlContractBuilderExtensions.SetItem<TBuilder>(TBuilder, XmlEnumItem) XmlContractBuilderExtensions.RemoveItem<TBuilder>(TBuilder, Int64)"
  },
  "api/DotNetHelper_Serializer.Helper.DataValidation.html": {
    "href": "api/DotNetHelper_Serializer.Helper.DataValidation.html",
    "title": "Class DataValidation | DotNetHelper-Serializer",
    "keywords": "Class DataValidation Inheritance Object DataValidation Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.Helper Assembly : DotNetHelper-Serializer.dll Syntax public static class DataValidation Methods | Improve this Doc View Source IsValidBasedOnSqlColumnAttributes(AdvanceMember) Declaration public static Tuple<bool, List<string>> IsValidBasedOnSqlColumnAttributes(AdvanceMember member) Parameters Type Name Description AdvanceMember member Returns Type Description Tuple < Boolean , List < String >>"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilder.html",
    "title": "Class XmlKnownTypeBuilder | DotNetHelper-Serializer",
    "keywords": "Class XmlKnownTypeBuilder Inheritance Object XmlMemberBuilder XmlKnownTypeBuilder Implements IXmlObjectBuilder IXmlBuilder Inherited Members XmlMemberBuilder.ValueType XmlMemberBuilder.Name XmlMemberBuilder.TypeHandling Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders Assembly : DotNetHelper-Serializer.dll Syntax public class XmlKnownTypeBuilder : XmlMemberBuilder, IXmlObjectBuilder, IXmlBuilder Constructors | Improve this Doc View Source XmlKnownTypeBuilder(Type) Declaration public XmlKnownTypeBuilder(Type valueType) Parameters Type Name Description Type valueType Properties | Improve this Doc View Source DefaultValue Declaration public object DefaultValue { get; set; } Property Value Type Description Object | Improve this Doc View Source DefaultValueHandling Declaration public XmlDefaultValueHandling? DefaultValueHandling { get; set; } Property Value Type Description Nullable < XmlDefaultValueHandling > | Improve this Doc View Source NullValueHandling Declaration public XmlNullValueHandling? NullValueHandling { get; set; } Property Value Type Description Nullable < XmlNullValueHandling > Methods | Improve this Doc View Source Build() Declaration public XmlKnownType Build() Returns Type Description XmlKnownType | Improve this Doc View Source Create(XmlKnownType) Declaration public static XmlKnownTypeBuilder Create(XmlKnownType knownType) Parameters Type Name Description XmlKnownType knownType Returns Type Description XmlKnownTypeBuilder Implements IXmlObjectBuilder IXmlBuilder Extension Methods TypeExtension.CanHaveNullValue<T>(T) XmlBuilderExtensions.SetName<TBuilder>(TBuilder, XmlName) XmlBuilderExtensions.SetTypeHandling<TBuilder>(TBuilder, Nullable<XmlTypeHandling>) XmlBuilderExtensions.SetNullable<T>(T, Boolean) XmlBuilderExtensions.SetNullValueHandling<T>(T, Nullable<XmlNullValueHandling>) XmlBuilderExtensions.SetDefaultValue<TBuilder>(TBuilder, Object) XmlBuilderExtensions.SetDefaultValueHandling<TBuilder>(TBuilder, Nullable<XmlDefaultValueHandling>)"
  },
  "api/DotNetHelper_Serializer.Extension.ExtDictonary.html": {
    "href": "api/DotNetHelper_Serializer.Extension.ExtDictonary.html",
    "title": "Class ExtDictonary | DotNetHelper-Serializer",
    "keywords": "Class ExtDictonary Inheritance Object ExtDictonary Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.Extension Assembly : DotNetHelper-Serializer.dll Syntax public static class ExtDictonary Methods | Improve this Doc View Source DictionaryToObject<T>(IOrderedDictionary) Declaration public static T DictionaryToObject<T>(this IOrderedDictionary dict) Parameters Type Name Description IOrderedDictionary dict Returns Type Description T Type Parameters Name Description T"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicRawConverter-1.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicRawConverter-1.html",
    "title": "Class XmlBasicRawConverter<T> | DotNetHelper-Serializer",
    "keywords": "Class XmlBasicRawConverter<T> Inheritance Object XmlConverter <T> XmlBasicConverter <T> XmlBasicRawConverter<T> XmlBooleanConverter XmlByteConverter XmlCharConverter XmlDateTimeConverter XmlDateTimeOffsetConverter XmlDecimalConverter XmlDoubleConverter XmlGuidConverter XmlInt16Converter XmlInt32Converter XmlInt64Converter XmlSByteConverter XmlSingleConverter XmlTimeSpanConverter XmlUInt16Converter XmlUInt32Converter XmlUInt64Converter Implements IXmlConverter Inherited Members XmlBasicConverter<T>.ReadXml(XmlReader, XmlSerializationContext) XmlBasicConverter<T>.Parse(String, XmlSerializationContext) XmlBasicConverter<T>.ToString(T, XmlSerializationContext) XmlConverter<T>.CanRead(Type) XmlConverter<T>.CanWrite(Type) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters Assembly : DotNetHelper-Serializer.dll Syntax public abstract class XmlBasicRawConverter<T> : XmlBasicConverter<T>, IXmlConverter Type Parameters Name Description T Methods | Improve this Doc View Source WriteXml(XmlWriter, Object, XmlSerializationContext) Declaration public override void WriteXml(XmlWriter writer, object value, XmlSerializationContext context) Parameters Type Name Description XmlWriter writer Object value XmlSerializationContext context Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<T>.WriteXml(System.Xml.XmlWriter, System.Object, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) Implements IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter-1.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter-1.html",
    "title": "Class XmlBasicConverter<T> | DotNetHelper-Serializer",
    "keywords": "Class XmlBasicConverter<T> Inheritance Object XmlConverter <T> XmlBasicConverter<T> XmlCustomDateTimeConverter XmlStringConverter XmlTypeConverter XmlUriConverter XmlBasicRawConverter<T> Implements IXmlConverter Inherited Members XmlConverter<T>.CanRead(Type) XmlConverter<T>.CanWrite(Type) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters Assembly : DotNetHelper-Serializer.dll Syntax public abstract class XmlBasicConverter<T> : XmlConverter<T>, IXmlConverter Type Parameters Name Description T Methods | Improve this Doc View Source Parse(String, XmlSerializationContext) Declaration protected abstract T Parse(string value, XmlSerializationContext context) Parameters Type Name Description String value XmlSerializationContext context Returns Type Description T | Improve this Doc View Source ReadXml(XmlReader, XmlSerializationContext) Declaration public override object ReadXml(XmlReader reader, XmlSerializationContext context) Parameters Type Name Description XmlReader reader XmlSerializationContext context Returns Type Description Object Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlConverter<T>.ReadXml(System.Xml.XmlReader, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) | Improve this Doc View Source ToString(T, XmlSerializationContext) Declaration protected abstract string ToString(T value, XmlSerializationContext context) Parameters Type Name Description T value XmlSerializationContext context Returns Type Description String | Improve this Doc View Source WriteXml(XmlWriter, Object, XmlSerializationContext) Declaration public override void WriteXml(XmlWriter writer, object value, XmlSerializationContext context) Parameters Type Name Description XmlWriter writer Object value XmlSerializationContext context Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlConverter<T>.WriteXml(System.Xml.XmlWriter, System.Object, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) Implements IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Collections.XmlDictionaryConverter.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Collections.XmlDictionaryConverter.html",
    "title": "Class XmlDictionaryConverter | DotNetHelper-Serializer",
    "keywords": "Class XmlDictionaryConverter Inheritance Object XmlConverterFactory XmlDictionaryConverter Implements IXmlConverterFactory IXmlConverter Inherited Members XmlConverterFactory.CreateConverter(XmlContract) XmlConverterFactory.CanRead(Type) XmlConverterFactory.CanWrite(Type) XmlConverterFactory.WriteXml(XmlWriter, Object, XmlSerializationContext) XmlConverterFactory.ReadXml(XmlReader, XmlSerializationContext) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters.Collections Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlDictionaryConverter : XmlConverterFactory, IXmlConverterFactory, IXmlConverter Methods | Improve this Doc View Source AcceptType(Type) Declaration protected override bool AcceptType(Type valueType) Parameters Type Name Description Type valueType Returns Type Description Boolean Overrides XmlConverterFactory.AcceptType(Type) | Improve this Doc View Source GetConverterType(Type) Declaration protected override Type GetConverterType(Type valueType) Parameters Type Name Description Type valueType Returns Type Description Type Overrides XmlConverterFactory.GetConverterType(Type) Implements IXmlConverterFactory IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.DataSourceXml.SettingsType.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.DataSourceXml.SettingsType.html",
    "title": "Enum DataSourceXml.SettingsType | DotNetHelper-Serializer",
    "keywords": "Enum DataSourceXml.SettingsType Enum SettingsType Namespace : DotNetHelper_Serializer.DataSource Assembly : DotNetHelper-Serializer.dll Syntax public enum SettingsType Fields Name Description Both When Performance Matters But Their Are Times When You Have To Open This Sucker Up DataTransfer The data transfer ManualEditing When Serializing A PreDefine Settings Will Be Used To Make The Xml Human Editable Friendly Extension Methods TypeExtension.CanHaveNullValue<DataSourceXml.SettingsType>()"
  },
  "api/DotNetHelper_Serializer.Attribute.SQLJoinType.html": {
    "href": "api/DotNetHelper_Serializer.Attribute.SQLJoinType.html",
    "title": "Enum SQLJoinType | DotNetHelper-Serializer",
    "keywords": "Enum SQLJoinType Namespace : DotNetHelper_Serializer.Attribute Assembly : DotNetHelper-Serializer.dll Syntax public enum SQLJoinType Fields Name Description INNER SQL-style INNER JOIN semantics: Only records that produce a match are returned. LEFT SQL-style LEFT OUTER JOIN semantics: All records of the left table are returned. If the right table holds no matching records, the right side's columns contain NULL. Extension Methods TypeExtension.CanHaveNullValue<SQLJoinType>()"
  },
  "api/DotNetHelper_Serializer.Model.TableNameParseObject.html": {
    "href": "api/DotNetHelper_Serializer.Model.TableNameParseObject.html",
    "title": "Class TableNameParseObject | DotNetHelper-Serializer",
    "keywords": "Class TableNameParseObject Inheritance Object TableNameParseObject Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.Model Assembly : DotNetHelper-Serializer.dll Syntax public class TableNameParseObject Properties | Improve this Doc View Source DatabaseName Declaration public string DatabaseName { get; } Property Value Type Description String | Improve this Doc View Source SchemaName Declaration public string SchemaName { get; } Property Value Type Description String | Improve this Doc View Source TableName Declaration public string TableName { get; } Property Value Type Description String Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.Model.TableDefinition.html": {
    "href": "api/DotNetHelper_Serializer.Model.TableDefinition.html",
    "title": "Class TableDefinition | DotNetHelper-Serializer",
    "keywords": "Class TableDefinition Inheritance Object TableDefinition Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.Model Assembly : DotNetHelper-Serializer.dll Syntax public class TableDefinition Properties | Improve this Doc View Source CHAR_OCTET_LENGTH Declaration public int CHAR_OCTET_LENGTH { get; } Property Value Type Description Int32 | Improve this Doc View Source COLUMN_DEF Declaration public string COLUMN_DEF { get; } Property Value Type Description String | Improve this Doc View Source COLUMN_NAME Declaration public string COLUMN_NAME { get; } Property Value Type Description String | Improve this Doc View Source DATA_TYPE Declaration public short DATA_TYPE { get; } Property Value Type Description Int16 | Improve this Doc View Source IS_NULLABLE Declaration public string IS_NULLABLE { get; } Property Value Type Description String | Improve this Doc View Source LENGTH Declaration public int LENGTH { get; } Property Value Type Description Int32 | Improve this Doc View Source NULLABLE Declaration public short NULLABLE { get; } Property Value Type Description Int16 | Improve this Doc View Source ORDINAL_POSITION Declaration public int ORDINAL_POSITION { get; } Property Value Type Description Int32 | Improve this Doc View Source PRECISION Declaration public int PRECISION { get; } Property Value Type Description Int32 | Improve this Doc View Source RADIX Declaration public short RADIX { get; } Property Value Type Description Int16 | Improve this Doc View Source REMARKS Declaration public string REMARKS { get; } Property Value Type Description String | Improve this Doc View Source SCALE Declaration public short SCALE { get; } Property Value Type Description Int16 | Improve this Doc View Source SQL_DATA_TYPE Declaration public short SQL_DATA_TYPE { get; } Property Value Type Description Int16 | Improve this Doc View Source SQL_DATETIME_SUB Declaration public short SQL_DATETIME_SUB { get; } Property Value Type Description Int16 | Improve this Doc View Source SS_DATA_TYPE Declaration public byte SS_DATA_TYPE { get; } Property Value Type Description Byte | Improve this Doc View Source TABLE_NAME Declaration public string TABLE_NAME { get; } Property Value Type Description String | Improve this Doc View Source TABLE_OWNER Declaration public string TABLE_OWNER { get; } Property Value Type Description String | Improve this Doc View Source TABLE_QUALIFIER Declaration public string TABLE_QUALIFIER { get; } Property Value Type Description String | Improve this Doc View Source TYPE_NAME Declaration public string TYPE_NAME { get; } Property Value Type Description String Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.Extension.DynamicMember.html": {
    "href": "api/DotNetHelper_Serializer.Extension.DynamicMember.html",
    "title": "Class DynamicMember | DotNetHelper-Serializer",
    "keywords": "Class DynamicMember Inheritance Object DynamicMember Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.Extension Assembly : DotNetHelper-Serializer.dll Syntax public sealed class DynamicMember Properties | Improve this Doc View Source CanRead Declaration public bool CanRead { get; } Property Value Type Description Boolean | Improve this Doc View Source CanWrite Declaration public bool CanWrite { get; } Property Value Type Description Boolean | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Type Declaration public Type Type { get; } Property Value Type Description Type Methods | Improve this Doc View Source GetAttribute(Type, Boolean) Declaration public Attribute GetAttribute(Type attributeType, bool inherit) Parameters Type Name Description Type attributeType Boolean inherit Returns Type Description Attribute | Improve this Doc View Source IsDefined(Type) Declaration public bool IsDefined(Type attributeType) Parameters Type Name Description Type attributeType Returns Type Description Boolean Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.Extension.DataTypes.html": {
    "href": "api/DotNetHelper_Serializer.Extension.DataTypes.html",
    "title": "Enum DataTypes | DotNetHelper-Serializer",
    "keywords": "Enum DataTypes Namespace : DotNetHelper_Serializer.Extension Assembly : DotNetHelper-Serializer.dll Syntax public enum DataTypes Extension Methods TypeExtension.CanHaveNullValue<DataTypes>()"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Specialized.XmlNullableConverter.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Specialized.XmlNullableConverter.html",
    "title": "Class XmlNullableConverter | DotNetHelper-Serializer",
    "keywords": "Class XmlNullableConverter Inheritance Object XmlNullableConverter Implements IXmlConverter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters.Specialized Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlNullableConverter : IXmlConverter Methods | Improve this Doc View Source CanRead(Type) Declaration public bool CanRead(Type valueType) Parameters Type Name Description Type valueType Returns Type Description Boolean | Improve this Doc View Source CanWrite(Type) Declaration public bool CanWrite(Type valueType) Parameters Type Name Description Type valueType Returns Type Description Boolean | Improve this Doc View Source ReadXml(XmlReader, XmlSerializationContext) Declaration public object ReadXml(XmlReader reader, XmlSerializationContext context) Parameters Type Name Description XmlReader reader XmlSerializationContext context Returns Type Description Object | Improve this Doc View Source WriteXml(XmlWriter, Object, XmlSerializationContext) Declaration public void WriteXml(XmlWriter writer, object value, XmlSerializationContext context) Parameters Type Name Description XmlWriter writer Object value XmlSerializationContext context Implements IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.Tools.DevelopersTools.html": {
    "href": "api/DotNetHelper_Serializer.Tools.DevelopersTools.html",
    "title": "Class DevelopersTools | DotNetHelper-Serializer",
    "keywords": "Class DevelopersTools Inheritance Object DevelopersTools Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.Tools Assembly : DotNetHelper-Serializer.dll Syntax public static class DevelopersTools Methods | Improve this Doc View Source AdvanceTypeToSqlType(AdvanceMember, DataBaseType, Boolean) Declaration public static string AdvanceTypeToSqlType(AdvanceMember advance, DataBaseType sqlType, bool hasMultipleKeys = false) Parameters Type Name Description AdvanceMember advance DotNetHelper_Contracts.Enum.DataSource.DataBaseType sqlType Boolean hasMultipleKeys Returns Type Description String | Improve this Doc View Source ToCSharpClass(IDataReader, String, Boolean) Declaration public static string ToCSharpClass(IDataReader reader, string className = null, bool nullifyProperties = false) Parameters Type Name Description IDataReader reader String className Boolean nullifyProperties Returns Type Description String | Improve this Doc View Source TypeToSqlType(Type, DataBaseType) Declaration public static string TypeToSqlType(Type type, DataBaseType sqlType) Parameters Type Name Description Type type DotNetHelper_Contracts.Enum.DataSource.DataBaseType sqlType Returns Type Description String | Improve this Doc View Source XmlTCSharpClass(String) Declaration public static string XmlTCSharpClass(string xml) Parameters Type Name Description String xml Returns Type Description String"
  },
  "api/DotNetHelper_Serializer.Model.html": {
    "href": "api/DotNetHelper_Serializer.Model.html",
    "title": "Namespace DotNetHelper_Serializer.Model | DotNetHelper-Serializer",
    "keywords": "Namespace DotNetHelper_Serializer.Model Classes DataSourceProperties Db DbSchema DbTable ErrorObject FullQueryBucketEventArgs LogObject An Log Object Thats Used To Store Errors In Database QueryBucket QueryBucketEventArgs QueryBucketManager TableDefinition TableNameParseObject Delegates QueryBucketManager.FullQueryBucketEventHandler QueryBucketManager.OnBeforeAddToBucketEventHandler"
  },
  "api/DotNetHelper_Serializer.Interface.html": {
    "href": "api/DotNetHelper_Serializer.Interface.html",
    "title": "Namespace DotNetHelper_Serializer.Interface | DotNetHelper-Serializer",
    "keywords": "Namespace DotNetHelper_Serializer.Interface Interfaces ICsvSerializer IDataSourceDb IJsonSerializer IXmlSerializer"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlStringConverter.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlStringConverter.html",
    "title": "Class XmlStringConverter | DotNetHelper-Serializer",
    "keywords": "Class XmlStringConverter Inheritance Object XmlConverter < String > XmlBasicConverter < String > XmlStringConverter Implements IXmlConverter Inherited Members XmlBasicConverter<String>.WriteXml(XmlWriter, Object, XmlSerializationContext) XmlBasicConverter<String>.ReadXml(XmlReader, XmlSerializationContext) XmlConverter<String>.CanRead(Type) XmlConverter<String>.CanWrite(Type) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters.Basics Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlStringConverter : XmlBasicConverter<string>, IXmlConverter Methods | Improve this Doc View Source Parse(String, XmlSerializationContext) Declaration protected override string Parse(string value, XmlSerializationContext context) Parameters Type Name Description String value XmlSerializationContext context Returns Type Description String Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.String>.Parse(System.String, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) | Improve this Doc View Source ToString(String, XmlSerializationContext) Declaration protected override string ToString(string value, XmlSerializationContext context) Parameters Type Name Description String value XmlSerializationContext context Returns Type Description String Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.String>.ToString(System.String, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) Implements IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlCustomDateTimeConverter.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlCustomDateTimeConverter.html",
    "title": "Class XmlCustomDateTimeConverter | DotNetHelper-Serializer",
    "keywords": "Class XmlCustomDateTimeConverter Inheritance Object XmlConverter < DateTime > XmlBasicConverter < DateTime > XmlCustomDateTimeConverter Implements IXmlConverter Inherited Members XmlBasicConverter<DateTime>.WriteXml(XmlWriter, Object, XmlSerializationContext) XmlBasicConverter<DateTime>.ReadXml(XmlReader, XmlSerializationContext) XmlConverter<DateTime>.CanRead(Type) XmlConverter<DateTime>.CanWrite(Type) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters.Basics Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlCustomDateTimeConverter : XmlBasicConverter<DateTime>, IXmlConverter Constructors | Improve this Doc View Source XmlCustomDateTimeConverter(String) Declaration public XmlCustomDateTimeConverter(string format = null) Parameters Type Name Description String format Properties | Improve this Doc View Source Format Declaration public string Format { get; } Property Value Type Description String Methods | Improve this Doc View Source Parse(String, XmlSerializationContext) Declaration protected override DateTime Parse(string value, XmlSerializationContext context) Parameters Type Name Description String value XmlSerializationContext context Returns Type Description DateTime Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.DateTime>.Parse(System.String, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) | Improve this Doc View Source ToString(DateTime, XmlSerializationContext) Declaration protected override string ToString(DateTime value, XmlSerializationContext context) Parameters Type Name Description DateTime value XmlSerializationContext context Returns Type Description String Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.DateTime>.ToString(System.DateTime, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) Implements IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.XmlTypeContext.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.XmlTypeContext.html",
    "title": "Class XmlTypeContext | DotNetHelper-Serializer",
    "keywords": "Class XmlTypeContext Inheritance Object XmlTypeContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml Assembly : DotNetHelper-Serializer.dll Syntax public class XmlTypeContext Constructors | Improve this Doc View Source XmlTypeContext(XmlContract, IXmlConverter, IXmlConverter) Declaration public XmlTypeContext(XmlContract contract, IXmlConverter readConverter, IXmlConverter writeConverter) Parameters Type Name Description XmlContract contract IXmlConverter readConverter IXmlConverter writeConverter Properties | Improve this Doc View Source Contract Declaration public XmlContract Contract { get; } Property Value Type Description XmlContract | Improve this Doc View Source ReadConverter Declaration public IXmlConverter ReadConverter { get; } Property Value Type Description IXmlConverter | Improve this Doc View Source ReadXml Declaration public Func<XmlReader, XmlSerializationContext, object> ReadXml { get; } Property Value Type Description Func < XmlReader , XmlSerializationContext , Object > | Improve this Doc View Source WriteConverter Declaration public IXmlConverter WriteConverter { get; } Property Value Type Description IXmlConverter | Improve this Doc View Source WriteXml Declaration public Action<XmlWriter, object, XmlSerializationContext> WriteXml { get; } Property Value Type Description Action < XmlWriter , Object , XmlSerializationContext > Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.XmlSerializerSettings.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.XmlSerializerSettings.html",
    "title": "Class XmlSerializerSettings | DotNetHelper-Serializer",
    "keywords": "Class XmlSerializerSettings Inheritance Object XmlSerializerSettings Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlSerializerSettings Constructors | Improve this Doc View Source XmlSerializerSettings() Declaration public XmlSerializerSettings() Properties | Improve this Doc View Source ContractResolver Declaration public IXmlContractResolver ContractResolver { get; set; } Property Value Type Description IXmlContractResolver | Improve this Doc View Source Converters Declaration public ICollection<IXmlConverter> Converters { get; } Property Value Type Description ICollection < IXmlConverter > | Improve this Doc View Source Culture Declaration public CultureInfo Culture { get; set; } Property Value Type Description CultureInfo | Improve this Doc View Source DefaultValueHandling Declaration public XmlDefaultValueHandling DefaultValueHandling { get; set; } Property Value Type Description XmlDefaultValueHandling | Improve this Doc View Source Encoding Declaration public Encoding Encoding { get; set; } Property Value Type Description Encoding | Improve this Doc View Source Indent Declaration public bool Indent { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IndentChars Declaration public string IndentChars { get; set; } Property Value Type Description String | Improve this Doc View Source Namespaces Declaration public ICollection<XmlNamespace> Namespaces { get; } Property Value Type Description ICollection < XmlNamespace > | Improve this Doc View Source NullAttributeName Declaration public XmlName NullAttributeName { get; set; } Property Value Type Description XmlName | Improve this Doc View Source NullValueHandling Declaration public XmlNullValueHandling NullValueHandling { get; set; } Property Value Type Description XmlNullValueHandling | Improve this Doc View Source OmitXmlDeclaration Declaration public bool OmitXmlDeclaration { get; set; } Property Value Type Description Boolean | Improve this Doc View Source TypeAttributeName Declaration public XmlName TypeAttributeName { get; set; } Property Value Type Description XmlName | Improve this Doc View Source TypeHandling Declaration public XmlTypeHandling TypeHandling { get; set; } Property Value Type Description XmlTypeHandling | Improve this Doc View Source TypeResolver Declaration public IXmlTypeResolver TypeResolver { get; set; } Property Value Type Description IXmlTypeResolver Methods | Improve this Doc View Source GetReaderSettings() Declaration public XmlReaderSettings GetReaderSettings() Returns Type Description XmlReaderSettings | Improve this Doc View Source GetTypeContext(Type) Declaration public XmlTypeContext GetTypeContext(Type valueType) Parameters Type Name Description Type valueType Returns Type Description XmlTypeContext | Improve this Doc View Source GetWriterSettings() Declaration public XmlWriterSettings GetWriterSettings() Returns Type Description XmlWriterSettings Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Specialized.XmlSerializableConverter.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Specialized.XmlSerializableConverter.html",
    "title": "Class XmlSerializableConverter | DotNetHelper-Serializer",
    "keywords": "Class XmlSerializableConverter Inheritance Object XmlSerializableConverter Implements IXmlConverter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters.Specialized Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlSerializableConverter : IXmlConverter Methods | Improve this Doc View Source CanRead(Type) Declaration public bool CanRead(Type valueType) Parameters Type Name Description Type valueType Returns Type Description Boolean | Improve this Doc View Source CanWrite(Type) Declaration public bool CanWrite(Type valueType) Parameters Type Name Description Type valueType Returns Type Description Boolean | Improve this Doc View Source ReadXml(XmlReader, XmlSerializationContext) Declaration public object ReadXml(XmlReader reader, XmlSerializationContext context) Parameters Type Name Description XmlReader reader XmlSerializationContext context Returns Type Description Object | Improve this Doc View Source WriteXml(XmlWriter, Object, XmlSerializationContext) Declaration public void WriteXml(XmlWriter writer, object value, XmlSerializationContext context) Parameters Type Name Description XmlWriter writer Object value XmlSerializationContext context Implements IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Collections.ICollectionProxy.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Collections.ICollectionProxy.html",
    "title": "Interface ICollectionProxy | DotNetHelper-Serializer",
    "keywords": "Interface ICollectionProxy Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters.Collections Assembly : DotNetHelper-Serializer.dll Syntax public interface ICollectionProxy Methods | Improve this Doc View Source Add(Object) Declaration void Add(object value) Parameters Type Name Description Object value | Improve this Doc View Source GetResult() Declaration object GetResult() Returns Type Description Object Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Collections.XmlArrayConverter.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Collections.XmlArrayConverter.html",
    "title": "Class XmlArrayConverter | DotNetHelper-Serializer",
    "keywords": "Class XmlArrayConverter Inheritance Object XmlConverterFactory XmlArrayConverter Implements IXmlConverterFactory IXmlConverter Inherited Members XmlConverterFactory.CreateConverter(XmlContract) XmlConverterFactory.CanRead(Type) XmlConverterFactory.CanWrite(Type) XmlConverterFactory.WriteXml(XmlWriter, Object, XmlSerializationContext) XmlConverterFactory.ReadXml(XmlReader, XmlSerializationContext) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters.Collections Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlArrayConverter : XmlConverterFactory, IXmlConverterFactory, IXmlConverter Methods | Improve this Doc View Source AcceptType(Type) Declaration protected override bool AcceptType(Type valueType) Parameters Type Name Description Type valueType Returns Type Description Boolean Overrides XmlConverterFactory.AcceptType(Type) | Improve this Doc View Source GetConverterType(Type) Declaration protected override Type GetConverterType(Type valueType) Parameters Type Name Description Type valueType Returns Type Description Type Overrides XmlConverterFactory.GetConverterType(Type) Implements IXmlConverterFactory IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlInt32Converter.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlInt32Converter.html",
    "title": "Class XmlInt32Converter | DotNetHelper-Serializer",
    "keywords": "Class XmlInt32Converter Inheritance Object XmlConverter < Int32 > XmlBasicConverter < Int32 > XmlBasicRawConverter < Int32 > XmlInt32Converter Implements IXmlConverter Inherited Members XmlBasicRawConverter<Int32>.WriteXml(XmlWriter, Object, XmlSerializationContext) XmlBasicConverter<Int32>.ReadXml(XmlReader, XmlSerializationContext) XmlConverter<Int32>.CanRead(Type) XmlConverter<Int32>.CanWrite(Type) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters.Basics Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlInt32Converter : XmlBasicRawConverter<int>, IXmlConverter Methods | Improve this Doc View Source Parse(String, XmlSerializationContext) Declaration protected override int Parse(string value, XmlSerializationContext context) Parameters Type Name Description String value XmlSerializationContext context Returns Type Description Int32 Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.Int32>.Parse(System.String, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) | Improve this Doc View Source ToString(Int32, XmlSerializationContext) Declaration protected override string ToString(int value, XmlSerializationContext context) Parameters Type Name Description Int32 value XmlSerializationContext context Returns Type Description String Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.Int32>.ToString(System.Int32, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) Implements IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlTypeHandling.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlTypeHandling.html",
    "title": "Enum XmlTypeHandling | DotNetHelper-Serializer",
    "keywords": "Enum XmlTypeHandling Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts Assembly : DotNetHelper-Serializer.dll Syntax public enum XmlTypeHandling Fields Name Description Always Auto None Extension Methods TypeExtension.CanHaveNullValue<XmlTypeHandling>()"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumContract.html",
    "title": "Class XmlEnumContract | DotNetHelper-Serializer",
    "keywords": "Class XmlEnumContract Inheritance Object XmlContract XmlEnumContract Inherited Members XmlContract.ValueType XmlContract.Name XmlContract.GetDefaultMember() Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlEnumContract : XmlContract Constructors | Improve this Doc View Source XmlEnumContract(Type, XmlName, IEnumerable<XmlEnumItem>) Declaration public XmlEnumContract(Type valueType, XmlName name, IEnumerable<XmlEnumItem> items) Parameters Type Name Description Type valueType XmlName name IEnumerable < XmlEnumItem > items Properties | Improve this Doc View Source IsFlag Declaration public bool IsFlag { get; } Property Value Type Description Boolean | Improve this Doc View Source Items Declaration public IEnumerable<XmlEnumItem> Items { get; } Property Value Type Description IEnumerable < XmlEnumItem > | Improve this Doc View Source UnderlyingType Declaration public Type UnderlyingType { get; } Property Value Type Description Type Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext.html",
    "title": "Class XmlSerializationContext | DotNetHelper-Serializer",
    "keywords": "Class XmlSerializationContext Inheritance Object XmlSerializationContext Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlSerializationContext Constructors | Improve this Doc View Source XmlSerializationContext(XmlSerializerSettings) Declaration public XmlSerializationContext(XmlSerializerSettings settings) Parameters Type Name Description XmlSerializerSettings settings Properties | Improve this Doc View Source Contract Declaration public XmlContract Contract { get; } Property Value Type Description XmlContract | Improve this Doc View Source Member Declaration public XmlMember Member { get; } Property Value Type Description XmlMember | Improve this Doc View Source Properties Declaration public IDictionary<string, object> Properties { get; } Property Value Type Description IDictionary < String , Object > | Improve this Doc View Source Settings Declaration public XmlSerializerSettings Settings { get; } Property Value Type Description XmlSerializerSettings | Improve this Doc View Source ValueType Declaration public Type ValueType { get; } Property Value Type Description Type Methods | Improve this Doc View Source Deserialize(XmlReader, XmlMember) Declaration public object Deserialize(XmlReader reader, XmlMember member) Parameters Type Name Description XmlReader reader XmlMember member Returns Type Description Object | Improve this Doc View Source Deserialize(XmlReader, Type) Declaration public object Deserialize(XmlReader reader, Type valueType) Parameters Type Name Description XmlReader reader Type valueType Returns Type Description Object | Improve this Doc View Source GetTypeContract(Type) Declaration public XmlContract GetTypeContract(Type valueType) Parameters Type Name Description Type valueType Returns Type Description XmlContract | Improve this Doc View Source Serialize(XmlWriter, Object, XmlMember) Declaration public void Serialize(XmlWriter writer, object value, XmlMember member) Parameters Type Name Description XmlWriter writer Object value XmlMember member | Improve this Doc View Source Serialize(XmlWriter, Object, Type) Declaration public void Serialize(XmlWriter writer, object value, Type valueType) Parameters Type Name Description XmlWriter writer Object value Type valueType | Improve this Doc View Source SerializeBody(XmlWriter, Object, XmlMember) Declaration public void SerializeBody(XmlWriter writer, object value, XmlMember member) Parameters Type Name Description XmlWriter writer Object value XmlMember member | Improve this Doc View Source SerializeBody(XmlWriter, Object, Type) Declaration public void SerializeBody(XmlWriter writer, object value, Type valueType) Parameters Type Name Description XmlWriter writer Object value Type valueType Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Specialized.XmlByteArrayConverter.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Specialized.XmlByteArrayConverter.html",
    "title": "Class XmlByteArrayConverter | DotNetHelper-Serializer",
    "keywords": "Class XmlByteArrayConverter Inheritance Object XmlConverter < Byte []> XmlByteArrayConverter Implements IXmlConverter Inherited Members XmlConverter<Byte[]>.CanRead(Type) XmlConverter<Byte[]>.CanWrite(Type) XmlConverter<Byte[]>.WriteXml(XmlWriter, Object, XmlSerializationContext) XmlConverter<Byte[]>.ReadXml(XmlReader, XmlSerializationContext) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters.Specialized Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlByteArrayConverter : XmlConverter<byte[]>, IXmlConverter Fields | Improve this Doc View Source ChunkSize Declaration public const int ChunkSize = 512 Field Value Type Description Int32 Methods | Improve this Doc View Source ReadXml(XmlReader, XmlSerializationContext) Declaration public override object ReadXml(XmlReader reader, XmlSerializationContext context) Parameters Type Name Description XmlReader reader XmlSerializationContext context Returns Type Description Object Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlConverter<System.Byte[]>.ReadXml(System.Xml.XmlReader, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) | Improve this Doc View Source WriteXml(XmlWriter, Object, XmlSerializationContext) Declaration public override void WriteXml(XmlWriter writer, object value, XmlSerializationContext context) Parameters Type Name Description XmlWriter writer Object value XmlSerializationContext context Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlConverter<System.Byte[]>.WriteXml(System.Xml.XmlWriter, System.Object, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) Implements IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.Extension.TypeExtension.html": {
    "href": "api/DotNetHelper_Serializer.Extension.TypeExtension.html",
    "title": "Class TypeExtension | DotNetHelper-Serializer",
    "keywords": "Class TypeExtension Inheritance Object TypeExtension Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.Extension Assembly : DotNetHelper-Serializer.dll Syntax public static class TypeExtension Fields | Improve this Doc View Source CommonTypeDictionary Declaration public static readonly Dictionary<Type, object> CommonTypeDictionary Field Value Type Description Dictionary < Type , Object > Methods | Improve this Doc View Source CanHaveNullValue<T>(T) Declaration public static bool CanHaveNullValue<T>(this T obj) Parameters Type Name Description T obj Returns Type Description Boolean Type Parameters Name Description T | Improve this Doc View Source CopyObject<T>(T) Declaration public static T CopyObject<T>(this T obj) where T : class, ICloneable Parameters Type Name Description T obj Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source CreateDefaultConstructor(Type) Declaration public static Func<object> CreateDefaultConstructor(Type t) Parameters Type Name Description Type t Returns Type Description Func < Object > | Improve this Doc View Source EnumToList<T>() Declaration public static List<T> EnumToList<T>() Returns Type Description List <T> Type Parameters Name Description T | Improve this Doc View Source GetDefaultConstructor(Type) Declaration public static ConstructorInfo GetDefaultConstructor(this Type type) Parameters Type Name Description Type type Returns Type Description ConstructorInfo | Improve this Doc View Source GetDefaultValue(Type) Declaration public static object GetDefaultValue(this Type type) Parameters Type Name Description Type type Returns Type Description Object | Improve this Doc View Source GetEnumerableItemType(Type) Declaration public static Type GetEnumerableItemType(this Type type) Parameters Type Name Description Type type Returns Type Description Type | Improve this Doc View Source GetInstanceMethod(Type, String, Type[]) Declaration public static MethodInfo GetInstanceMethod(this Type type, string methodName, params Type[] parameters) Parameters Type Name Description Type type String methodName Type [] parameters Returns Type Description MethodInfo | Improve this Doc View Source GetShortName(Type) Declaration public static string GetShortName(this Type type) Parameters Type Name Description Type type Returns Type Description String | Improve this Doc View Source GetStaticMethod(Type, String, Type[]) Declaration public static MethodInfo GetStaticMethod(this Type type, string methodName, params Type[] parameters) Parameters Type Name Description Type type String methodName Type [] parameters Returns Type Description MethodInfo | Improve this Doc View Source GetUnderlyingNullableType(Type) Declaration public static Type GetUnderlyingNullableType(this Type type) Parameters Type Name Description Type type Returns Type Description Type | Improve this Doc View Source HasDefaultConstructor(Type) Declaration public static bool HasDefaultConstructor(this Type t) Parameters Type Name Description Type t Returns Type Description Boolean | Improve this Doc View Source IsActivable(Type) Declaration public static bool IsActivable(this Type type) Parameters Type Name Description Type type Returns Type Description Boolean | Improve this Doc View Source IsBasicType(Type) Declaration public static bool IsBasicType(this Type type) Parameters Type Name Description Type type Returns Type Description Boolean | Improve this Doc View Source IsCSharpClass(Type) Declaration public static bool IsCSharpClass(this Type type) Parameters Type Name Description Type type Returns Type Description Boolean | Improve this Doc View Source IsFinalType(Type) Declaration public static bool IsFinalType(this Type type) Parameters Type Name Description Type type Returns Type Description Boolean | Improve this Doc View Source IsGenericTypeOf(Type, Type) Declaration public static bool IsGenericTypeOf(this Type type, Type definitionType) Parameters Type Name Description Type type Type definitionType Returns Type Description Boolean | Improve this Doc View Source IsGenericTypeOf(Type, Type[]) Declaration public static bool IsGenericTypeOf(this Type type, params Type[] definitionTypes) Parameters Type Name Description Type type Type [] definitionTypes Returns Type Description Boolean | Improve this Doc View Source IsInstantiable(Type) Declaration public static bool IsInstantiable(this Type type) Parameters Type Name Description Type type Returns Type Description Boolean | Improve this Doc View Source IsInteger(Type) Declaration public static bool IsInteger(this Type type) Parameters Type Name Description Type type Returns Type Description Boolean | Improve this Doc View Source IsNullable(Type) Declaration public static Tuple<bool, Type> IsNullable(this Type type) Parameters Type Name Description Type type Returns Type Description Tuple < Boolean , Type > | Improve this Doc View Source IsNullableType(Type) Declaration public static bool IsNullableType(this Type type) Parameters Type Name Description Type type Returns Type Description Boolean | Improve this Doc View Source IsStruct(Type) Declaration public static bool IsStruct(this Type type) Parameters Type Name Description Type type Returns Type Description Boolean | Improve this Doc View Source IsTypeIEnumerable(Type) Declaration public static bool IsTypeIEnumerable(this Type type) Parameters Type Name Description Type type Returns Type Description Boolean | Improve this Doc View Source IsUnderlyingTypeNullable(Type) Declaration public static bool IsUnderlyingTypeNullable(this Type type) Parameters Type Name Description Type type Returns Type Description Boolean | Improve this Doc View Source MakeNullable(Type) Declaration public static Type MakeNullable(this Type type) Parameters Type Name Description Type type Returns Type Description Type | Improve this Doc View Source OnProgressChange<T>(IProgress<T>, Action<T>, T) Declaration public static void OnProgressChange<T>(this IProgress<T> progress, Action<T> action, T value) Parameters Type Name Description IProgress <T> progress Action <T> action T value Type Parameters Name Description T | Improve this Doc View Source ToDefaultList<T>(Int32) Declaration public static List<T> ToDefaultList<T>(int count) Parameters Type Name Description Int32 count Returns Type Description List <T> Type Parameters Name Description T | Improve this Doc View Source UnwrapNullableType(Type) Declaration public static Type UnwrapNullableType(this Type type) Parameters Type Name Description Type type Returns Type Description Type"
  },
  "api/DotNetHelper_Serializer.Extension.TypeExtension.New-1.html": {
    "href": "api/DotNetHelper_Serializer.Extension.TypeExtension.New-1.html",
    "title": "Class TypeExtension.New<T> | DotNetHelper-Serializer",
    "keywords": "Class TypeExtension.New<T> Inheritance Object TypeExtension.New<T> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.Extension Assembly : DotNetHelper-Serializer.dll Syntax public static class New<T> Type Parameters Name Description T Fields | Improve this Doc View Source Instance Declaration public static readonly Func<T> Instance Field Value Type Description Func <T>"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlInt64Converter.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlInt64Converter.html",
    "title": "Class XmlInt64Converter | DotNetHelper-Serializer",
    "keywords": "Class XmlInt64Converter Inheritance Object XmlConverter < Int64 > XmlBasicConverter < Int64 > XmlBasicRawConverter < Int64 > XmlInt64Converter Implements IXmlConverter Inherited Members XmlBasicRawConverter<Int64>.WriteXml(XmlWriter, Object, XmlSerializationContext) XmlBasicConverter<Int64>.ReadXml(XmlReader, XmlSerializationContext) XmlConverter<Int64>.CanRead(Type) XmlConverter<Int64>.CanWrite(Type) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters.Basics Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlInt64Converter : XmlBasicRawConverter<long>, IXmlConverter Methods | Improve this Doc View Source Parse(String, XmlSerializationContext) Declaration protected override long Parse(string value, XmlSerializationContext context) Parameters Type Name Description String value XmlSerializationContext context Returns Type Description Int64 Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.Int64>.Parse(System.String, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) | Improve this Doc View Source ToString(Int64, XmlSerializationContext) Declaration protected override string ToString(long value, XmlSerializationContext context) Parameters Type Name Description Int64 value XmlSerializationContext context Returns Type Description String Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.Int64>.ToString(System.Int64, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) Implements IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Objects.XmlObjectConverter.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Objects.XmlObjectConverter.html",
    "title": "Class XmlObjectConverter | DotNetHelper-Serializer",
    "keywords": "Class XmlObjectConverter Inheritance Object XmlObjectConverter Implements IXmlConverter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters.Objects Assembly : DotNetHelper-Serializer.dll Syntax public class XmlObjectConverter : IXmlConverter Methods | Improve this Doc View Source CanRead(Type) Declaration public virtual bool CanRead(Type valueType) Parameters Type Name Description Type valueType Returns Type Description Boolean | Improve this Doc View Source CanWrite(Type) Declaration public virtual bool CanWrite(Type valueType) Parameters Type Name Description Type valueType Returns Type Description Boolean | Improve this Doc View Source CanWriteProperty(XmlProperty) Declaration protected virtual bool CanWriteProperty(XmlProperty property) Parameters Type Name Description XmlProperty property Returns Type Description Boolean | Improve this Doc View Source CreateTarget(XmlContract) Declaration protected virtual object CreateTarget(XmlContract contract) Parameters Type Name Description XmlContract contract Returns Type Description Object | Improve this Doc View Source GetResult(Object) Declaration protected virtual object GetResult(object target) Parameters Type Name Description Object target Returns Type Description Object | Improve this Doc View Source GetValue(Object, XmlProperty) Declaration protected virtual object GetValue(object target, XmlProperty property) Parameters Type Name Description Object target XmlProperty property Returns Type Description Object | Improve this Doc View Source OnUnknownProperty(XmlReader, Object, XmlSerializationContext) Declaration protected virtual void OnUnknownProperty(XmlReader reader, object target, XmlSerializationContext context) Parameters Type Name Description XmlReader reader Object target XmlSerializationContext context | Improve this Doc View Source ReadXml(XmlReader, XmlSerializationContext) Declaration public object ReadXml(XmlReader reader, XmlSerializationContext context) Parameters Type Name Description XmlReader reader XmlSerializationContext context Returns Type Description Object | Improve this Doc View Source SetValue(Object, XmlProperty, Object) Declaration protected virtual void SetValue(object target, XmlProperty property, object propertyValue) Parameters Type Name Description Object target XmlProperty property Object propertyValue | Improve this Doc View Source WriteXml(XmlWriter, Object, XmlSerializationContext) Declaration public void WriteXml(XmlWriter writer, object value, XmlSerializationContext context) Parameters Type Name Description XmlWriter writer Object value XmlSerializationContext context Implements IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlUInt64Converter.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlUInt64Converter.html",
    "title": "Class XmlUInt64Converter | DotNetHelper-Serializer",
    "keywords": "Class XmlUInt64Converter Inheritance Object XmlConverter < UInt64 > XmlBasicConverter < UInt64 > XmlBasicRawConverter < UInt64 > XmlUInt64Converter Implements IXmlConverter Inherited Members XmlBasicRawConverter<UInt64>.WriteXml(XmlWriter, Object, XmlSerializationContext) XmlBasicConverter<UInt64>.ReadXml(XmlReader, XmlSerializationContext) XmlConverter<UInt64>.CanRead(Type) XmlConverter<UInt64>.CanWrite(Type) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters.Basics Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlUInt64Converter : XmlBasicRawConverter<ulong>, IXmlConverter Methods | Improve this Doc View Source Parse(String, XmlSerializationContext) Declaration protected override ulong Parse(string value, XmlSerializationContext context) Parameters Type Name Description String value XmlSerializationContext context Returns Type Description UInt64 Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.UInt64>.Parse(System.String, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) | Improve this Doc View Source ToString(UInt64, XmlSerializationContext) Declaration protected override string ToString(ulong value, XmlSerializationContext context) Parameters Type Name Description UInt64 value XmlSerializationContext context Returns Type Description String Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.UInt64>.ToString(System.UInt64, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) Implements IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.TypeResolvers.XmlTypeResolveException.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.TypeResolvers.XmlTypeResolveException.html",
    "title": "Class XmlTypeResolveException | DotNetHelper-Serializer",
    "keywords": "Class XmlTypeResolveException Inheritance Object Exception XmlSerializationException XmlTypeResolveException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.TypeResolvers Assembly : DotNetHelper-Serializer.dll Syntax public class XmlTypeResolveException : XmlSerializationException, ISerializable, _Exception Constructors | Improve this Doc View Source XmlTypeResolveException(String) Declaration public XmlTypeResolveException(string message) Parameters Type Name Description String message Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.TypeResolvers.IXmlTypeResolver.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.TypeResolvers.IXmlTypeResolver.html",
    "title": "Interface IXmlTypeResolver | DotNetHelper-Serializer",
    "keywords": "Interface IXmlTypeResolver Namespace : DotNetHelper_Serializer.DataSource.Xml.TypeResolvers Assembly : DotNetHelper-Serializer.dll Syntax public interface IXmlTypeResolver Methods | Improve this Doc View Source GetTypeName(Type) Declaration string GetTypeName(Type valueType) Parameters Type Name Description Type valueType Returns Type Description String | Improve this Doc View Source ResolveTypeName(Type, String) Declaration Type ResolveTypeName(Type rootType, string typeName) Parameters Type Name Description Type rootType String typeName Returns Type Description Type Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.IXmlConverter.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.IXmlConverter.html",
    "title": "Interface IXmlConverter | DotNetHelper-Serializer",
    "keywords": "Interface IXmlConverter Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters Assembly : DotNetHelper-Serializer.dll Syntax public interface IXmlConverter Methods | Improve this Doc View Source CanRead(Type) Declaration bool CanRead(Type valueType) Parameters Type Name Description Type valueType Returns Type Description Boolean | Improve this Doc View Source CanWrite(Type) Declaration bool CanWrite(Type valueType) Parameters Type Name Description Type valueType Returns Type Description Boolean | Improve this Doc View Source ReadXml(XmlReader, XmlSerializationContext) Declaration object ReadXml(XmlReader reader, XmlSerializationContext context) Parameters Type Name Description XmlReader reader XmlSerializationContext context Returns Type Description Object | Improve this Doc View Source WriteXml(XmlWriter, Object, XmlSerializationContext) Declaration void WriteXml(XmlWriter writer, object value, XmlSerializationContext context) Parameters Type Name Description XmlWriter writer Object value XmlSerializationContext context Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Specialized.XmlUriConverter.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Specialized.XmlUriConverter.html",
    "title": "Class XmlUriConverter | DotNetHelper-Serializer",
    "keywords": "Class XmlUriConverter Inheritance Object XmlConverter < Uri > XmlBasicConverter < Uri > XmlUriConverter Implements IXmlConverter Inherited Members XmlBasicConverter<Uri>.WriteXml(XmlWriter, Object, XmlSerializationContext) XmlBasicConverter<Uri>.ReadXml(XmlReader, XmlSerializationContext) XmlConverter<Uri>.CanRead(Type) XmlConverter<Uri>.CanWrite(Type) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters.Specialized Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlUriConverter : XmlBasicConverter<Uri>, IXmlConverter Methods | Improve this Doc View Source Parse(String, XmlSerializationContext) Declaration protected override Uri Parse(string value, XmlSerializationContext context) Parameters Type Name Description String value XmlSerializationContext context Returns Type Description Uri Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.Uri>.Parse(System.String, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) | Improve this Doc View Source ToString(Uri, XmlSerializationContext) Declaration protected override string ToString(Uri value, XmlSerializationContext context) Parameters Type Name Description Uri value XmlSerializationContext context Returns Type Description String Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.Uri>.ToString(System.Uri, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) Implements IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.NamingConventions.html",
    "title": "Class NamingConventions | DotNetHelper-Serializer",
    "keywords": "Class NamingConventions Inheritance Object NamingConventions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts Assembly : DotNetHelper-Serializer.dll Syntax public static class NamingConventions Methods | Improve this Doc View Source CamelCase(String) Declaration public static string CamelCase(string value) Parameters Type Name Description String value Returns Type Description String | Improve this Doc View Source Dashed(String) Declaration public static string Dashed(string value) Parameters Type Name Description String value Returns Type Description String | Improve this Doc View Source Ignore(String) Declaration public static string Ignore(string value) Parameters Type Name Description String value Returns Type Description String | Improve this Doc View Source Underscore(String) Declaration public static string Underscore(string value) Parameters Type Name Description String value Returns Type Description String"
  },
  "api/DotNetHelper_Serializer.Model.DataSourceProperties.html": {
    "href": "api/DotNetHelper_Serializer.Model.DataSourceProperties.html",
    "title": "Class DataSourceProperties | DotNetHelper-Serializer",
    "keywords": "Class DataSourceProperties Inheritance Object DataSourceProperties Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.Model Assembly : DotNetHelper-Serializer.dll Syntax public class DataSourceProperties Properties | Improve this Doc View Source DataBases Declaration public List<Db> DataBases { get; set; } Property Value Type Description List < Db > | Improve this Doc View Source LastSyncTime Declaration public DateTime? LastSyncTime { get; set; } Property Value Type Description Nullable < DateTime > | Improve this Doc View Source Schemas Declaration public List<DbSchema> Schemas { get; set; } Property Value Type Description List < DbSchema > | Improve this Doc View Source Tables Declaration public List<DbTable> Tables { get; set; } Property Value Type Description List < DbTable > Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.Helper.DBHelper.html": {
    "href": "api/DotNetHelper_Serializer.Helper.DBHelper.html",
    "title": "Class DBHelper | DotNetHelper-Serializer",
    "keywords": "Class DBHelper Inheritance Object DBHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.Helper Assembly : DotNetHelper-Serializer.dll Syntax public static class DBHelper Fields | Improve this Doc View Source TypeToSqlTypeMap Declaration public static Dictionary<Type, DbType> TypeToSqlTypeMap Field Value Type Description Dictionary < Type , DbType > Methods | Improve this Doc View Source BuildConnectionString(IDataSourceDb) Build a SqlConnection String Based On DataSource Properties Will AutoBuild A Connection String If An Connection String Is Not Already Defined Declaration public static string BuildConnectionString(IDataSourceDb datasource) Parameters Type Name Description IDataSourceDb datasource Returns Type Description String connection string | Improve this Doc View Source BulkInsert<T>(IDataSourceDb, IEnumerable<T>, String) Declaration public static int BulkInsert<T>(IDataSourceDb database, IEnumerable<T> listPoco, string tableName) where T : class Parameters Type Name Description IDataSourceDb database IEnumerable <T> listPoco String tableName Returns Type Description Int32 Type Parameters Name Description T | Improve this Doc View Source ExecuteNonQueryOnList<T>(IDataSourceDb, String, IEnumerable<T>, Action<StringBuilder, String, T, Expression<Func<T, Object>>>, Expression<Func<T, Object>>) Executes the non query on list. Declaration public static int ExecuteNonQueryOnList<T>(IDataSourceDb database, string tableName, IEnumerable<T> listPoco, Action<StringBuilder, string, T, Expression<Func<T, object>>> buildSqlString, Expression<Func<T, object>> overrideKeys) where T : class Parameters Type Name Description IDataSourceDb database String tableName Name of the table. IEnumerable <T> listPoco The list poco. Action < StringBuilder , String , T, Expression < Func <T, Object >>> buildSqlString The build SQL string. Expression < Func <T, Object >> overrideKeys Returns Type Description Int32 Numbers Of Rows Affected Type Parameters Name Description T | Improve this Doc View Source GetDbCommand(IDataSourceDb, String, IDbConnection, IDbTransaction) Declaration public static IDbCommand GetDbCommand(IDataSourceDb database, string commandText = null, IDbConnection connection = null, IDbTransaction dbTransaction = null) Parameters Type Name Description IDataSourceDb database String commandText IDbConnection connection IDbTransaction dbTransaction Returns Type Description IDbCommand | Improve this Doc View Source GetDbConnection(IDataSourceDb) Declaration public static IDbConnection GetDbConnection(IDataSourceDb databse) Parameters Type Name Description IDataSourceDb databse Returns Type Description IDbConnection | Improve this Doc View Source GetDbTransaction(IDbConnection, IsolationLevel) Declaration public static IDbTransaction GetDbTransaction(IDbConnection connection, IsolationLevel level = IsolationLevel.ReadCommitted) Parameters Type Name Description IDbConnection connection IsolationLevel level Returns Type Description IDbTransaction | Improve this Doc View Source GetNewParameter(IDataSourceDb, String, Object) Declaration public static DbParameter GetNewParameter(IDataSourceDb database, string name, object value) Parameters Type Name Description IDataSourceDb database String name Object value Returns Type Description DbParameter | Improve this Doc View Source GetQuotedValue(Object, DataBaseType) Declaration public static string GetQuotedValue(object value, DataBaseType type) Parameters Type Name Description Object value DotNetHelper_Contracts.Enum.DataSource.DataBaseType type Returns Type Description String | Improve this Doc View Source LogConnectionTime(IDataSourceDb, IDbConnection, String) Declaration public static QueryBucket LogConnectionTime(IDataSourceDb database, IDbConnection connection, string query) Parameters Type Name Description IDataSourceDb database IDbConnection connection String query Returns Type Description QueryBucket"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.XmlConverterFactory.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.XmlConverterFactory.html",
    "title": "Class XmlConverterFactory | DotNetHelper-Serializer",
    "keywords": "Class XmlConverterFactory Inheritance Object XmlConverterFactory XmlArrayConverter XmlDictionaryConverter XmlListConverter XmlKeyValuePairConverter Implements IXmlConverterFactory IXmlConverter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters Assembly : DotNetHelper-Serializer.dll Syntax public abstract class XmlConverterFactory : IXmlConverterFactory, IXmlConverter Methods | Improve this Doc View Source AcceptType(Type) Declaration protected abstract bool AcceptType(Type valueType) Parameters Type Name Description Type valueType Returns Type Description Boolean | Improve this Doc View Source CanRead(Type) Declaration public virtual bool CanRead(Type valueType) Parameters Type Name Description Type valueType Returns Type Description Boolean | Improve this Doc View Source CanWrite(Type) Declaration public virtual bool CanWrite(Type valueType) Parameters Type Name Description Type valueType Returns Type Description Boolean | Improve this Doc View Source CreateConverter(XmlContract) Declaration public virtual IXmlConverter CreateConverter(XmlContract contract) Parameters Type Name Description XmlContract contract Returns Type Description IXmlConverter | Improve this Doc View Source GetConverterType(Type) Declaration protected abstract Type GetConverterType(Type valueType) Parameters Type Name Description Type valueType Returns Type Description Type | Improve this Doc View Source ReadXml(XmlReader, XmlSerializationContext) Declaration public object ReadXml(XmlReader reader, XmlSerializationContext context) Parameters Type Name Description XmlReader reader XmlSerializationContext context Returns Type Description Object | Improve this Doc View Source WriteXml(XmlWriter, Object, XmlSerializationContext) Declaration public void WriteXml(XmlWriter writer, object value, XmlSerializationContext context) Parameters Type Name Description XmlWriter writer Object value XmlSerializationContext context Implements IXmlConverterFactory IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.IXmlConverterFactory.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.IXmlConverterFactory.html",
    "title": "Interface IXmlConverterFactory | DotNetHelper-Serializer",
    "keywords": "Interface IXmlConverterFactory Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters Assembly : DotNetHelper-Serializer.dll Syntax public interface IXmlConverterFactory Methods | Improve this Doc View Source CreateConverter(XmlContract) Declaration IXmlConverter CreateConverter(XmlContract contract) Parameters Type Name Description XmlContract contract Returns Type Description IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.Interface.IJsonSerializer.html": {
    "href": "api/DotNetHelper_Serializer.Interface.IJsonSerializer.html",
    "title": "Interface IJsonSerializer | DotNetHelper-Serializer",
    "keywords": "Interface IJsonSerializer Inherited Members DotNetHelper_IO.Interface.ISerializer.SerializeToStream<T>(T, System.IO.Stream, System.Int32, System.Boolean) DotNetHelper_IO.Interface.ISerializer.SerializeToStream(System.Object, System.Type, System.IO.Stream, System.Int32, System.Boolean) DotNetHelper_IO.Interface.ISerializer.SerializeToFile<T>(T, System.String, DotNetHelper_Contracts.Enum.IO.FileOption) DotNetHelper_IO.Interface.ISerializer.SerializeToFile<T>(System.Collections.Generic.IEnumerable<T>, System.String, DotNetHelper_Contracts.Enum.IO.FileOption) DotNetHelper_IO.Interface.ISerializer.SerializeToFile(System.Object, System.Type, System.String, DotNetHelper_Contracts.Enum.IO.FileOption) DotNetHelper_IO.Interface.ISerializer.SerializeToFile(System.Object, System.String, DotNetHelper_Contracts.Enum.IO.FileOption) DotNetHelper_IO.Interface.ISerializer.SerializeToString(System.Object) DotNetHelper_IO.Interface.ISerializer.SerializeToString<T>(T) DotNetHelper_IO.Interface.ISerializer.DeserializeFromFile(System.Type, System.String) DotNetHelper_IO.Interface.ISerializer.DeserializeFromFile<T>(System.String) DotNetHelper_IO.Interface.ISerializer.DeserializeFromFile(System.String) DotNetHelper_IO.Interface.ISerializer.DeserializeListFromFile(System.String) DotNetHelper_IO.Interface.ISerializer.DeserializeToList(System.String) DotNetHelper_IO.Interface.ISerializer.DeserializeListFromFile<T>(System.String) DotNetHelper_IO.Interface.ISerializer.DeserializeFromStream<T>(System.IO.Stream) DotNetHelper_IO.Interface.ISerializer.DeserializeFromStream(System.IO.Stream, System.Type) DotNetHelper_IO.Interface.ISerializer.DeserializeFromString<T>(System.String) DotNetHelper_IO.Interface.ISerializer.DeserializeToList<T>(System.String) DotNetHelper_IO.Interface.ISerializer.DeserializeFromString(System.String, System.Type) DotNetHelper_IO.Interface.ISerializer.DeserializeToCSharpClass(System.String, System.String) IConvertible.GetTypeCode() IConvertible.ToBoolean(IFormatProvider) IConvertible.ToChar(IFormatProvider) IConvertible.ToSByte(IFormatProvider) IConvertible.ToByte(IFormatProvider) IConvertible.ToInt16(IFormatProvider) IConvertible.ToUInt16(IFormatProvider) IConvertible.ToInt32(IFormatProvider) IConvertible.ToUInt32(IFormatProvider) IConvertible.ToInt64(IFormatProvider) IConvertible.ToUInt64(IFormatProvider) IConvertible.ToSingle(IFormatProvider) IConvertible.ToDouble(IFormatProvider) IConvertible.ToDecimal(IFormatProvider) IConvertible.ToDateTime(IFormatProvider) IConvertible.ToString(IFormatProvider) IConvertible.ToType(Type, IFormatProvider) Namespace : DotNetHelper_Serializer.Interface Assembly : DotNetHelper-Serializer.dll Syntax public interface IJsonSerializer : ISerializer, IConvertible Properties | Improve this Doc View Source Settings Declaration JsonSerializerSettings Settings { get; set; } Property Value Type Description Newtonsoft.Json.JsonSerializerSettings Methods | Improve this Doc View Source SerializeToXml(String, IXmlSerializer) Serialize Json to xml Declaration string SerializeToXml(string json, IXmlSerializer xmlSerializer) Parameters Type Name Description String json IXmlSerializer xmlSerializer xml serialization settings Returns Type Description String Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlEnumItemCollection.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlEnumItemCollection.html",
    "title": "Class XmlEnumItemCollection | DotNetHelper-Serializer",
    "keywords": "Class XmlEnumItemCollection Inheritance Object XmlEnumItemCollection Implements IEnumerable < XmlEnumItem > IEnumerable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlEnumItemCollection : IEnumerable<XmlEnumItem>, IEnumerable Constructors | Improve this Doc View Source XmlEnumItemCollection() Declaration public XmlEnumItemCollection() | Improve this Doc View Source XmlEnumItemCollection(IEnumerable<XmlEnumItem>) Declaration public XmlEnumItemCollection(IEnumerable<XmlEnumItem> items) Parameters Type Name Description IEnumerable < XmlEnumItem > items Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Add(XmlEnumItem) Declaration public void Add(XmlEnumItem item) Parameters Type Name Description XmlEnumItem item | Improve this Doc View Source Add(Int64, String) Declaration public void Add(long value, string name) Parameters Type Name Description Int64 value String name | Improve this Doc View Source Contains(Int64) Declaration public bool Contains(long value) Parameters Type Name Description Int64 value Returns Type Description Boolean | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<XmlEnumItem> GetEnumerator() Returns Type Description IEnumerator < XmlEnumItem > | Improve this Doc View Source Remove(Int64) Declaration public bool Remove(long value) Parameters Type Name Description Int64 value Returns Type Description Boolean | Improve this Doc View Source Set(XmlEnumItem) Declaration public void Set(XmlEnumItem item) Parameters Type Name Description XmlEnumItem item Explicit Interface Implementations | Improve this Doc View Source IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlContractBuilder.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlContractBuilder.html",
    "title": "Class XmlContractBuilder | DotNetHelper-Serializer",
    "keywords": "Class XmlContractBuilder Inheritance Object XmlContractBuilder XmlEnumContractBuilder XmlObjectContractBuilder Implements IXmlBuilder Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders Assembly : DotNetHelper-Serializer.dll Syntax public abstract class XmlContractBuilder : IXmlBuilder Constructors | Improve this Doc View Source XmlContractBuilder(Type) Declaration protected XmlContractBuilder(Type valueType) Parameters Type Name Description Type valueType Properties | Improve this Doc View Source Name Declaration public XmlName Name { get; set; } Property Value Type Description XmlName | Improve this Doc View Source ValueType Declaration public Type ValueType { get; } Property Value Type Description Type Methods | Improve this Doc View Source BuildContract() Declaration public abstract XmlContract BuildContract() Returns Type Description XmlContract Implements IXmlBuilder Extension Methods TypeExtension.CanHaveNullValue<T>(T) XmlBuilderExtensions.SetName<TBuilder>(TBuilder, XmlName)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlCustomContractResolver.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlCustomContractResolver.html",
    "title": "Class XmlCustomContractResolver | DotNetHelper-Serializer",
    "keywords": "Class XmlCustomContractResolver Inheritance Object XmlCustomContractResolver Implements IXmlContractResolver Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlCustomContractResolver : IXmlContractResolver Constructors | Improve this Doc View Source XmlCustomContractResolver(IEnumerable<XmlContract>) Declaration public XmlCustomContractResolver(IEnumerable<XmlContract> contracts) Parameters Type Name Description IEnumerable < XmlContract > contracts | Improve this Doc View Source XmlCustomContractResolver(IEnumerable<XmlContract>, IXmlContractResolver) Declaration public XmlCustomContractResolver(IEnumerable<XmlContract> contracts, IXmlContractResolver fallbackResolver) Parameters Type Name Description IEnumerable < XmlContract > contracts IXmlContractResolver fallbackResolver Properties | Improve this Doc View Source Contracts Declaration public IEnumerable<XmlContract> Contracts { get; } Property Value Type Description IEnumerable < XmlContract > Methods | Improve this Doc View Source ResolveContract(Type) Declaration public XmlContract ResolveContract(Type valueType) Parameters Type Name Description Type valueType Returns Type Description XmlContract Implements IXmlContractResolver Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.Model.QueryBucketManager.FullQueryBucketEventHandler.html": {
    "href": "api/DotNetHelper_Serializer.Model.QueryBucketManager.FullQueryBucketEventHandler.html",
    "title": "Delegate QueryBucketManager.FullQueryBucketEventHandler | DotNetHelper-Serializer",
    "keywords": "Delegate QueryBucketManager.FullQueryBucketEventHandler Namespace : DotNetHelper_Serializer.Model Assembly : DotNetHelper-Serializer.dll Syntax public delegate void FullQueryBucketEventHandler(object sender, FullQueryBucketEventArgs e); Parameters Type Name Description Object sender FullQueryBucketEventArgs e Extension Methods TypeExtension.CanHaveNullValue<T>(T) TypeExtension.CopyObject<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlObjectContractBuilder.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlObjectContractBuilder.html",
    "title": "Class XmlObjectContractBuilder | DotNetHelper-Serializer",
    "keywords": "Class XmlObjectContractBuilder Inheritance Object XmlContractBuilder XmlObjectContractBuilder XmlObjectContractBuilder<T> Implements IXmlCollectionBuilder IXmlBuilder Inherited Members XmlContractBuilder.ValueType XmlContractBuilder.Name Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders Assembly : DotNetHelper-Serializer.dll Syntax public class XmlObjectContractBuilder : XmlContractBuilder, IXmlCollectionBuilder, IXmlBuilder Constructors | Improve this Doc View Source XmlObjectContractBuilder(Type) Declaration public XmlObjectContractBuilder(Type valueType) Parameters Type Name Description Type valueType Properties | Improve this Doc View Source Item Declaration public XmlItemBuilder Item { get; set; } Property Value Type Description XmlItemBuilder | Improve this Doc View Source Properties Declaration public XmlPropertyBuilderCollection Properties { get; set; } Property Value Type Description XmlPropertyBuilderCollection | Improve this Doc View Source TypeHandling Declaration public XmlTypeHandling? TypeHandling { get; set; } Property Value Type Description Nullable < XmlTypeHandling > Methods | Improve this Doc View Source Build() Declaration public XmlObjectContract Build() Returns Type Description XmlObjectContract | Improve this Doc View Source BuildContract() Declaration public override XmlContract BuildContract() Returns Type Description XmlContract Overrides XmlContractBuilder.BuildContract() | Improve this Doc View Source Create(XmlObjectContract) Declaration public static XmlObjectContractBuilder Create(XmlObjectContract contract) Parameters Type Name Description XmlObjectContract contract Returns Type Description XmlObjectContractBuilder Implements IXmlCollectionBuilder IXmlBuilder Extension Methods TypeExtension.CanHaveNullValue<T>(T) XmlBuilderExtensions.SetName<TBuilder>(TBuilder, XmlName) XmlBuilderExtensions.SetItem<TBuilder>(TBuilder, XmlName) XmlBuilderExtensions.SetItem<TBuilder>(TBuilder, Type, XmlName) XmlBuilderExtensions.SetItem<TBuilder>(TBuilder, Action<XmlItemBuilder>) XmlBuilderExtensions.SetItem<TBuilder>(TBuilder, Type, Action<XmlItemBuilder>) XmlContractBuilderExtensions.SetTypeHandling<TBuilder>(TBuilder, Nullable<XmlTypeHandling>) XmlContractBuilderExtensions.SetProperty<TBuilder>(TBuilder, String, XmlName, XmlMappingType) XmlContractBuilderExtensions.SetProperty<TBuilder>(TBuilder, String, Action<XmlPropertyBuilder>) XmlContractBuilderExtensions.RemoveProperty<TBuilder>(TBuilder, String)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Specialized.XmlKeyValuePairConverter.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Specialized.XmlKeyValuePairConverter.html",
    "title": "Class XmlKeyValuePairConverter | DotNetHelper-Serializer",
    "keywords": "Class XmlKeyValuePairConverter Inheritance Object XmlConverterFactory XmlKeyValuePairConverter Implements IXmlConverterFactory IXmlConverter Inherited Members XmlConverterFactory.CreateConverter(XmlContract) XmlConverterFactory.CanRead(Type) XmlConverterFactory.CanWrite(Type) XmlConverterFactory.WriteXml(XmlWriter, Object, XmlSerializationContext) XmlConverterFactory.ReadXml(XmlReader, XmlSerializationContext) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters.Specialized Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlKeyValuePairConverter : XmlConverterFactory, IXmlConverterFactory, IXmlConverter Methods | Improve this Doc View Source AcceptType(Type) Declaration protected override bool AcceptType(Type valueType) Parameters Type Name Description Type valueType Returns Type Description Boolean Overrides XmlConverterFactory.AcceptType(Type) | Improve this Doc View Source GetConverterType(Type) Declaration protected override Type GetConverterType(Type valueType) Parameters Type Name Description Type valueType Returns Type Description Type Overrides XmlConverterFactory.GetConverterType(Type) Implements IXmlConverterFactory IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.html",
    "title": "Namespace DotNetHelper_Serializer.DataSource.Xml | DotNetHelper-Serializer",
    "keywords": "Namespace DotNetHelper_Serializer.DataSource.Xml Classes XmlSerializationContext XmlSerializationException XmlSerializerSettings XmlTypeContext"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Specialized.XmlTypeConverter.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Specialized.XmlTypeConverter.html",
    "title": "Class XmlTypeConverter | DotNetHelper-Serializer",
    "keywords": "Class XmlTypeConverter Inheritance Object XmlConverter < Type > XmlBasicConverter < Type > XmlTypeConverter Implements IXmlConverter Inherited Members XmlBasicConverter<Type>.WriteXml(XmlWriter, Object, XmlSerializationContext) XmlBasicConverter<Type>.ReadXml(XmlReader, XmlSerializationContext) XmlConverter<Type>.CanRead(Type) XmlConverter<Type>.CanWrite(Type) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters.Specialized Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlTypeConverter : XmlBasicConverter<Type>, IXmlConverter Methods | Improve this Doc View Source Parse(String, XmlSerializationContext) Declaration protected override Type Parse(string value, XmlSerializationContext context) Parameters Type Name Description String value XmlSerializationContext context Returns Type Description Type Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.Type>.Parse(System.String, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) | Improve this Doc View Source ToString(Type, XmlSerializationContext) Declaration protected override string ToString(Type value, XmlSerializationContext context) Parameters Type Name Description Type value XmlSerializationContext context Returns Type Description String Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.Type>.ToString(System.Type, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) Implements IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlItem.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlItem.html",
    "title": "Class XmlItem | DotNetHelper-Serializer",
    "keywords": "Class XmlItem Inheritance Object XmlMember XmlItem Inherited Members XmlMember.ValueType XmlMember.Name XmlMember.MappingType XmlMember.TypeHandling XmlMember.NullValueHandling XmlMember.DefaultValueHandling XmlMember.DefaultValue XmlMember.Item XmlMember.KnownTypes Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlItem : XmlMember Constructors | Improve this Doc View Source XmlItem(Type, XmlName, Nullable<XmlTypeHandling>, IEnumerable<XmlKnownType>) Declaration public XmlItem(Type valueType, XmlName name, XmlTypeHandling? typeHandling = default(XmlTypeHandling? ), IEnumerable<XmlKnownType> knownTypes = null) Parameters Type Name Description Type valueType XmlName name Nullable < XmlTypeHandling > typeHandling IEnumerable < XmlKnownType > knownTypes Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.html",
    "title": "Namespace DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders | DotNetHelper-Serializer",
    "keywords": "Namespace DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders Classes XmlBuilderExtensions XmlContractBuilder XmlContractBuilderExtensions XmlEnumContractBuilder XmlEnumContractBuilder<T> XmlEnumItemCollection XmlItemBuilder XmlKnownTypeBuilder XmlKnownTypeBuilderCollection XmlMemberBuilder XmlObjectContractBuilder XmlObjectContractBuilder<T> XmlPropertyBuilder XmlPropertyBuilderCollection Interfaces IXmlBuilder IXmlCollectionBuilder IXmlObjectBuilder"
  },
  "api/DotNetHelper_Serializer.Model.FullQueryBucketEventArgs.html": {
    "href": "api/DotNetHelper_Serializer.Model.FullQueryBucketEventArgs.html",
    "title": "Class FullQueryBucketEventArgs | DotNetHelper-Serializer",
    "keywords": "Class FullQueryBucketEventArgs Inheritance Object EventArgs FullQueryBucketEventArgs Inherited Members EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.Model Assembly : DotNetHelper-Serializer.dll Syntax public class FullQueryBucketEventArgs : EventArgs Constructors | Improve this Doc View Source FullQueryBucketEventArgs(List<QueryBucket>) Declaration public FullQueryBucketEventArgs(List<QueryBucket> buckets) Parameters Type Name Description List < QueryBucket > buckets Properties | Improve this Doc View Source BucketOfQueries Declaration public List<QueryBucket> BucketOfQueries { get; } Property Value Type Description List < QueryBucket > Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.Model.ErrorObject.html": {
    "href": "api/DotNetHelper_Serializer.Model.ErrorObject.html",
    "title": "Class ErrorObject | DotNetHelper-Serializer",
    "keywords": "Class ErrorObject Inheritance Object ErrorObject Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.Model Assembly : DotNetHelper-Serializer.dll Syntax public class ErrorObject Constructors | Improve this Doc View Source ErrorObject(Exception) Declaration public ErrorObject(Exception e) Parameters Type Name Description Exception e Properties | Improve this Doc View Source ApplicationName Declaration public string ApplicationName { get; set; } Property Value Type Description String | Improve this Doc View Source Architecture Declaration public string Architecture { get; set; } Property Value Type Description String | Improve this Doc View Source DeviceId Declaration public string DeviceId { get; set; } Property Value Type Description String | Improve this Doc View Source DeviceModel Declaration public string DeviceModel { get; set; } Property Value Type Description String | Improve this Doc View Source ExactStackTrace Declaration public string ExactStackTrace { get; set; } Property Value Type Description String | Improve this Doc View Source ExceptionMessage Declaration public string ExceptionMessage { get; set; } Property Value Type Description String | Improve this Doc View Source ExceptionType Declaration public string ExceptionType { get; set; } Property Value Type Description String | Improve this Doc View Source HelpLink Declaration public string HelpLink { get; set; } Property Value Type Description String | Improve this Doc View Source Id Declaration public int Id { get; set; } Property Value Type Description Int32 | Improve this Doc View Source InnerExceptionMessage Declaration public string InnerExceptionMessage { get; set; } Property Value Type Description String | Improve this Doc View Source LogTime Declaration public DateTime LogTime { get; set; } Property Value Type Description DateTime | Improve this Doc View Source LogTimeUtc Declaration public DateTime LogTimeUtc { get; set; } Property Value Type Description DateTime | Improve this Doc View Source Manufacturer Declaration public string Manufacturer { get; set; } Property Value Type Description String | Improve this Doc View Source OsDescription Declaration public string OsDescription { get; set; } Property Value Type Description String | Improve this Doc View Source Platform Declaration public string Platform { get; set; } Property Value Type Description String | Improve this Doc View Source StackTrace Declaration public string StackTrace { get; set; } Property Value Type Description String | Improve this Doc View Source Version Declaration public string Version { get; set; } Property Value Type Description String Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlContractResolver.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlContractResolver.html",
    "title": "Class XmlContractResolver | DotNetHelper-Serializer",
    "keywords": "Class XmlContractResolver Inheritance Object XmlContractResolver Implements IXmlContractResolver Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts Assembly : DotNetHelper-Serializer.dll Syntax public class XmlContractResolver : IXmlContractResolver Constructors | Improve this Doc View Source XmlContractResolver(Boolean) Declaration public XmlContractResolver(bool ignoreSystemAttributes = false) Parameters Type Name Description Boolean ignoreSystemAttributes | Improve this Doc View Source XmlContractResolver(Func<String, String>, Boolean) Declaration public XmlContractResolver(Func<string, string> nameResolver, bool ignoreSystemAttributes = false) Parameters Type Name Description Func < String , String > nameResolver Boolean ignoreSystemAttributes Methods | Improve this Doc View Source GetEnumItemName(Type, String) Declaration protected virtual string GetEnumItemName(Type valueType, string name) Parameters Type Name Description Type valueType String name Returns Type Description String | Improve this Doc View Source GetLocalName(String) Declaration protected virtual string GetLocalName(string name) Parameters Type Name Description String name Returns Type Description String | Improve this Doc View Source GetProperties(Type) Declaration protected virtual IEnumerable<PropertyInfo> GetProperties(Type valueType) Parameters Type Name Description Type valueType Returns Type Description IEnumerable < PropertyInfo > | Improve this Doc View Source ResolveContract(Type) Declaration public virtual XmlContract ResolveContract(Type valueType) Parameters Type Name Description Type valueType Returns Type Description XmlContract | Improve this Doc View Source ResolveContractName(Type) Declaration protected virtual XmlName ResolveContractName(Type valueType) Parameters Type Name Description Type valueType Returns Type Description XmlName | Improve this Doc View Source ResolveEnumItems(Type) Declaration protected virtual IEnumerable<XmlEnumItem> ResolveEnumItems(Type valueType) Parameters Type Name Description Type valueType Returns Type Description IEnumerable < XmlEnumItem > | Improve this Doc View Source ResolveItem(Type) Declaration protected virtual XmlItem ResolveItem(Type valueType) Parameters Type Name Description Type valueType Returns Type Description XmlItem | Improve this Doc View Source ResolveName(Type) Declaration protected virtual XmlName ResolveName(Type valueType) Parameters Type Name Description Type valueType Returns Type Description XmlName | Improve this Doc View Source ResolveName(Type, String) Declaration protected virtual XmlName ResolveName(Type valueType, string name) Parameters Type Name Description Type valueType String name Returns Type Description XmlName | Improve this Doc View Source ResolveProperty(PropertyInfo) Declaration protected virtual XmlProperty ResolveProperty(PropertyInfo propertyInfo) Parameters Type Name Description PropertyInfo propertyInfo Returns Type Description XmlProperty Implements IXmlContractResolver Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.Model.QueryBucketManager.OnBeforeAddToBucketEventHandler.html": {
    "href": "api/DotNetHelper_Serializer.Model.QueryBucketManager.OnBeforeAddToBucketEventHandler.html",
    "title": "Delegate QueryBucketManager.OnBeforeAddToBucketEventHandler | DotNetHelper-Serializer",
    "keywords": "Delegate QueryBucketManager.OnBeforeAddToBucketEventHandler Namespace : DotNetHelper_Serializer.Model Assembly : DotNetHelper-Serializer.dll Syntax public delegate void OnBeforeAddToBucketEventHandler(object sender, QueryBucketEventArgs e); Parameters Type Name Description Object sender QueryBucketEventArgs e Extension Methods TypeExtension.CanHaveNullValue<T>(T) TypeExtension.CopyObject<T>(T)"
  },
  "api/DotNetHelper_Serializer.Attribute.SqlTableAttritube.html": {
    "href": "api/DotNetHelper_Serializer.Attribute.SqlTableAttritube.html",
    "title": "Class SqlTableAttritube | DotNetHelper-Serializer",
    "keywords": "Class SqlTableAttritube This specifies that the following property is also an SQL table Inheritance Object Attribute SqlTableAttritube Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.Attribute Assembly : DotNetHelper-Serializer.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Property)] public class SqlTableAttritube : Attribute, _Attribute Properties | Improve this Doc View Source JoinType Gets or sets a value indicating whether [x reference on delete cascade]. Declaration public SQLJoinType JoinType { get; set; } Property Value Type Description SQLJoinType null if [x reference on delete cascade] contains no value, true if [x reference on delete cascade]; otherwise, false . | Improve this Doc View Source SetJoinType Gets or sets a value indicating whether [setx reference on delete cascade]. Declaration public SQLJoinType SetJoinType { get; set; } Property Value Type Description SQLJoinType true if [setx reference on delete cascade]; otherwise, false . Exceptions Type Condition Exception Nooo... Your Using SqlColumnAttritube wrong do not try to get from the Set Property use the orignial | Improve this Doc View Source TableName The Sql Table name that this class data belongs to. Declaration public string TableName { get; set; } Property Value Type Description String The map to. | Improve this Doc View Source XReferenceTable Declaration public Type XReferenceTable { get; set; } Property Value Type Description Type Implements System.Runtime.InteropServices._Attribute Extension Methods TypeExtension.CanHaveNullValue<T>(T) See Also Attribute"
  },
  "api/DotNetHelper_Serializer.DataSource.DataSourceBinary.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.DataSourceBinary.html",
    "title": "Class DataSourceBinary | DotNetHelper-Serializer",
    "keywords": "Class DataSourceBinary Inheritance Object DataSourceBinary Implements DotNetHelper_IO.Interface.ISerializer IConvertible Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource Assembly : DotNetHelper-Serializer.dll Syntax public class DataSourceBinary : ISerializer, IConvertible Constructors | Improve this Doc View Source DataSourceBinary() Declaration public DataSourceBinary() | Improve this Doc View Source DataSourceBinary(Encoding, BinaryFormatter) Declaration public DataSourceBinary(Encoding encoding, BinaryFormatter b = null) Parameters Type Name Description Encoding encoding BinaryFormatter b Properties | Improve this Doc View Source Encoding Gets or sets the encoding. Declaration public Encoding Encoding { get; set; } Property Value Type Description Encoding The encoding. | Improve this Doc View Source Formatter Declaration public BinaryFormatter Formatter { get; } Property Value Type Description BinaryFormatter Methods | Improve this Doc View Source DeserializeFromFile(String) Declaration public dynamic DeserializeFromFile(string fullFilePath) Parameters Type Name Description String fullFilePath Returns Type Description Object | Improve this Doc View Source DeserializeFromFile(Type, String) Declaration public object DeserializeFromFile(Type type, string fullFilePath) Parameters Type Name Description Type type String fullFilePath Returns Type Description Object | Improve this Doc View Source DeserializeFromFile<T>(String) Declaration public T DeserializeFromFile<T>(string file) where T : class Parameters Type Name Description String file Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source DeserializeFromStream(Stream, Type) Declaration public object DeserializeFromStream(Stream stream, Type type) Parameters Type Name Description Stream stream Type type Returns Type Description Object | Improve this Doc View Source DeserializeFromStream<T>(Stream) Declaration public T DeserializeFromStream<T>(Stream stream) Parameters Type Name Description Stream stream Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source DeserializeFromString(String, Type) Declaration public object DeserializeFromString(string json, Type type) Parameters Type Name Description String json Type type Returns Type Description Object | Improve this Doc View Source DeserializeFromString<T>(String) Declaration public T DeserializeFromString<T>(string text) where T : class Parameters Type Name Description String text Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source DeserializeListFromFile(String) Declaration public IEnumerable<dynamic> DeserializeListFromFile(string fullFilePath) Parameters Type Name Description String fullFilePath Returns Type Description IEnumerable < Object > | Improve this Doc View Source DeserializeListFromFile<T>(String) Declaration public IEnumerable<T> DeserializeListFromFile<T>(string fullFilePath) where T : class Parameters Type Name Description String fullFilePath Returns Type Description IEnumerable <T> Type Parameters Name Description T | Improve this Doc View Source DeserializeToCSharpClass(String, String) Declaration public string DeserializeToCSharpClass(string content, string className = null) Parameters Type Name Description String content String className Returns Type Description String | Improve this Doc View Source DeserializeToList(String) Declaration public IEnumerable<dynamic> DeserializeToList(string content) Parameters Type Name Description String content Returns Type Description IEnumerable < Object > | Improve this Doc View Source DeserializeToList<T>(String) Declaration public List<T> DeserializeToList<T>(string content) where T : class Parameters Type Name Description String content Returns Type Description List <T> Type Parameters Name Description T | Improve this Doc View Source GetTypeCode() Declaration public TypeCode GetTypeCode() Returns Type Description TypeCode | Improve this Doc View Source SerializeToFile(Object, String, FileOption) Serializes to file. Declaration public void SerializeToFile(object obj, string fullFilePath, FileOption option = FileOption.DoNothingIfExist) Parameters Type Name Description Object obj The obj. String fullFilePath DotNetHelper_Contracts.Enum.IO.FileOption option Exceptions Type Condition ArgumentNullException obj | Improve this Doc View Source SerializeToFile(Object, Type, String, FileOption) Declaration public void SerializeToFile(object obj, Type type, string fullFilePath, FileOption option) Parameters Type Name Description Object obj Type type String fullFilePath DotNetHelper_Contracts.Enum.IO.FileOption option | Improve this Doc View Source SerializeToFile<T>(T, String, FileOption) Declaration public void SerializeToFile<T>(T obj, string file, FileOption mode) where T : class Parameters Type Name Description T obj String file DotNetHelper_Contracts.Enum.IO.FileOption mode Type Parameters Name Description T | Improve this Doc View Source SerializeToFile<T>(IEnumerable<T>, String, FileOption) Declaration public void SerializeToFile<T>(IEnumerable<T> list, string fullFilePath, FileOption option) where T : class Parameters Type Name Description IEnumerable <T> list String fullFilePath DotNetHelper_Contracts.Enum.IO.FileOption option Type Parameters Name Description T | Improve this Doc View Source SerializeToStream(Object, Type, Stream, Int32, Boolean) Declaration public void SerializeToStream(object obj, Type type, Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) Parameters Type Name Description Object obj Type type Stream stream Int32 bufferSize Boolean leaveStreamOpen | Improve this Doc View Source SerializeToStream<T>(T, Stream, Int32, Boolean) Declaration public void SerializeToStream<T>(T obj, Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) where T : class Parameters Type Name Description T obj Stream stream Int32 bufferSize Boolean leaveStreamOpen Type Parameters Name Description T | Improve this Doc View Source SerializeToString(Object) Declaration public string SerializeToString(object obj) Parameters Type Name Description Object obj Returns Type Description String | Improve this Doc View Source SerializeToString<T>(T) Declaration public string SerializeToString<T>(T obj) where T : class Parameters Type Name Description T obj Returns Type Description String Type Parameters Name Description T | Improve this Doc View Source ToBoolean(IFormatProvider) Declaration public bool ToBoolean(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Boolean | Improve this Doc View Source ToByte(IFormatProvider) Declaration public byte ToByte(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Byte | Improve this Doc View Source ToChar(IFormatProvider) Declaration public char ToChar(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Char | Improve this Doc View Source ToDateTime(IFormatProvider) Declaration public DateTime ToDateTime(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description DateTime | Improve this Doc View Source ToDecimal(IFormatProvider) Declaration public decimal ToDecimal(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Decimal | Improve this Doc View Source ToDouble(IFormatProvider) Declaration public double ToDouble(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Double | Improve this Doc View Source ToInt16(IFormatProvider) Declaration public short ToInt16(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Int16 | Improve this Doc View Source ToInt32(IFormatProvider) Declaration public int ToInt32(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Int32 | Improve this Doc View Source ToInt64(IFormatProvider) Declaration public long ToInt64(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Int64 | Improve this Doc View Source ToSByte(IFormatProvider) Declaration public sbyte ToSByte(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description SByte | Improve this Doc View Source ToSingle(IFormatProvider) Declaration public float ToSingle(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Single | Improve this Doc View Source ToString(IFormatProvider) Declaration public string ToString(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description String | Improve this Doc View Source ToType(Type, IFormatProvider) Declaration public object ToType(Type conversionType, IFormatProvider provider) Parameters Type Name Description Type conversionType IFormatProvider provider Returns Type Description Object | Improve this Doc View Source ToUInt16(IFormatProvider) Declaration public ushort ToUInt16(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description UInt16 | Improve this Doc View Source ToUInt32(IFormatProvider) Declaration public uint ToUInt32(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description UInt32 | Improve this Doc View Source ToUInt64(IFormatProvider) Declaration public ulong ToUInt64(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description UInt64 Implements DotNetHelper_IO.Interface.ISerializer System.IConvertible Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.Model.Db.html": {
    "href": "api/DotNetHelper_Serializer.Model.Db.html",
    "title": "Class Db | DotNetHelper-Serializer",
    "keywords": "Class Db Inheritance Object Db Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.Model Assembly : DotNetHelper-Serializer.dll Syntax public class Db Properties | Improve this Doc View Source CreatedDate Declaration public DateTime? CreatedDate { get; set; } Property Value Type Description Nullable < DateTime > | Improve this Doc View Source Dbid Declaration public short? Dbid { get; set; } Property Value Type Description Nullable < Int16 > | Improve this Doc View Source Filename Declaration public string Filename { get; set; } Property Value Type Description String | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Version Declaration public short? Version { get; set; } Property Value Type Description Nullable < Int16 > Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlNullValueHandling.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlNullValueHandling.html",
    "title": "Enum XmlNullValueHandling | DotNetHelper-Serializer",
    "keywords": "Enum XmlNullValueHandling Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts Assembly : DotNetHelper-Serializer.dll Syntax public enum XmlNullValueHandling Fields Name Description Ignore Include Extension Methods TypeExtension.CanHaveNullValue<XmlNullValueHandling>()"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlContractException.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlContractException.html",
    "title": "Class XmlContractException | DotNetHelper-Serializer",
    "keywords": "Class XmlContractException Inheritance Object Exception XmlSerializationException XmlContractException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts Assembly : DotNetHelper-Serializer.dll Syntax public class XmlContractException : XmlSerializationException, ISerializable, _Exception Constructors | Improve this Doc View Source XmlContractException(String) Declaration public XmlContractException(string message) Parameters Type Name Description String message | Improve this Doc View Source XmlContractException(String, Exception) Declaration public XmlContractException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.Extension.ExtString.html": {
    "href": "api/DotNetHelper_Serializer.Extension.ExtString.html",
    "title": "Class ExtString | DotNetHelper-Serializer",
    "keywords": "Class ExtString Inheritance Object ExtString Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.Extension Assembly : DotNetHelper-Serializer.dll Syntax public static class ExtString Methods | Improve this Doc View Source GetJsonType(String) Declaration public static JTokenType GetJsonType(this string strInput) Parameters Type Name Description String strInput Returns Type Description Newtonsoft.Json.Linq.JTokenType | Improve this Doc View Source IsValidJson(String, Type) Declaration public static bool IsValidJson(this string strInput, Type type) Parameters Type Name Description String strInput Type type Returns Type Description Boolean | Improve this Doc View Source IsValidJson<T>(String) Declaration public static bool IsValidJson<T>(this string strInput) Parameters Type Name Description String strInput Returns Type Description Boolean Type Parameters Name Description T | Improve this Doc View Source JsonToList<T>(String, Boolean, JsonSerializer, Boolean) Maps Json to a list of T Declaration public static List<T> JsonToList<T>(this string json, bool throwOnError, JsonSerializer serializer = null, bool validateData = false) where T : class Parameters Type Name Description String json Boolean throwOnError if true return empty list on exception during parsing json Newtonsoft.Json.JsonSerializer serializer Boolean validateData Returns Type Description List <T> Type Parameters Name Description T"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Specialized.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Specialized.html",
    "title": "Namespace DotNetHelper_Serializer.DataSource.Xml.Converters.Specialized | DotNetHelper-Serializer",
    "keywords": "Namespace DotNetHelper_Serializer.DataSource.Xml.Converters.Specialized Classes XmlByteArrayConverter XmlKeyValuePairConverter XmlNullableConverter XmlSerializableConverter XmlTypeConverter XmlUriConverter"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlKnownType.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlKnownType.html",
    "title": "Class XmlKnownType | DotNetHelper-Serializer",
    "keywords": "Class XmlKnownType Inheritance Object XmlMember XmlKnownType Inherited Members XmlMember.ValueType XmlMember.Name XmlMember.MappingType XmlMember.TypeHandling XmlMember.NullValueHandling XmlMember.DefaultValueHandling XmlMember.DefaultValue XmlMember.Item XmlMember.KnownTypes Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlKnownType : XmlMember Constructors | Improve this Doc View Source XmlKnownType(Type, XmlName, Nullable<XmlTypeHandling>, Nullable<XmlNullValueHandling>, Nullable<XmlDefaultValueHandling>, Object) Declaration public XmlKnownType(Type valueType, XmlName name, XmlTypeHandling? typeHandling = default(XmlTypeHandling? ), XmlNullValueHandling? nullValueHandling = default(XmlNullValueHandling? ), XmlDefaultValueHandling? defaultValueHandling = default(XmlDefaultValueHandling? ), object defaultValue = null) Parameters Type Name Description Type valueType XmlName name Nullable < XmlTypeHandling > typeHandling Nullable < XmlNullValueHandling > nullValueHandling Nullable < XmlDefaultValueHandling > defaultValueHandling Object defaultValue Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlInt16Converter.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlInt16Converter.html",
    "title": "Class XmlInt16Converter | DotNetHelper-Serializer",
    "keywords": "Class XmlInt16Converter Inheritance Object XmlConverter < Int16 > XmlBasicConverter < Int16 > XmlBasicRawConverter < Int16 > XmlInt16Converter Implements IXmlConverter Inherited Members XmlBasicRawConverter<Int16>.WriteXml(XmlWriter, Object, XmlSerializationContext) XmlBasicConverter<Int16>.ReadXml(XmlReader, XmlSerializationContext) XmlConverter<Int16>.CanRead(Type) XmlConverter<Int16>.CanWrite(Type) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters.Basics Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlInt16Converter : XmlBasicRawConverter<short>, IXmlConverter Methods | Improve this Doc View Source Parse(String, XmlSerializationContext) Declaration protected override short Parse(string value, XmlSerializationContext context) Parameters Type Name Description String value XmlSerializationContext context Returns Type Description Int16 Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.Int16>.Parse(System.String, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) | Improve this Doc View Source ToString(Int16, XmlSerializationContext) Declaration protected override string ToString(short value, XmlSerializationContext context) Parameters Type Name Description Int16 value XmlSerializationContext context Returns Type Description String Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.Int16>.ToString(System.Int16, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) Implements IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.html",
    "title": "Namespace DotNetHelper_Serializer.DataSource.Xml.Contracts | DotNetHelper-Serializer",
    "keywords": "Namespace DotNetHelper_Serializer.DataSource.Xml.Contracts Classes NamingConventions XmlContract XmlContractException XmlContractResolver XmlCustomContractResolver XmlEnumContract XmlEnumItem XmlItem XmlKnownType XmlMember XmlName XmlNamespace XmlObjectContract XmlProperty Interfaces IXmlContractResolver Enums XmlDefaultValueHandling XmlMappingType XmlNullValueHandling XmlTypeHandling"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumItem.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlEnumItem.html",
    "title": "Class XmlEnumItem | DotNetHelper-Serializer",
    "keywords": "Class XmlEnumItem Inheritance Object XmlEnumItem Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlEnumItem Constructors | Improve this Doc View Source XmlEnumItem(Int64, String) Declaration public XmlEnumItem(long value, string name) Parameters Type Name Description Int64 value String name Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description String | Improve this Doc View Source Value Declaration public long Value { get; } Property Value Type Description Int64 Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlPropertyBuilder.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlPropertyBuilder.html",
    "title": "Class XmlPropertyBuilder | DotNetHelper-Serializer",
    "keywords": "Class XmlPropertyBuilder Inheritance Object XmlMemberBuilder XmlItemBuilder XmlPropertyBuilder Implements IXmlObjectBuilder IXmlCollectionBuilder IXmlBuilder Inherited Members XmlItemBuilder.KnownTypes XmlItemBuilder.Create(XmlItem) XmlMemberBuilder.ValueType XmlMemberBuilder.Name XmlMemberBuilder.TypeHandling Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlPropertyBuilder : XmlItemBuilder, IXmlObjectBuilder, IXmlCollectionBuilder, IXmlBuilder Constructors | Improve this Doc View Source XmlPropertyBuilder(PropertyInfo) Declaration public XmlPropertyBuilder(PropertyInfo propertyInfo) Parameters Type Name Description PropertyInfo propertyInfo Properties | Improve this Doc View Source DefaultValue Declaration public object DefaultValue { get; set; } Property Value Type Description Object | Improve this Doc View Source DefaultValueHandling Declaration public XmlDefaultValueHandling? DefaultValueHandling { get; set; } Property Value Type Description Nullable < XmlDefaultValueHandling > | Improve this Doc View Source IsCollection Declaration public bool IsCollection { get; set; } Property Value Type Description Boolean | Improve this Doc View Source IsRequired Declaration public bool IsRequired { get; set; } Property Value Type Description Boolean | Improve this Doc View Source Item Declaration public XmlItemBuilder Item { get; set; } Property Value Type Description XmlItemBuilder | Improve this Doc View Source MappingType Declaration public XmlMappingType MappingType { get; set; } Property Value Type Description XmlMappingType | Improve this Doc View Source NullValueHandling Declaration public XmlNullValueHandling? NullValueHandling { get; set; } Property Value Type Description Nullable < XmlNullValueHandling > | Improve this Doc View Source Order Declaration public int Order { get; set; } Property Value Type Description Int32 | Improve this Doc View Source PropertyInfo Declaration public PropertyInfo PropertyInfo { get; } Property Value Type Description PropertyInfo Methods | Improve this Doc View Source Build() Declaration public XmlProperty Build() Returns Type Description XmlProperty | Improve this Doc View Source Create(XmlProperty) Declaration public static XmlPropertyBuilder Create(XmlProperty property) Parameters Type Name Description XmlProperty property Returns Type Description XmlPropertyBuilder | Improve this Doc View Source Create(Type, String) Declaration public static XmlPropertyBuilder Create(Type ownerType, string propertyName) Parameters Type Name Description Type ownerType String propertyName Returns Type Description XmlPropertyBuilder | Improve this Doc View Source Create<TOwner, TProperty>(Expression<Func<TOwner, TProperty>>) Declaration public static XmlPropertyBuilder Create<TOwner, TProperty>(Expression<Func<TOwner, TProperty>> expression) Parameters Type Name Description Expression < Func <TOwner, TProperty>> expression Returns Type Description XmlPropertyBuilder Type Parameters Name Description TOwner TProperty Implements IXmlObjectBuilder IXmlCollectionBuilder IXmlBuilder Extension Methods TypeExtension.CanHaveNullValue<T>(T) XmlBuilderExtensions.SetName<TBuilder>(TBuilder, XmlName) XmlBuilderExtensions.SetTypeHandling<TBuilder>(TBuilder, Nullable<XmlTypeHandling>) XmlBuilderExtensions.SetKnownType<TBuilder>(TBuilder, Type, XmlName) XmlBuilderExtensions.SetKnownType<TBuilder>(TBuilder, Type, Action<XmlKnownTypeBuilder>) XmlBuilderExtensions.SetKnownType<T>(XmlItemBuilder, XmlName) XmlBuilderExtensions.SetKnownType<T>(XmlItemBuilder, Action<XmlKnownTypeBuilder>) XmlBuilderExtensions.SetKnownType<T>(XmlPropertyBuilder, XmlName) XmlBuilderExtensions.SetKnownType<T>(XmlPropertyBuilder, Action<XmlKnownTypeBuilder>) XmlBuilderExtensions.RemoveKnownType<TBuilder>(TBuilder, Type) XmlBuilderExtensions.SetItem<TBuilder>(TBuilder, XmlName) XmlBuilderExtensions.SetItem<TBuilder>(TBuilder, Type, XmlName) XmlBuilderExtensions.SetItem<TBuilder>(TBuilder, Action<XmlItemBuilder>) XmlBuilderExtensions.SetItem<TBuilder>(TBuilder, Type, Action<XmlItemBuilder>) XmlBuilderExtensions.SetNullable<T>(T, Boolean) XmlBuilderExtensions.SetNullValueHandling<T>(T, Nullable<XmlNullValueHandling>) XmlBuilderExtensions.SetDefaultValue<TBuilder>(TBuilder, Object) XmlBuilderExtensions.SetDefaultValueHandling<TBuilder>(TBuilder, Nullable<XmlDefaultValueHandling>) XmlBuilderExtensions.SetMappingType(XmlPropertyBuilder, XmlMappingType) XmlBuilderExtensions.SetOrder(XmlPropertyBuilder, Int32) XmlBuilderExtensions.SetRequired(XmlPropertyBuilder, Boolean) XmlBuilderExtensions.SetCollection(XmlPropertyBuilder, Boolean)"
  },
  "api/DotNetHelper_Serializer.DataSource.DataSourceXml.XmlOptions.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.DataSourceXml.XmlOptions.html",
    "title": "Enum DataSourceXml.XmlOptions | DotNetHelper-Serializer",
    "keywords": "Enum DataSourceXml.XmlOptions Enum XmlOptions Namespace : DotNetHelper_Serializer.DataSource Assembly : DotNetHelper-Serializer.dll Syntax public enum XmlOptions Fields Name Description AttributeName The attribute name Namespaces The namespaces XmlDeclaration The XML declaration Extension Methods TypeExtension.CanHaveNullValue<DataSourceXml.XmlOptions>()"
  },
  "api/DotNetHelper_Serializer.Attribute.DataValidationAttritube.html": {
    "href": "api/DotNetHelper_Serializer.Attribute.DataValidationAttritube.html",
    "title": "Class DataValidationAttritube | DotNetHelper-Serializer",
    "keywords": "Class DataValidationAttritube Class DataValidationAttritube. Inheritance Object Attribute DataValidationAttritube Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.Attribute Assembly : DotNetHelper-Serializer.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Property)] public class DataValidationAttritube : Attribute, _Attribute Properties | Improve this Doc View Source CanContainLetter Gets or sets a value indicating whether this instance can contain letter. Declaration public bool? CanContainLetter { get; set; } Property Value Type Description Nullable < Boolean > null if [can contain letter] contains no value, true if [can contain letter]; otherwise, false . | Improve this Doc View Source CanContainNumbers Gets or sets a value indicating whether this instance can contain numbers. Declaration public bool? CanContainNumbers { get; set; } Property Value Type Description Nullable < Boolean > null if [can contain numbers] contains no value, true if [can contain numbers]; otherwise, false . | Improve this Doc View Source DataType Gets or sets the type of the data. Declaration public DataType? DataType { get; set; } Property Value Type Description Nullable < DotNetHelper_Contracts.Enum.DataType > The type of the data. | Improve this Doc View Source Ignore Gets or sets a value indicating whether this DataValidationAttritube is ignore. Declaration public bool? Ignore { get; set; } Property Value Type Description Nullable < Boolean > null if [ignore] contains no value, true if [ignore]; otherwise, false . | Improve this Doc View Source MaxLengthSize Max Size Property Can Be Declaration public int? MaxLengthSize { get; set; } Property Value Type Description Nullable < Int32 > The maximum size of the length. | Improve this Doc View Source RequireValue Wether Or Null Declaration public bool? RequireValue { get; set; } Property Value Type Description Nullable < Boolean > null if [require value] contains no value, true if [require value]; otherwise, false . | Improve this Doc View Source SetCanContainLetter Gets or sets a value indicating whether [set can contain letter]. Declaration public bool SetCanContainLetter { get; set; } Property Value Type Description Boolean true if [set can contain letter]; otherwise, false . Exceptions Type Condition Exception Nooo... Your Using DataValidationAttritube wrong You Must Set This Attribute Value Before Trying To Get It There IS NO SUCH THING AS NULL | Improve this Doc View Source SetCanContainNumbers Gets or sets a value indicating whether [set can contain numbers]. Declaration public bool SetCanContainNumbers { get; set; } Property Value Type Description Boolean true if [set can contain numbers]; otherwise, false . Exceptions Type Condition Exception Nooo... Your Using DataValidationAttritube wrong You Must Set This Attribute Value Before Trying To Get It There IS NO SUCH THING AS NULL | Improve this Doc View Source SetDataType Gets or sets the type of the set data. Declaration public DataType SetDataType { get; set; } Property Value Type Description DotNetHelper_Contracts.Enum.DataType The type of the set data. Exceptions Type Condition Exception Nooo... Your Using DataValidationAttritube wrong You Must Set This Attribute Value Before Trying To Get It There IS NO SUCH THING AS NULL | Improve this Doc View Source SetIgnore Gets or sets a value indicating whether [set ignore]. Declaration public bool SetIgnore { get; set; } Property Value Type Description Boolean true if [set ignore]; otherwise, false . Exceptions Type Condition Exception Nooo... Your Using DataValidationAttritube wrong You Must Set This Attribute Value Before Trying To Get It There IS NO SUCH THING AS NULL | Improve this Doc View Source SetMaxLengthSize Gets or sets the size of the set maximum length. Declaration public int SetMaxLengthSize { get; set; } Property Value Type Description Int32 The size of the set maximum length. Exceptions Type Condition Exception Nooo... Your Using DataValidationAttritube wrong You Must Set This Attribute Value Before Trying To Get It There IS NO SUCH THING AS NULL | Improve this Doc View Source SetRequireValue Gets or sets a value indicating whether [set require value]. Declaration public bool SetRequireValue { get; set; } Property Value Type Description Boolean true if [set require value]; otherwise, false . Exceptions Type Condition Exception Nooo... Your Using DataValidationAttritube wrong You Must Set This Attribute Value Before Trying To Get It There IS NO SUCH THING AS NULL Implements System.Runtime.InteropServices._Attribute Extension Methods TypeExtension.CanHaveNullValue<T>(T) See Also Attribute"
  },
  "api/DotNetHelper_Serializer.Helper.ObjectMapper.html": {
    "href": "api/DotNetHelper_Serializer.Helper.ObjectMapper.html",
    "title": "Class ObjectMapper | DotNetHelper-Serializer",
    "keywords": "Class ObjectMapper Inheritance Object ObjectMapper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.Helper Assembly : DotNetHelper-Serializer.dll Syntax public static class ObjectMapper Methods | Improve this Doc View Source DoesAllPropertiesMatchExact(List<String>, IEnumerable<AdvanceMember>, IEnumerable<AdvanceMember>) Declaration public static bool DoesAllPropertiesMatchExact(List<string> propertyToSearch, IEnumerable<AdvanceMember> members1, IEnumerable<AdvanceMember> members2) Parameters Type Name Description List < String > propertyToSearch IEnumerable < AdvanceMember > members1 IEnumerable < AdvanceMember > members2 Returns Type Description Boolean | Improve this Doc View Source IsSqlColumnsKeysMatchingValues<T>(T, T) Declaration public static bool IsSqlColumnsKeysMatchingValues<T>(T poco1, T poco2) where T : class Parameters Type Name Description T poco1 T poco2 Returns Type Description Boolean Type Parameters Name Description T | Improve this Doc View Source MapExcept<T1, T2>(T1, T2, Expression<Func<T1, Object>>, Boolean, StringComparison, IDictionary<Type, IFormatProvider>) Declaration public static T2 MapExcept<T1, T2>(T1 original, T2 copyCat, Expression<Func<T1, object>> excludeProperties = null, bool exactTypeOnly = false, StringComparison comparer = StringComparison.CurrentCulture, IDictionary<Type, IFormatProvider> beforeMappinFormatProviders = null) Parameters Type Name Description T1 original T2 copyCat Expression < Func <T1, Object >> excludeProperties Boolean exactTypeOnly StringComparison comparer IDictionary < Type , IFormatProvider > beforeMappinFormatProviders Returns Type Description T2 Type Parameters Name Description T1 T2 | Improve this Doc View Source MapExceptDontThrow<T1, T2>(T1, T2, Expression<Func<T1, Object>>, Boolean, StringComparison, IDictionary<Type, IFormatProvider>) Declaration public static T2 MapExceptDontThrow<T1, T2>(T1 original, T2 copyCat, Expression<Func<T1, object>> excludeProperties = null, bool exactTypeOnly = false, StringComparison comparer = StringComparison.CurrentCulture, IDictionary<Type, IFormatProvider> beforeMappinFormatProviders = null) Parameters Type Name Description T1 original T2 copyCat Expression < Func <T1, Object >> excludeProperties Boolean exactTypeOnly StringComparison comparer IDictionary < Type , IFormatProvider > beforeMappinFormatProviders Returns Type Description T2 Type Parameters Name Description T1 T2 | Improve this Doc View Source MapOnly<T1, T2>(T1, T2, Expression<Func<T1, Object>>, Boolean, StringComparison, IDictionary<Type, IFormatProvider>) Declaration public static T2 MapOnly<T1, T2>(T1 original, T2 copyCat, Expression<Func<T1, object>> includeProperties = null, bool exactTypeOnly = false, StringComparison comparer = StringComparison.CurrentCulture, IDictionary<Type, IFormatProvider> beforeMappinFormatProviders = null) Parameters Type Name Description T1 original T2 copyCat Expression < Func <T1, Object >> includeProperties Boolean exactTypeOnly StringComparison comparer IDictionary < Type , IFormatProvider > beforeMappinFormatProviders Returns Type Description T2 Type Parameters Name Description T1 T2 | Improve this Doc View Source MapProperties<T1, T2>(T1, T2, Boolean, StringComparison, IDictionary<Type, IFormatProvider>) Declaration public static T2 MapProperties<T1, T2>(T1 original, T2 copyCat, bool exactTypeOnly = false, StringComparison comparer = StringComparison.CurrentCulture, IDictionary<Type, IFormatProvider> beforeMappinFormatProviders = null) Parameters Type Name Description T1 original T2 copyCat Boolean exactTypeOnly StringComparison comparer IDictionary < Type , IFormatProvider > beforeMappinFormatProviders Returns Type Description T2 Type Parameters Name Description T1 T2 | Improve this Doc View Source MapPropertiesDontThrow<T1, T2>(T1, T2, Boolean, StringComparison, IDictionary<Type, IFormatProvider>) Declaration public static T2 MapPropertiesDontThrow<T1, T2>(T1 original, T2 copyCat, bool exactTypeOnly = false, StringComparison comparer = StringComparison.CurrentCulture, IDictionary<Type, IFormatProvider> beforeMappinFormatProviders = null) Parameters Type Name Description T1 original T2 copyCat Boolean exactTypeOnly StringComparison comparer IDictionary < Type , IFormatProvider > beforeMappinFormatProviders Returns Type Description T2 Type Parameters Name Description T1 T2"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.XmlSerializationException.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.XmlSerializationException.html",
    "title": "Class XmlSerializationException | DotNetHelper-Serializer",
    "keywords": "Class XmlSerializationException Inheritance Object Exception XmlSerializationException XmlContractException XmlTypeResolveException Implements ISerializable _Exception Inherited Members Exception.GetBaseException() Exception.ToString() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.Message Exception.Data Exception.InnerException Exception.TargetSite Exception.StackTrace Exception.HelpLink Exception.Source Exception.HResult Exception.SerializeObjectState Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml Assembly : DotNetHelper-Serializer.dll Syntax public class XmlSerializationException : Exception, ISerializable, _Exception Constructors | Improve this Doc View Source XmlSerializationException(String) Declaration public XmlSerializationException(string message) Parameters Type Name Description String message | Improve this Doc View Source XmlSerializationException(String, Exception) Declaration public XmlSerializationException(string message, Exception innerException) Parameters Type Name Description String message Exception innerException Implements System.Runtime.Serialization.ISerializable System.Runtime.InteropServices._Exception Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlDoubleConverter.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlDoubleConverter.html",
    "title": "Class XmlDoubleConverter | DotNetHelper-Serializer",
    "keywords": "Class XmlDoubleConverter Inheritance Object XmlConverter < Double > XmlBasicConverter < Double > XmlBasicRawConverter < Double > XmlDoubleConverter Implements IXmlConverter Inherited Members XmlBasicRawConverter<Double>.WriteXml(XmlWriter, Object, XmlSerializationContext) XmlBasicConverter<Double>.ReadXml(XmlReader, XmlSerializationContext) XmlConverter<Double>.CanRead(Type) XmlConverter<Double>.CanWrite(Type) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters.Basics Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlDoubleConverter : XmlBasicRawConverter<double>, IXmlConverter Methods | Improve this Doc View Source Parse(String, XmlSerializationContext) Declaration protected override double Parse(string value, XmlSerializationContext context) Parameters Type Name Description String value XmlSerializationContext context Returns Type Description Double Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.Double>.Parse(System.String, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) | Improve this Doc View Source ToString(Double, XmlSerializationContext) Declaration protected override string ToString(double value, XmlSerializationContext context) Parameters Type Name Description Double value XmlSerializationContext context Returns Type Description String Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.Double>.ToString(System.Double, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) Implements IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlObjectContract.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlObjectContract.html",
    "title": "Class XmlObjectContract | DotNetHelper-Serializer",
    "keywords": "Class XmlObjectContract Inheritance Object XmlContract XmlObjectContract Inherited Members XmlContract.ValueType XmlContract.Name Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlObjectContract : XmlContract Constructors | Improve this Doc View Source XmlObjectContract(Type, XmlName, IEnumerable<XmlProperty>, Nullable<XmlTypeHandling>, XmlItem) Declaration public XmlObjectContract(Type valueType, XmlName name, IEnumerable<XmlProperty> properties = null, XmlTypeHandling? typeHandling = default(XmlTypeHandling? ), XmlItem item = null) Parameters Type Name Description Type valueType XmlName name IEnumerable < XmlProperty > properties Nullable < XmlTypeHandling > typeHandling XmlItem item Properties | Improve this Doc View Source Item Declaration public XmlItem Item { get; } Property Value Type Description XmlItem | Improve this Doc View Source Properties Declaration public IReadOnlyList<XmlProperty> Properties { get; } Property Value Type Description IReadOnlyList < XmlProperty > | Improve this Doc View Source TypeHandling Declaration public XmlTypeHandling? TypeHandling { get; } Property Value Type Description Nullable < XmlTypeHandling > Methods | Improve this Doc View Source GetDefaultMember() Declaration protected override XmlMember GetDefaultMember() Returns Type Description XmlMember Overrides XmlContract.GetDefaultMember() Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlBuilderExtensions.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlBuilderExtensions.html",
    "title": "Class XmlBuilderExtensions | DotNetHelper-Serializer",
    "keywords": "Class XmlBuilderExtensions Inheritance Object XmlBuilderExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders Assembly : DotNetHelper-Serializer.dll Syntax public static class XmlBuilderExtensions Methods | Improve this Doc View Source RemoveKnownType<TBuilder>(TBuilder, Type) Declaration public static TBuilder RemoveKnownType<TBuilder>(this TBuilder builder, Type valueType) where TBuilder : XmlItemBuilder Parameters Type Name Description TBuilder builder Type valueType Returns Type Description TBuilder Type Parameters Name Description TBuilder | Improve this Doc View Source SetCollection(XmlPropertyBuilder, Boolean) Declaration public static XmlPropertyBuilder SetCollection(this XmlPropertyBuilder builder, bool isCollection = true) Parameters Type Name Description XmlPropertyBuilder builder Boolean isCollection Returns Type Description XmlPropertyBuilder | Improve this Doc View Source SetDefaultValue<TBuilder>(TBuilder, Object) Declaration public static TBuilder SetDefaultValue<TBuilder>(this TBuilder builder, object defaultValue) where TBuilder : IXmlObjectBuilder Parameters Type Name Description TBuilder builder Object defaultValue Returns Type Description TBuilder Type Parameters Name Description TBuilder | Improve this Doc View Source SetDefaultValueHandling<TBuilder>(TBuilder, Nullable<XmlDefaultValueHandling>) Declaration public static TBuilder SetDefaultValueHandling<TBuilder>(this TBuilder builder, XmlDefaultValueHandling? defaultValueHandling) where TBuilder : IXmlObjectBuilder Parameters Type Name Description TBuilder builder Nullable < XmlDefaultValueHandling > defaultValueHandling Returns Type Description TBuilder Type Parameters Name Description TBuilder | Improve this Doc View Source SetItem<TBuilder>(TBuilder, XmlName) Declaration public static TBuilder SetItem<TBuilder>(this TBuilder builder, XmlName name) where TBuilder : IXmlCollectionBuilder Parameters Type Name Description TBuilder builder XmlName name Returns Type Description TBuilder Type Parameters Name Description TBuilder | Improve this Doc View Source SetItem<TBuilder>(TBuilder, Action<XmlItemBuilder>) Declaration public static TBuilder SetItem<TBuilder>(this TBuilder builder, Action<XmlItemBuilder> build) where TBuilder : IXmlCollectionBuilder Parameters Type Name Description TBuilder builder Action < XmlItemBuilder > build Returns Type Description TBuilder Type Parameters Name Description TBuilder | Improve this Doc View Source SetItem<TBuilder>(TBuilder, Type, XmlName) Declaration public static TBuilder SetItem<TBuilder>(this TBuilder builder, Type valueType, XmlName name) where TBuilder : IXmlCollectionBuilder Parameters Type Name Description TBuilder builder Type valueType XmlName name Returns Type Description TBuilder Type Parameters Name Description TBuilder | Improve this Doc View Source SetItem<TBuilder>(TBuilder, Type, Action<XmlItemBuilder>) Declaration public static TBuilder SetItem<TBuilder>(this TBuilder builder, Type valueType, Action<XmlItemBuilder> build) where TBuilder : IXmlCollectionBuilder Parameters Type Name Description TBuilder builder Type valueType Action < XmlItemBuilder > build Returns Type Description TBuilder Type Parameters Name Description TBuilder | Improve this Doc View Source SetKnownType<TBuilder>(TBuilder, Type, XmlName) Declaration public static TBuilder SetKnownType<TBuilder>(this TBuilder builder, Type valueType, XmlName name = null) where TBuilder : XmlItemBuilder Parameters Type Name Description TBuilder builder Type valueType XmlName name Returns Type Description TBuilder Type Parameters Name Description TBuilder | Improve this Doc View Source SetKnownType<TBuilder>(TBuilder, Type, Action<XmlKnownTypeBuilder>) Declaration public static TBuilder SetKnownType<TBuilder>(this TBuilder builder, Type valueType, Action<XmlKnownTypeBuilder> build) where TBuilder : XmlItemBuilder Parameters Type Name Description TBuilder builder Type valueType Action < XmlKnownTypeBuilder > build Returns Type Description TBuilder Type Parameters Name Description TBuilder | Improve this Doc View Source SetKnownType<T>(XmlItemBuilder, XmlName) Declaration public static XmlItemBuilder SetKnownType<T>(this XmlItemBuilder builder, XmlName name = null) Parameters Type Name Description XmlItemBuilder builder XmlName name Returns Type Description XmlItemBuilder Type Parameters Name Description T | Improve this Doc View Source SetKnownType<T>(XmlItemBuilder, Action<XmlKnownTypeBuilder>) Declaration public static XmlItemBuilder SetKnownType<T>(this XmlItemBuilder builder, Action<XmlKnownTypeBuilder> build) Parameters Type Name Description XmlItemBuilder builder Action < XmlKnownTypeBuilder > build Returns Type Description XmlItemBuilder Type Parameters Name Description T | Improve this Doc View Source SetKnownType<T>(XmlPropertyBuilder, XmlName) Declaration public static XmlPropertyBuilder SetKnownType<T>(this XmlPropertyBuilder builder, XmlName name = null) Parameters Type Name Description XmlPropertyBuilder builder XmlName name Returns Type Description XmlPropertyBuilder Type Parameters Name Description T | Improve this Doc View Source SetKnownType<T>(XmlPropertyBuilder, Action<XmlKnownTypeBuilder>) Declaration public static XmlPropertyBuilder SetKnownType<T>(this XmlPropertyBuilder builder, Action<XmlKnownTypeBuilder> build) Parameters Type Name Description XmlPropertyBuilder builder Action < XmlKnownTypeBuilder > build Returns Type Description XmlPropertyBuilder Type Parameters Name Description T | Improve this Doc View Source SetMappingType(XmlPropertyBuilder, XmlMappingType) Declaration public static XmlPropertyBuilder SetMappingType(this XmlPropertyBuilder builder, XmlMappingType mappingType) Parameters Type Name Description XmlPropertyBuilder builder XmlMappingType mappingType Returns Type Description XmlPropertyBuilder | Improve this Doc View Source SetName<TBuilder>(TBuilder, XmlName) Declaration public static TBuilder SetName<TBuilder>(this TBuilder builder, XmlName name) where TBuilder : IXmlBuilder Parameters Type Name Description TBuilder builder XmlName name Returns Type Description TBuilder Type Parameters Name Description TBuilder | Improve this Doc View Source SetNullable<T>(T, Boolean) Declaration public static T SetNullable<T>(this T builder, bool isNullable) where T : IXmlObjectBuilder Parameters Type Name Description T builder Boolean isNullable Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source SetNullValueHandling<T>(T, Nullable<XmlNullValueHandling>) Declaration public static T SetNullValueHandling<T>(this T builder, XmlNullValueHandling? nullValueHandling) where T : IXmlObjectBuilder Parameters Type Name Description T builder Nullable < XmlNullValueHandling > nullValueHandling Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source SetOrder(XmlPropertyBuilder, Int32) Declaration public static XmlPropertyBuilder SetOrder(this XmlPropertyBuilder builder, int order) Parameters Type Name Description XmlPropertyBuilder builder Int32 order Returns Type Description XmlPropertyBuilder | Improve this Doc View Source SetRequired(XmlPropertyBuilder, Boolean) Declaration public static XmlPropertyBuilder SetRequired(this XmlPropertyBuilder builder, bool isRequired = true) Parameters Type Name Description XmlPropertyBuilder builder Boolean isRequired Returns Type Description XmlPropertyBuilder | Improve this Doc View Source SetTypeHandling<TBuilder>(TBuilder, Nullable<XmlTypeHandling>) Declaration public static TBuilder SetTypeHandling<TBuilder>(this TBuilder builder, XmlTypeHandling? typeHandling) where TBuilder : XmlMemberBuilder Parameters Type Name Description TBuilder builder Nullable < XmlTypeHandling > typeHandling Returns Type Description TBuilder Type Parameters Name Description TBuilder"
  },
  "api/DotNetHelper_Serializer.Extension.IDataSourceDBExtension.html": {
    "href": "api/DotNetHelper_Serializer.Extension.IDataSourceDBExtension.html",
    "title": "Class IDataSourceDBExtension | DotNetHelper-Serializer",
    "keywords": "Class IDataSourceDBExtension Inheritance Object IDataSourceDBExtension Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.Extension Assembly : DotNetHelper-Serializer.dll Syntax public static class IDataSourceDBExtension Methods | Improve this Doc View Source BuildDbParameterList<T>(IDataSourceDb, T) Builds the SQL parameter list. Declaration public static List<DbParameter> BuildDbParameterList<T>(this IDataSourceDb database, T poco) where T : class Parameters Type Name Description IDataSourceDb database T poco The poco. Returns Type Description List < DbParameter > List<DbParameter>. Type Parameters Name Description T"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Collections.XmlListConverter.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Collections.XmlListConverter.html",
    "title": "Class XmlListConverter | DotNetHelper-Serializer",
    "keywords": "Class XmlListConverter Inheritance Object XmlConverterFactory XmlListConverter Implements IXmlConverterFactory IXmlConverter Inherited Members XmlConverterFactory.CreateConverter(XmlContract) XmlConverterFactory.CanRead(Type) XmlConverterFactory.CanWrite(Type) XmlConverterFactory.WriteXml(XmlWriter, Object, XmlSerializationContext) XmlConverterFactory.ReadXml(XmlReader, XmlSerializationContext) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters.Collections Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlListConverter : XmlConverterFactory, IXmlConverterFactory, IXmlConverter Methods | Improve this Doc View Source AcceptType(Type) Declaration protected override bool AcceptType(Type valueType) Parameters Type Name Description Type valueType Returns Type Description Boolean Overrides XmlConverterFactory.AcceptType(Type) | Improve this Doc View Source GetConverterType(Type) Declaration protected override Type GetConverterType(Type valueType) Parameters Type Name Description Type valueType Returns Type Description Type Overrides XmlConverterFactory.GetConverterType(Type) Implements IXmlConverterFactory IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlProperty.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlProperty.html",
    "title": "Class XmlProperty | DotNetHelper-Serializer",
    "keywords": "Class XmlProperty Inheritance Object XmlMember XmlProperty Inherited Members XmlMember.ValueType XmlMember.Name XmlMember.MappingType XmlMember.TypeHandling XmlMember.NullValueHandling XmlMember.DefaultValueHandling XmlMember.DefaultValue XmlMember.Item XmlMember.KnownTypes Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts Assembly : DotNetHelper-Serializer.dll Syntax public class XmlProperty : XmlMember Constructors | Improve this Doc View Source XmlProperty(PropertyInfo, XmlName, XmlMappingType, Boolean, Nullable<XmlTypeHandling>, Nullable<XmlNullValueHandling>, Nullable<XmlDefaultValueHandling>, Object, XmlItem, IEnumerable<XmlKnownType>, Boolean, Int32) Declaration public XmlProperty(PropertyInfo propertyInfo, XmlName name, XmlMappingType mappingType = XmlMappingType.Element, bool isRequired = false, XmlTypeHandling? typeHandling = default(XmlTypeHandling? ), XmlNullValueHandling? nullValueHandling = default(XmlNullValueHandling? ), XmlDefaultValueHandling? defaultValueHandling = default(XmlDefaultValueHandling? ), object defaultValue = null, XmlItem item = null, IEnumerable<XmlKnownType> knownTypes = null, bool isCollection = false, int order = -1) Parameters Type Name Description PropertyInfo propertyInfo XmlName name XmlMappingType mappingType Boolean isRequired Nullable < XmlTypeHandling > typeHandling Nullable < XmlNullValueHandling > nullValueHandling Nullable < XmlDefaultValueHandling > defaultValueHandling Object defaultValue XmlItem item IEnumerable < XmlKnownType > knownTypes Boolean isCollection Int32 order Properties | Improve this Doc View Source IsCollection Declaration public bool IsCollection { get; } Property Value Type Description Boolean | Improve this Doc View Source IsRequired Declaration public bool IsRequired { get; } Property Value Type Description Boolean | Improve this Doc View Source Order Declaration public int Order { get; } Property Value Type Description Int32 | Improve this Doc View Source PropertyInfo Declaration public PropertyInfo PropertyInfo { get; } Property Value Type Description PropertyInfo | Improve this Doc View Source PropertyName Declaration public string PropertyName { get; } Property Value Type Description String Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlDefaultValueHandling.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlDefaultValueHandling.html",
    "title": "Enum XmlDefaultValueHandling | DotNetHelper-Serializer",
    "keywords": "Enum XmlDefaultValueHandling Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts Assembly : DotNetHelper-Serializer.dll Syntax public enum XmlDefaultValueHandling Fields Name Description Ignore Include Extension Methods TypeExtension.CanHaveNullValue<XmlDefaultValueHandling>()"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlMemberBuilder.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlMemberBuilder.html",
    "title": "Class XmlMemberBuilder | DotNetHelper-Serializer",
    "keywords": "Class XmlMemberBuilder Inheritance Object XmlMemberBuilder XmlItemBuilder XmlKnownTypeBuilder Implements IXmlBuilder Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders Assembly : DotNetHelper-Serializer.dll Syntax public class XmlMemberBuilder : IXmlBuilder Constructors | Improve this Doc View Source XmlMemberBuilder(Type) Declaration public XmlMemberBuilder(Type valueType) Parameters Type Name Description Type valueType Properties | Improve this Doc View Source Name Declaration public XmlName Name { get; set; } Property Value Type Description XmlName | Improve this Doc View Source TypeHandling Declaration public XmlTypeHandling? TypeHandling { get; set; } Property Value Type Description Nullable < XmlTypeHandling > | Improve this Doc View Source ValueType Declaration public Type ValueType { get; } Property Value Type Description Type Implements IXmlBuilder Extension Methods TypeExtension.CanHaveNullValue<T>(T) XmlBuilderExtensions.SetName<TBuilder>(TBuilder, XmlName) XmlBuilderExtensions.SetTypeHandling<TBuilder>(TBuilder, Nullable<XmlTypeHandling>)"
  },
  "api/DotNetHelper_Serializer.DataSource.DataSourceXml.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.DataSourceXml.html",
    "title": "Class DataSourceXml | DotNetHelper-Serializer",
    "keywords": "Class DataSourceXml Class DataSourceXml. This class cannot be inherited. Inheritance Object DataSourceXml Implements IXmlSerializer DotNetHelper_IO.Interface.ISerializer IConvertible Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource Assembly : DotNetHelper-Serializer.dll Syntax public sealed class DataSourceXml : IXmlSerializer, ISerializer, IConvertible Constructors | Improve this Doc View Source DataSourceXml(DataSourceXml.SettingsType) Initializes a new instance of the DataSourceXml class. Declaration public DataSourceXml(DataSourceXml.SettingsType type) Parameters Type Name Description DataSourceXml.SettingsType type The type. Exceptions Type Condition ArgumentOutOfRangeException type - null | Improve this Doc View Source DataSourceXml(XmlSerializerSettings) Initializes a new instance of the DataSourceXml class. Declaration public DataSourceXml(XmlSerializerSettings settings) Parameters Type Name Description XmlSerializerSettings settings The settings. Exceptions Type Condition ArgumentNullException settings Properties | Improve this Doc View Source Settings Gets or sets the settings. Declaration public XmlSerializerSettings Settings { get; set; } Property Value Type Description XmlSerializerSettings The settings. Methods | Improve this Doc View Source CanDeserialize(Type, Boolean) Determines whether this instance can deserialize the specified value type. Declaration public bool CanDeserialize(Type valueType, bool throwOnCant = false) Parameters Type Name Description Type valueType Type of the value. Boolean throwOnCant if set to true [throw on cant]. Returns Type Description Boolean true if this instance can deserialize the specified value type; otherwise, false . Exceptions Type Condition SerializationException | Improve this Doc View Source CanSerialize(Type, Boolean) Determines whether this instance can serialize the specified value type. Declaration public bool? CanSerialize(Type valueType, bool throwOnCant = false) Parameters Type Name Description Type valueType Type of the value. Boolean throwOnCant if set to true [throw on cant]. Returns Type Description Nullable < Boolean > true if this instance can serialize the specified value type; otherwise, false . Exceptions Type Condition SerializationException | Improve this Doc View Source DeserializeFromFile(String) Declaration public dynamic DeserializeFromFile(string fullFilePath) Parameters Type Name Description String fullFilePath Returns Type Description Object | Improve this Doc View Source DeserializeFromFile(Type, String) Deserializes from file. Declaration public object DeserializeFromFile(Type type, string fullFilePath) Parameters Type Name Description Type type The type. String fullFilePath Returns Type Description Object System.Object. | Improve this Doc View Source DeserializeFromFile<T>(String) Deserializes from file. Declaration public T DeserializeFromFile<T>(string file) where T : class Parameters Type Name Description String file The file. Returns Type Description T T. Type Parameters Name Description T | Improve this Doc View Source DeserializeFromStream(Stream, Type) Deserializes from stream. Declaration public object DeserializeFromStream(Stream stream, Type type) Parameters Type Name Description Stream stream The stream. Type type The type. Returns Type Description Object System.Object. | Improve this Doc View Source DeserializeFromStream<T>(Stream) Deserializes from stream. Declaration public T DeserializeFromStream<T>(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description T ``0. Type Parameters Name Description T | Improve this Doc View Source DeserializeFromString(String, Type) Deserializes from string. Declaration public object DeserializeFromString(string content, Type type) Parameters Type Name Description String content The content. Type type The type. Returns Type Description Object System.Object. | Improve this Doc View Source DeserializeFromString<T>(String) Deserializes from string. Declaration public T DeserializeFromString<T>(string text) where T : class Parameters Type Name Description String text The text. Returns Type Description T T. Type Parameters Name Description T | Improve this Doc View Source DeserializeListFromFile(String) Declaration public IEnumerable<dynamic> DeserializeListFromFile(string fullFilePath) Parameters Type Name Description String fullFilePath Returns Type Description IEnumerable < Object > | Improve this Doc View Source DeserializeListFromFile<T>(String) Declaration public IEnumerable<T> DeserializeListFromFile<T>(string fullFilePath) where T : class Parameters Type Name Description String fullFilePath Returns Type Description IEnumerable <T> Type Parameters Name Description T | Improve this Doc View Source DeserializeToCSharpClass(String, String) Deserializes to c sharp class. Declaration public string DeserializeToCSharpClass(string xml, string className = null) Parameters Type Name Description String xml The XML. String className Name of the class. Returns Type Description String System.String. | Improve this Doc View Source DeserializeToList(String) Declaration public IEnumerable<dynamic> DeserializeToList(string xml) Parameters Type Name Description String xml Returns Type Description IEnumerable < Object > | Improve this Doc View Source DeserializeToList<T>(String) Deserializes from string. Declaration public List<T> DeserializeToList<T>(string content) where T : class Parameters Type Name Description String content The content. Returns Type Description List <T> List Of T Type Parameters Name Description T | Improve this Doc View Source GetTypeCode() Declaration public TypeCode GetTypeCode() Returns Type Description TypeCode | Improve this Doc View Source GetXmlFromDocument(XDocument) Gets the XML from document. Declaration public string GetXmlFromDocument(XDocument document) Parameters Type Name Description XDocument document The document. Returns Type Description String System.String. | Improve this Doc View Source GetXmlFromDocument(XmlDocument) Gets the XML from document. Declaration public string GetXmlFromDocument(XmlDocument document) Parameters Type Name Description XmlDocument document The document. Returns Type Description String System.String. | Improve this Doc View Source SerializeToFile(Object, String, FileOption) Declaration public void SerializeToFile(dynamic obj, string fullFilePath, FileOption mode) Parameters Type Name Description Object obj String fullFilePath DotNetHelper_Contracts.Enum.IO.FileOption mode | Improve this Doc View Source SerializeToFile(Object, Type, String, FileOption) Serializes to file. Declaration public void SerializeToFile(object obj, Type type, string fullFilePath, FileOption option) Parameters Type Name Description Object obj The object. Type type The type. String fullFilePath The full file path. DotNetHelper_Contracts.Enum.IO.FileOption option The option. | Improve this Doc View Source SerializeToFile<T>(T, String, FileOption) Serializes to file. Declaration public void SerializeToFile<T>(T obj, string file, FileOption mode) where T : class Parameters Type Name Description T obj The object. String file The file. DotNetHelper_Contracts.Enum.IO.FileOption mode The mode. Type Parameters Name Description T | Improve this Doc View Source SerializeToFile<T>(IEnumerable<T>, String, FileOption) Serializes to file. Declaration public void SerializeToFile<T>(IEnumerable<T> list, string fullFilePath, FileOption option) where T : class Parameters Type Name Description IEnumerable <T> list The list. String fullFilePath The full file path. DotNetHelper_Contracts.Enum.IO.FileOption option The option. Type Parameters Name Description T | Improve this Doc View Source SerializeToJson(String, IJsonSerializer) Serializes to json. Declaration public string SerializeToJson(string xml, IJsonSerializer jsonSerializer) Parameters Type Name Description String xml The XML. IJsonSerializer jsonSerializer The json serializer. Returns Type Description String System.String. | Improve this Doc View Source SerializeToStream(Object, Type, Stream, Int32, Boolean) Serializes to stream. Declaration public void SerializeToStream(object obj, Type type, Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) Parameters Type Name Description Object obj The obj. Type type The type. Stream stream The stream. Int32 bufferSize Boolean leaveStreamOpen | Improve this Doc View Source SerializeToStream<T>(T, Stream, Int32, Boolean) Serializes to stream. Declaration public void SerializeToStream<T>(T obj, Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) where T : class Parameters Type Name Description T obj The obj. Stream stream The stream. Int32 bufferSize Boolean leaveStreamOpen Type Parameters Name Description T | Improve this Doc View Source SerializeToString(Object) Serializes to string. Declaration public string SerializeToString(object obj) Parameters Type Name Description Object obj The obj. Returns Type Description String System.String. | Improve this Doc View Source SerializeToString<T>(T) Serializes to string. Declaration public string SerializeToString<T>(T obj) where T : class Parameters Type Name Description T obj The obj. Returns Type Description String System.String. Type Parameters Name Description T | Improve this Doc View Source SerializeToTextWriter(TextWriter, Type, Object) Serializes to text writer. Declaration public void SerializeToTextWriter(TextWriter output, Type valueType, object value) Parameters Type Name Description TextWriter output The output. Type valueType Type of the value. Object value The value. | Improve this Doc View Source SerializeToTextWriter<T>(TextWriter, T) Serializes to text writer. Declaration public void SerializeToTextWriter<T>(TextWriter output, T value) where T : class Parameters Type Name Description TextWriter output The output. T value The value. Type Parameters Name Description T | Improve this Doc View Source SerializeToXmlWriter(XmlWriter, Type, Object) Serializes to XML writer. Declaration public void SerializeToXmlWriter(XmlWriter writer, Type valueType, object value) Parameters Type Name Description XmlWriter writer The writer. Type valueType Type of the value. Object value The value. | Improve this Doc View Source SerializeToXmlWriter<T>(XmlWriter, T) Serializes to XML writer. Declaration public void SerializeToXmlWriter<T>(XmlWriter writer, T value) where T : class Parameters Type Name Description XmlWriter writer The writer. T value The value. Type Parameters Name Description T | Improve this Doc View Source ToBoolean(IFormatProvider) Declaration public bool ToBoolean(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Boolean | Improve this Doc View Source ToByte(IFormatProvider) Declaration public byte ToByte(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Byte | Improve this Doc View Source ToChar(IFormatProvider) Declaration public char ToChar(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Char | Improve this Doc View Source ToDateTime(IFormatProvider) Declaration public DateTime ToDateTime(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description DateTime | Improve this Doc View Source ToDecimal(IFormatProvider) Declaration public decimal ToDecimal(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Decimal | Improve this Doc View Source ToDouble(IFormatProvider) Declaration public double ToDouble(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Double | Improve this Doc View Source ToInt16(IFormatProvider) Declaration public short ToInt16(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Int16 | Improve this Doc View Source ToInt32(IFormatProvider) Declaration public int ToInt32(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Int32 | Improve this Doc View Source ToInt64(IFormatProvider) Declaration public long ToInt64(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Int64 | Improve this Doc View Source ToSByte(IFormatProvider) Declaration public sbyte ToSByte(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description SByte | Improve this Doc View Source ToSingle(IFormatProvider) Declaration public float ToSingle(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Single | Improve this Doc View Source ToString(IFormatProvider) Declaration public string ToString(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description String | Improve this Doc View Source ToType(Type, IFormatProvider) Declaration public object ToType(Type conversionType, IFormatProvider provider) Parameters Type Name Description Type conversionType IFormatProvider provider Returns Type Description Object | Improve this Doc View Source ToUInt16(IFormatProvider) Declaration public ushort ToUInt16(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description UInt16 | Improve this Doc View Source ToUInt32(IFormatProvider) Declaration public uint ToUInt32(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description UInt32 | Improve this Doc View Source ToUInt64(IFormatProvider) Declaration public ulong ToUInt64(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description UInt64 | Improve this Doc View Source XmlStringToXDocument(String) XMLs the string to x document. Declaration public XDocument XmlStringToXDocument(string xml) Parameters Type Name Description String xml The XML. Returns Type Description XDocument XDocument. | Improve this Doc View Source XmlStringToXmlDocument(String) XMLs the string to XML document. Declaration public XmlDocument XmlStringToXmlDocument(string xml) Parameters Type Name Description String xml The XML. Returns Type Description XmlDocument XmlDocument. Implements IXmlSerializer DotNetHelper_IO.Interface.ISerializer System.IConvertible Extension Methods TypeExtension.CanHaveNullValue<T>(T) See Also IXmlSerializer"
  },
  "api/DotNetHelper_Serializer.Model.LogObject.html": {
    "href": "api/DotNetHelper_Serializer.Model.LogObject.html",
    "title": "Class LogObject | DotNetHelper-Serializer",
    "keywords": "Class LogObject An Log Object Thats Used To Store Errors In Database Inheritance Object LogObject Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.Model Assembly : DotNetHelper-Serializer.dll Syntax public class LogObject Constructors | Improve this Doc View Source LogObject(String) Declaration public LogObject(string logs) Parameters Type Name Description String logs Fields | Improve this Doc View Source LogTime Declaration public DateTime LogTime Field Value Type Description DateTime | Improve this Doc View Source LogTimeUtc Declaration public DateTime LogTimeUtc Field Value Type Description DateTime Properties | Improve this Doc View Source ApplicationName Declaration public string ApplicationName { get; set; } Property Value Type Description String | Improve this Doc View Source DeviceId Declaration public string DeviceId { get; set; } Property Value Type Description String | Improve this Doc View Source DeviceModel Declaration public string DeviceModel { get; set; } Property Value Type Description String | Improve this Doc View Source ExceptionType Declaration public string ExceptionType { get; set; } Property Value Type Description String | Improve this Doc View Source Id Declaration public int Id { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Message Declaration public string Message { get; set; } Property Value Type Description String | Improve this Doc View Source Platform Declaration public string Platform { get; set; } Property Value Type Description String | Improve this Doc View Source Version Declaration public string Version { get; set; } Property Value Type Description String Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.Helper.ObjectToSqlHelper.html": {
    "href": "api/DotNetHelper_Serializer.Helper.ObjectToSqlHelper.html",
    "title": "Class ObjectToSqlHelper | DotNetHelper-Serializer",
    "keywords": "Class ObjectToSqlHelper Inheritance Object ObjectToSqlHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.Helper Assembly : DotNetHelper-Serializer.dll Syntax public class ObjectToSqlHelper Constructors | Improve this Doc View Source ObjectToSqlHelper(DataBaseType) Declaration public ObjectToSqlHelper(DataBaseType type) Parameters Type Name Description DotNetHelper_Contracts.Enum.DataSource.DataBaseType type Properties | Improve this Doc View Source DatabaseType Declaration public DataBaseType DatabaseType { get; } Property Value Type Description DotNetHelper_Contracts.Enum.DataSource.DataBaseType Methods | Improve this Doc View Source BuildDbParameterList<T>(T, Func<String, Object, DbParameter>, IXmlSerializer, IJsonSerializer, ICsvSerializer) Builds the SQL parameter list. Declaration public List<DbParameter> BuildDbParameterList<T>(T poco, Func<string, object, DbParameter> GetNewParameter, IXmlSerializer XmlSerializer, IJsonSerializer JsonSerializer, ICsvSerializer CsvSerializer) where T : class Parameters Type Name Description T poco The poco. Func < String , Object , DbParameter > GetNewParameter IXmlSerializer XmlSerializer IJsonSerializer JsonSerializer ICsvSerializer CsvSerializer Returns Type Description List < DbParameter > List<DbParameter>. Type Parameters Name Description T | Improve this Doc View Source BuildDeleteQuery<T>(StringBuilder, String, T, Expression<Func<T, Object>>) Builds the delete query. Declaration public void BuildDeleteQuery<T>(StringBuilder sqlBuilder, string tableName, T poco, Expression<Func<T, object>> overrideKeys) where T : class Parameters Type Name Description StringBuilder sqlBuilder The SQL builder. String tableName Name of the table. T poco The poco. Expression < Func <T, Object >> overrideKeys Type Parameters Name Description T | Improve this Doc View Source BuildGetQuery(StringBuilder, String, String) Builds the get query. Declaration public void BuildGetQuery(StringBuilder sqlBuilder, string tableName, string whereClause) Parameters Type Name Description StringBuilder sqlBuilder The SQL builder. String tableName Name of the table. String whereClause The where clause. | Improve this Doc View Source BuildGetQuery<T>(StringBuilder, String, String) Builds the get query. Declaration public void BuildGetQuery<T>(StringBuilder sqlBuilder, string tableName, string whereClause) where T : class Parameters Type Name Description StringBuilder sqlBuilder The SQL builder. String tableName Name of the table. String whereClause The where clause. Type Parameters Name Description T | Improve this Doc View Source BuildInsertQuery<T>(StringBuilder, String, T, Expression<Func<T, Object>>) Builds the insert query. Declaration public void BuildInsertQuery<T>(StringBuilder sqlBuilder, string tableName, T poco, Expression<Func<T, object>> overrideKeys) where T : class Parameters Type Name Description StringBuilder sqlBuilder The SQL builder. String tableName Name of the table. T poco The poco. Expression < Func <T, Object >> overrideKeys Type Parameters Name Description T | Improve this Doc View Source BuildInsertQueryWithOutputs<T>(StringBuilder, String) Builds the insert query and return the expression. Declaration public void BuildInsertQueryWithOutputs<T>(StringBuilder sqlBuilder, string tableName) where T : class Parameters Type Name Description StringBuilder sqlBuilder The SQL builder. String tableName Name of the table. Type Parameters Name Description T | Improve this Doc View Source BuildInsertQueryWithOutputs<T>(StringBuilder, String, Expression<Func<T, Object>>) Builds the insert query and return the expression. Declaration public void BuildInsertQueryWithOutputs<T>(StringBuilder sqlBuilder, string tableName, Expression<Func<T, object>> expression) where T : class Parameters Type Name Description StringBuilder sqlBuilder The SQL builder. String tableName Name of the table. Expression < Func <T, Object >> expression Type Parameters Name Description T | Improve this Doc View Source BuildUpdateQuery<T>(StringBuilder, String, T, Expression<Func<T, Object>>) Builds the update query. Declaration public void BuildUpdateQuery<T>(StringBuilder sqlBuilder, string tableName, T poco, Expression<Func<T, object>> overrideKeys) where T : class Parameters Type Name Description StringBuilder sqlBuilder The SQL builder. String tableName Name of the table. T poco The poco. Expression < Func <T, Object >> overrideKeys Type Parameters Name Description T | Improve this Doc View Source BuildUpsertQuery<T>(StringBuilder, String, T, Expression<Func<T, Object>>) Builds the upsert query. Declaration public void BuildUpsertQuery<T>(StringBuilder sqlBuilder, string tableName, T poco, Expression<Func<T, object>> overrideKeys) where T : class Parameters Type Name Description StringBuilder sqlBuilder The SQL builder. String tableName Name of the table. T poco The poco. Expression < Func <T, Object >> overrideKeys Type Parameters Name Description T | Improve this Doc View Source BuildWhereClause(Func<String, Object, DbParameter>, ExpandoObject, String) Declaration public Tuple<List<DbParameter>, string> BuildWhereClause(Func<string, object, DbParameter> GetNewParameter, ExpandoObject parameters, string additionalWhere = null) Parameters Type Name Description Func < String , Object , DbParameter > GetNewParameter ExpandoObject parameters String additionalWhere Returns Type Description Tuple < List < DbParameter >, String > | Improve this Doc View Source BuildWhereClause(StringBuilder, List<AdvanceMember>, Boolean) Declaration public void BuildWhereClause(StringBuilder sqlBuilder, List<AdvanceMember> keyFields, bool throwOnNoAttributes) Parameters Type Name Description StringBuilder sqlBuilder List < AdvanceMember > keyFields Boolean throwOnNoAttributes | Improve this Doc View Source BuildWhereClauseAndGeDbParameters(Func<String, Object, DbParameter>, StringBuilder, List<AdvanceMember>, Boolean) Declaration public List<DbParameter> BuildWhereClauseAndGeDbParameters(Func<string, object, DbParameter> GetNewParameter, StringBuilder sqlBuilder, List<AdvanceMember> keyFields, bool throwOnNoAttributes) Parameters Type Name Description Func < String , Object , DbParameter > GetNewParameter StringBuilder sqlBuilder List < AdvanceMember > keyFields Boolean throwOnNoAttributes Returns Type Description List < DbParameter > | Improve this Doc View Source ConvertToDatabaseValue(DynamicMember, Object) Converts to database value. Declaration public object ConvertToDatabaseValue(DynamicMember member, object value) Parameters Type Name Description DynamicMember member The member. Object value The value. Returns Type Description Object System.Object. | Improve this Doc View Source GetAllNonIgnoreFields(Type) Gets all non ignore fields. Declaration public List<AdvanceMember> GetAllNonIgnoreFields(Type type) Parameters Type Name Description Type type Returns Type Description List < AdvanceMember > List<AdvanceMember>. | Improve this Doc View Source GetAllNonIgnoreFields<T>() Gets all non ignore fields. Declaration public List<AdvanceMember> GetAllNonIgnoreFields<T>() where T : class Returns Type Description List < AdvanceMember > List<AdvanceMember>. Type Parameters Name Description T | Improve this Doc View Source GetKeyFields(Type) Gets the key fields. Declaration public List<AdvanceMember> GetKeyFields(Type type) Parameters Type Name Description Type type Returns Type Description List < AdvanceMember > List<AdvanceMember>. | Improve this Doc View Source GetKeyFields<T>(T) Gets the key fields. Declaration public List<AdvanceMember> GetKeyFields<T>(T poco = null) where T : class Parameters Type Name Description T poco Returns Type Description List < AdvanceMember > List<AdvanceMember>. Type Parameters Name Description T | Improve this Doc View Source GetNonIdentityFields<T>(T) Gets the non identity fields. Declaration public static List<AdvanceMember> GetNonIdentityFields<T>(T poco = null) where T : class Parameters Type Name Description T poco Returns Type Description List < AdvanceMember > List<AdvanceMember>. Type Parameters Name Description T | Improve this Doc View Source GetNonKeyFields<T>(T) Gets the non key fields. Declaration public List<AdvanceMember> GetNonKeyFields<T>(T poco = null) where T : class Parameters Type Name Description T poco Returns Type Description List < AdvanceMember > List<AdvanceMember>. Type Parameters Name Description T Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.Extension.html": {
    "href": "api/DotNetHelper_Serializer.Extension.html",
    "title": "Namespace DotNetHelper_Serializer.Extension | DotNetHelper-Serializer",
    "keywords": "Namespace DotNetHelper_Serializer.Extension Classes AdvanceMember DynamicMember ExtDataReader ExtDataTable ExtDictonary ExtFastMember ExtString IDataSourceDBExtension TypeExtension TypeExtension.New<T> Enums DataTypes"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlKnownTypeBuilderCollection.html",
    "title": "Class XmlKnownTypeBuilderCollection | DotNetHelper-Serializer",
    "keywords": "Class XmlKnownTypeBuilderCollection Inheritance Object XmlKnownTypeBuilderCollection Implements IEnumerable < XmlKnownTypeBuilder > IEnumerable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlKnownTypeBuilderCollection : IEnumerable<XmlKnownTypeBuilder>, IEnumerable Constructors | Improve this Doc View Source XmlKnownTypeBuilderCollection() Declaration public XmlKnownTypeBuilderCollection() | Improve this Doc View Source XmlKnownTypeBuilderCollection(IEnumerable<XmlKnownTypeBuilder>) Declaration public XmlKnownTypeBuilderCollection(IEnumerable<XmlKnownTypeBuilder> items) Parameters Type Name Description IEnumerable < XmlKnownTypeBuilder > items Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source Add(XmlKnownTypeBuilder) Declaration public void Add(XmlKnownTypeBuilder item) Parameters Type Name Description XmlKnownTypeBuilder item | Improve this Doc View Source Add(Type, XmlName) Declaration public void Add(Type valueType, XmlName name) Parameters Type Name Description Type valueType XmlName name | Improve this Doc View Source Build() Declaration public IEnumerable<XmlKnownType> Build() Returns Type Description IEnumerable < XmlKnownType > | Improve this Doc View Source Contains(Type) Declaration public bool Contains(Type valueType) Parameters Type Name Description Type valueType Returns Type Description Boolean | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<XmlKnownTypeBuilder> GetEnumerator() Returns Type Description IEnumerator < XmlKnownTypeBuilder > | Improve this Doc View Source Remove(Type) Declaration public bool Remove(Type valueType) Parameters Type Name Description Type valueType Returns Type Description Boolean | Improve this Doc View Source Set(XmlKnownTypeBuilder) Declaration public void Set(XmlKnownTypeBuilder item) Parameters Type Name Description XmlKnownTypeBuilder item Explicit Interface Implementations | Improve this Doc View Source IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator Implements System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlItemBuilder.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlItemBuilder.html",
    "title": "Class XmlItemBuilder | DotNetHelper-Serializer",
    "keywords": "Class XmlItemBuilder Inheritance Object XmlMemberBuilder XmlItemBuilder XmlPropertyBuilder Implements IXmlBuilder Inherited Members XmlMemberBuilder.ValueType XmlMemberBuilder.Name XmlMemberBuilder.TypeHandling Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders Assembly : DotNetHelper-Serializer.dll Syntax public class XmlItemBuilder : XmlMemberBuilder, IXmlBuilder Constructors | Improve this Doc View Source XmlItemBuilder(Type) Declaration public XmlItemBuilder(Type valueType) Parameters Type Name Description Type valueType Properties | Improve this Doc View Source KnownTypes Declaration public XmlKnownTypeBuilderCollection KnownTypes { get; set; } Property Value Type Description XmlKnownTypeBuilderCollection Methods | Improve this Doc View Source Build() Declaration public XmlItem Build() Returns Type Description XmlItem | Improve this Doc View Source Create(XmlItem) Declaration public static XmlItemBuilder Create(XmlItem item) Parameters Type Name Description XmlItem item Returns Type Description XmlItemBuilder Implements IXmlBuilder Extension Methods TypeExtension.CanHaveNullValue<T>(T) XmlBuilderExtensions.SetName<TBuilder>(TBuilder, XmlName) XmlBuilderExtensions.SetTypeHandling<TBuilder>(TBuilder, Nullable<XmlTypeHandling>) XmlBuilderExtensions.SetKnownType<TBuilder>(TBuilder, Type, XmlName) XmlBuilderExtensions.SetKnownType<TBuilder>(TBuilder, Type, Action<XmlKnownTypeBuilder>) XmlBuilderExtensions.SetKnownType<T>(XmlItemBuilder, XmlName) XmlBuilderExtensions.SetKnownType<T>(XmlItemBuilder, Action<XmlKnownTypeBuilder>) XmlBuilderExtensions.RemoveKnownType<TBuilder>(TBuilder, Type)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlSingleConverter.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlSingleConverter.html",
    "title": "Class XmlSingleConverter | DotNetHelper-Serializer",
    "keywords": "Class XmlSingleConverter Inheritance Object XmlConverter < Single > XmlBasicConverter < Single > XmlBasicRawConverter < Single > XmlSingleConverter Implements IXmlConverter Inherited Members XmlBasicRawConverter<Single>.WriteXml(XmlWriter, Object, XmlSerializationContext) XmlBasicConverter<Single>.ReadXml(XmlReader, XmlSerializationContext) XmlConverter<Single>.CanRead(Type) XmlConverter<Single>.CanWrite(Type) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters.Basics Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlSingleConverter : XmlBasicRawConverter<float>, IXmlConverter Methods | Improve this Doc View Source Parse(String, XmlSerializationContext) Declaration protected override float Parse(string value, XmlSerializationContext context) Parameters Type Name Description String value XmlSerializationContext context Returns Type Description Single Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.Single>.Parse(System.String, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) | Improve this Doc View Source ToString(Single, XmlSerializationContext) Declaration protected override string ToString(float value, XmlSerializationContext context) Parameters Type Name Description Single value XmlSerializationContext context Returns Type Description String Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.Single>.ToString(System.Single, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) Implements IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.Interface.IXmlSerializer.html": {
    "href": "api/DotNetHelper_Serializer.Interface.IXmlSerializer.html",
    "title": "Interface IXmlSerializer | DotNetHelper-Serializer",
    "keywords": "Interface IXmlSerializer Inherited Members DotNetHelper_IO.Interface.ISerializer.SerializeToStream<T>(T, System.IO.Stream, System.Int32, System.Boolean) DotNetHelper_IO.Interface.ISerializer.SerializeToStream(System.Object, System.Type, System.IO.Stream, System.Int32, System.Boolean) DotNetHelper_IO.Interface.ISerializer.SerializeToFile<T>(T, System.String, DotNetHelper_Contracts.Enum.IO.FileOption) DotNetHelper_IO.Interface.ISerializer.SerializeToFile<T>(System.Collections.Generic.IEnumerable<T>, System.String, DotNetHelper_Contracts.Enum.IO.FileOption) DotNetHelper_IO.Interface.ISerializer.SerializeToFile(System.Object, System.Type, System.String, DotNetHelper_Contracts.Enum.IO.FileOption) DotNetHelper_IO.Interface.ISerializer.SerializeToFile(System.Object, System.String, DotNetHelper_Contracts.Enum.IO.FileOption) DotNetHelper_IO.Interface.ISerializer.SerializeToString(System.Object) DotNetHelper_IO.Interface.ISerializer.SerializeToString<T>(T) DotNetHelper_IO.Interface.ISerializer.DeserializeFromFile(System.Type, System.String) DotNetHelper_IO.Interface.ISerializer.DeserializeFromFile<T>(System.String) DotNetHelper_IO.Interface.ISerializer.DeserializeFromFile(System.String) DotNetHelper_IO.Interface.ISerializer.DeserializeListFromFile(System.String) DotNetHelper_IO.Interface.ISerializer.DeserializeToList(System.String) DotNetHelper_IO.Interface.ISerializer.DeserializeListFromFile<T>(System.String) DotNetHelper_IO.Interface.ISerializer.DeserializeFromStream<T>(System.IO.Stream) DotNetHelper_IO.Interface.ISerializer.DeserializeFromStream(System.IO.Stream, System.Type) DotNetHelper_IO.Interface.ISerializer.DeserializeFromString<T>(System.String) DotNetHelper_IO.Interface.ISerializer.DeserializeToList<T>(System.String) DotNetHelper_IO.Interface.ISerializer.DeserializeFromString(System.String, System.Type) DotNetHelper_IO.Interface.ISerializer.DeserializeToCSharpClass(System.String, System.String) IConvertible.GetTypeCode() IConvertible.ToBoolean(IFormatProvider) IConvertible.ToChar(IFormatProvider) IConvertible.ToSByte(IFormatProvider) IConvertible.ToByte(IFormatProvider) IConvertible.ToInt16(IFormatProvider) IConvertible.ToUInt16(IFormatProvider) IConvertible.ToInt32(IFormatProvider) IConvertible.ToUInt32(IFormatProvider) IConvertible.ToInt64(IFormatProvider) IConvertible.ToUInt64(IFormatProvider) IConvertible.ToSingle(IFormatProvider) IConvertible.ToDouble(IFormatProvider) IConvertible.ToDecimal(IFormatProvider) IConvertible.ToDateTime(IFormatProvider) IConvertible.ToString(IFormatProvider) IConvertible.ToType(Type, IFormatProvider) Namespace : DotNetHelper_Serializer.Interface Assembly : DotNetHelper-Serializer.dll Syntax public interface IXmlSerializer : ISerializer, IConvertible Properties | Improve this Doc View Source Settings Declaration XmlSerializerSettings Settings { get; set; } Property Value Type Description XmlSerializerSettings Methods | Improve this Doc View Source CanDeserialize(Type, Boolean) Declaration bool CanDeserialize(Type valueType, bool throwOnCant = false) Parameters Type Name Description Type valueType Boolean throwOnCant Returns Type Description Boolean | Improve this Doc View Source CanSerialize(Type, Boolean) Declaration bool? CanSerialize(Type valueType, bool throwOnCant = false) Parameters Type Name Description Type valueType Boolean throwOnCant Returns Type Description Nullable < Boolean > | Improve this Doc View Source GetXmlFromDocument(XDocument) Declaration string GetXmlFromDocument(XDocument document) Parameters Type Name Description XDocument document Returns Type Description String | Improve this Doc View Source GetXmlFromDocument(XmlDocument) Declaration string GetXmlFromDocument(XmlDocument document) Parameters Type Name Description XmlDocument document Returns Type Description String | Improve this Doc View Source SerializeToJson(String, IJsonSerializer) Declaration string SerializeToJson(string xml, IJsonSerializer jsonSerializer) Parameters Type Name Description String xml IJsonSerializer jsonSerializer Returns Type Description String | Improve this Doc View Source SerializeToTextWriter(TextWriter, Type, Object) Declaration void SerializeToTextWriter(TextWriter output, Type valueType, object value) Parameters Type Name Description TextWriter output Type valueType Object value | Improve this Doc View Source SerializeToTextWriter<T>(TextWriter, T) Declaration void SerializeToTextWriter<T>(TextWriter output, T value) where T : class Parameters Type Name Description TextWriter output T value Type Parameters Name Description T | Improve this Doc View Source SerializeToXmlWriter(XmlWriter, Type, Object) Declaration void SerializeToXmlWriter(XmlWriter writer, Type valueType, object value) Parameters Type Name Description XmlWriter writer Type valueType Object value | Improve this Doc View Source SerializeToXmlWriter<T>(XmlWriter, T) Declaration void SerializeToXmlWriter<T>(XmlWriter writer, T value) where T : class Parameters Type Name Description XmlWriter writer T value Type Parameters Name Description T | Improve this Doc View Source XmlStringToXDocument(String) Declaration XDocument XmlStringToXDocument(string xml) Parameters Type Name Description String xml Returns Type Description XDocument | Improve this Doc View Source XmlStringToXmlDocument(String) Declaration XmlDocument XmlStringToXmlDocument(string xml) Parameters Type Name Description String xml Returns Type Description XmlDocument Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.Extension.AdvanceMember.html": {
    "href": "api/DotNetHelper_Serializer.Extension.AdvanceMember.html",
    "title": "Class AdvanceMember | DotNetHelper-Serializer",
    "keywords": "Class AdvanceMember Inheritance Object AdvanceMember Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.Extension Assembly : DotNetHelper-Serializer.dll Syntax public class AdvanceMember Properties | Improve this Doc View Source FastMember Declaration public Member FastMember { get; } Property Value Type Description FastMember.Member | Improve this Doc View Source Member Declaration public DynamicMember Member { get; } Property Value Type Description DynamicMember | Improve this Doc View Source SqlCustomAttritube Declaration public SqlColumnAttritube SqlCustomAttritube { get; set; } Property Value Type Description SqlColumnAttritube | Improve this Doc View Source SqlTableAttritube Declaration public SqlTableAttritube SqlTableAttritube { get; set; } Property Value Type Description SqlTableAttritube | Improve this Doc View Source Validation Declaration public DataValidationAttritube Validation { get; set; } Property Value Type Description DataValidationAttritube | Improve this Doc View Source Value Declaration public object Value { get; set; } Property Value Type Description Object Extension Methods ExtFastMember.GetActualMemberName(AdvanceMember) TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.html",
    "title": "Namespace DotNetHelper_Serializer.DataSource | DotNetHelper-Serializer",
    "keywords": "Namespace DotNetHelper_Serializer.DataSource Classes DataSourceBinary DataSourceCsv Class DataSourceCsv. This class cannot be inherited. DataSourceDb DataSourceJson DataSourceXml Class DataSourceXml. This class cannot be inherited. Enums DataSourceXml.SettingsType Enum SettingsType DataSourceXml.XmlOptions Enum XmlOptions Delegates DataSourceDb.SqlExceptionEventHandler"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.XmlConverter-1.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.XmlConverter-1.html",
    "title": "Class XmlConverter<T> | DotNetHelper-Serializer",
    "keywords": "Class XmlConverter<T> Inheritance Object XmlConverter<T> XmlByteArrayConverter XmlBasicConverter<T> Implements IXmlConverter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters Assembly : DotNetHelper-Serializer.dll Syntax public abstract class XmlConverter<T> : IXmlConverter Type Parameters Name Description T Methods | Improve this Doc View Source CanRead(Type) Declaration public bool CanRead(Type valueType) Parameters Type Name Description Type valueType Returns Type Description Boolean | Improve this Doc View Source CanWrite(Type) Declaration public bool CanWrite(Type valueType) Parameters Type Name Description Type valueType Returns Type Description Boolean | Improve this Doc View Source ReadXml(XmlReader, XmlSerializationContext) Declaration public abstract object ReadXml(XmlReader reader, XmlSerializationContext context) Parameters Type Name Description XmlReader reader XmlSerializationContext context Returns Type Description Object | Improve this Doc View Source WriteXml(XmlWriter, Object, XmlSerializationContext) Declaration public abstract void WriteXml(XmlWriter writer, object value, XmlSerializationContext context) Parameters Type Name Description XmlWriter writer Object value XmlSerializationContext context Implements IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlContractBuilderExtensions.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlContractBuilderExtensions.html",
    "title": "Class XmlContractBuilderExtensions | DotNetHelper-Serializer",
    "keywords": "Class XmlContractBuilderExtensions Inheritance Object XmlContractBuilderExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders Assembly : DotNetHelper-Serializer.dll Syntax public static class XmlContractBuilderExtensions Methods | Improve this Doc View Source RemoveItem<TBuilder>(TBuilder, Int64) Declaration public static TBuilder RemoveItem<TBuilder>(this TBuilder builder, long value) where TBuilder : XmlEnumContractBuilder Parameters Type Name Description TBuilder builder Int64 value Returns Type Description TBuilder Type Parameters Name Description TBuilder | Improve this Doc View Source RemoveItem<T>(XmlEnumContractBuilder<T>, T) Declaration public static XmlEnumContractBuilder<T> RemoveItem<T>(this XmlEnumContractBuilder<T> builder, T value) where T : struct, IConvertible Parameters Type Name Description XmlEnumContractBuilder <T> builder T value Returns Type Description XmlEnumContractBuilder <T> Type Parameters Name Description T | Improve this Doc View Source RemoveProperty<TBuilder>(TBuilder, String) Declaration public static TBuilder RemoveProperty<TBuilder>(this TBuilder builder, string propertyName) where TBuilder : XmlObjectContractBuilder Parameters Type Name Description TBuilder builder String propertyName Returns Type Description TBuilder Type Parameters Name Description TBuilder | Improve this Doc View Source RemoveProperty<T, TProperty>(XmlObjectContractBuilder<T>, Expression<Func<T, TProperty>>) Declaration public static XmlObjectContractBuilder<T> RemoveProperty<T, TProperty>(this XmlObjectContractBuilder<T> builder, Expression<Func<T, TProperty>> expression) Parameters Type Name Description XmlObjectContractBuilder <T> builder Expression < Func <T, TProperty>> expression Returns Type Description XmlObjectContractBuilder <T> Type Parameters Name Description T TProperty | Improve this Doc View Source SetItem<TBuilder>(TBuilder, XmlEnumItem) Declaration public static TBuilder SetItem<TBuilder>(this TBuilder builder, XmlEnumItem item) where TBuilder : XmlEnumContractBuilder Parameters Type Name Description TBuilder builder XmlEnumItem item Returns Type Description TBuilder Type Parameters Name Description TBuilder | Improve this Doc View Source SetItem<TBuilder>(TBuilder, Int64, String) Declaration public static TBuilder SetItem<TBuilder>(this TBuilder builder, long value, string name) where TBuilder : XmlEnumContractBuilder Parameters Type Name Description TBuilder builder Int64 value String name Returns Type Description TBuilder Type Parameters Name Description TBuilder | Improve this Doc View Source SetItem<T>(XmlEnumContractBuilder<T>, T, String) Declaration public static XmlEnumContractBuilder<T> SetItem<T>(this XmlEnumContractBuilder<T> builder, T value, string name) where T : struct, IConvertible Parameters Type Name Description XmlEnumContractBuilder <T> builder T value String name Returns Type Description XmlEnumContractBuilder <T> Type Parameters Name Description T | Improve this Doc View Source SetProperty<TBuilder>(TBuilder, String, XmlName, XmlMappingType) Declaration public static TBuilder SetProperty<TBuilder>(this TBuilder builder, string propertyName, XmlName name = null, XmlMappingType mappingType = XmlMappingType.Element) where TBuilder : XmlObjectContractBuilder Parameters Type Name Description TBuilder builder String propertyName XmlName name XmlMappingType mappingType Returns Type Description TBuilder Type Parameters Name Description TBuilder | Improve this Doc View Source SetProperty<TBuilder>(TBuilder, String, Action<XmlPropertyBuilder>) Declaration public static TBuilder SetProperty<TBuilder>(this TBuilder builder, string propertyName, Action<XmlPropertyBuilder> build) where TBuilder : XmlObjectContractBuilder Parameters Type Name Description TBuilder builder String propertyName Action < XmlPropertyBuilder > build Returns Type Description TBuilder Type Parameters Name Description TBuilder | Improve this Doc View Source SetProperty<T, TProperty>(XmlObjectContractBuilder<T>, Expression<Func<T, TProperty>>, XmlName, XmlMappingType) Declaration public static XmlObjectContractBuilder<T> SetProperty<T, TProperty>(this XmlObjectContractBuilder<T> builder, Expression<Func<T, TProperty>> expression, XmlName name = null, XmlMappingType mappingType = XmlMappingType.Element) Parameters Type Name Description XmlObjectContractBuilder <T> builder Expression < Func <T, TProperty>> expression XmlName name XmlMappingType mappingType Returns Type Description XmlObjectContractBuilder <T> Type Parameters Name Description T TProperty | Improve this Doc View Source SetProperty<T, TProperty>(XmlObjectContractBuilder<T>, Expression<Func<T, TProperty>>, Action<XmlPropertyBuilder>) Declaration public static XmlObjectContractBuilder<T> SetProperty<T, TProperty>(this XmlObjectContractBuilder<T> builder, Expression<Func<T, TProperty>> expression, Action<XmlPropertyBuilder> build) Parameters Type Name Description XmlObjectContractBuilder <T> builder Expression < Func <T, TProperty>> expression Action < XmlPropertyBuilder > build Returns Type Description XmlObjectContractBuilder <T> Type Parameters Name Description T TProperty | Improve this Doc View Source SetTypeHandling<TBuilder>(TBuilder, Nullable<XmlTypeHandling>) Declaration public static TBuilder SetTypeHandling<TBuilder>(this TBuilder builder, XmlTypeHandling? typeHandling) where TBuilder : XmlObjectContractBuilder Parameters Type Name Description TBuilder builder Nullable < XmlTypeHandling > typeHandling Returns Type Description TBuilder Type Parameters Name Description TBuilder"
  },
  "api/DotNetHelper_Serializer.Attribute.DataValidationAttritubeMembers.html": {
    "href": "api/DotNetHelper_Serializer.Attribute.DataValidationAttritubeMembers.html",
    "title": "Enum DataValidationAttritubeMembers | DotNetHelper-Serializer",
    "keywords": "Enum DataValidationAttritubeMembers Enum DataValidationAttritubeMembers Namespace : DotNetHelper_Serializer.Attribute Assembly : DotNetHelper-Serializer.dll Syntax public enum DataValidationAttritubeMembers Fields Name Description SetCanContainLetter SetCanContainNumbers SetDataType SetIgnore SetMaxLengthSize The set maximum length size SetRequireValue Extension Methods TypeExtension.CanHaveNullValue<DataValidationAttritubeMembers>()"
  },
  "api/DotNetHelper_Serializer.Interface.ICsvSerializer.html": {
    "href": "api/DotNetHelper_Serializer.Interface.ICsvSerializer.html",
    "title": "Interface ICsvSerializer | DotNetHelper-Serializer",
    "keywords": "Interface ICsvSerializer Inherited Members DotNetHelper_IO.Interface.ISerializer.SerializeToStream<T>(T, System.IO.Stream, System.Int32, System.Boolean) DotNetHelper_IO.Interface.ISerializer.SerializeToStream(System.Object, System.Type, System.IO.Stream, System.Int32, System.Boolean) DotNetHelper_IO.Interface.ISerializer.SerializeToFile<T>(T, System.String, DotNetHelper_Contracts.Enum.IO.FileOption) DotNetHelper_IO.Interface.ISerializer.SerializeToFile<T>(System.Collections.Generic.IEnumerable<T>, System.String, DotNetHelper_Contracts.Enum.IO.FileOption) DotNetHelper_IO.Interface.ISerializer.SerializeToFile(System.Object, System.Type, System.String, DotNetHelper_Contracts.Enum.IO.FileOption) DotNetHelper_IO.Interface.ISerializer.SerializeToFile(System.Object, System.String, DotNetHelper_Contracts.Enum.IO.FileOption) DotNetHelper_IO.Interface.ISerializer.SerializeToString(System.Object) DotNetHelper_IO.Interface.ISerializer.SerializeToString<T>(T) DotNetHelper_IO.Interface.ISerializer.DeserializeFromFile(System.Type, System.String) DotNetHelper_IO.Interface.ISerializer.DeserializeFromFile<T>(System.String) DotNetHelper_IO.Interface.ISerializer.DeserializeFromFile(System.String) DotNetHelper_IO.Interface.ISerializer.DeserializeListFromFile(System.String) DotNetHelper_IO.Interface.ISerializer.DeserializeToList(System.String) DotNetHelper_IO.Interface.ISerializer.DeserializeListFromFile<T>(System.String) DotNetHelper_IO.Interface.ISerializer.DeserializeFromStream<T>(System.IO.Stream) DotNetHelper_IO.Interface.ISerializer.DeserializeFromStream(System.IO.Stream, System.Type) DotNetHelper_IO.Interface.ISerializer.DeserializeFromString<T>(System.String) DotNetHelper_IO.Interface.ISerializer.DeserializeToList<T>(System.String) DotNetHelper_IO.Interface.ISerializer.DeserializeFromString(System.String, System.Type) DotNetHelper_IO.Interface.ISerializer.DeserializeToCSharpClass(System.String, System.String) IConvertible.GetTypeCode() IConvertible.ToBoolean(IFormatProvider) IConvertible.ToChar(IFormatProvider) IConvertible.ToSByte(IFormatProvider) IConvertible.ToByte(IFormatProvider) IConvertible.ToInt16(IFormatProvider) IConvertible.ToUInt16(IFormatProvider) IConvertible.ToInt32(IFormatProvider) IConvertible.ToUInt32(IFormatProvider) IConvertible.ToInt64(IFormatProvider) IConvertible.ToUInt64(IFormatProvider) IConvertible.ToSingle(IFormatProvider) IConvertible.ToDouble(IFormatProvider) IConvertible.ToDecimal(IFormatProvider) IConvertible.ToDateTime(IFormatProvider) IConvertible.ToString(IFormatProvider) IConvertible.ToType(Type, IFormatProvider) Namespace : DotNetHelper_Serializer.Interface Assembly : DotNetHelper-Serializer.dll Syntax public interface ICsvSerializer : ISerializer, IConvertible Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.Helper.html": {
    "href": "api/DotNetHelper_Serializer.Helper.html",
    "title": "Namespace DotNetHelper_Serializer.Helper | DotNetHelper-Serializer",
    "keywords": "Namespace DotNetHelper_Serializer.Helper Classes DataValidation DBHelper ObjectMapper ObjectToSqlHelper SqlSyntaxHelper"
  },
  "api/DotNetHelper_Serializer.Model.QueryBucketEventArgs.html": {
    "href": "api/DotNetHelper_Serializer.Model.QueryBucketEventArgs.html",
    "title": "Class QueryBucketEventArgs | DotNetHelper-Serializer",
    "keywords": "Class QueryBucketEventArgs Inheritance Object EventArgs QueryBucketEventArgs Inherited Members EventArgs.Empty Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.Model Assembly : DotNetHelper-Serializer.dll Syntax public class QueryBucketEventArgs : EventArgs Constructors | Improve this Doc View Source QueryBucketEventArgs(QueryBucket) Declaration public QueryBucketEventArgs(QueryBucket bucket) Parameters Type Name Description QueryBucket bucket Properties | Improve this Doc View Source QueryBucket Declaration public QueryBucket QueryBucket { get; } Property Value Type Description QueryBucket Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlByteConverter.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlByteConverter.html",
    "title": "Class XmlByteConverter | DotNetHelper-Serializer",
    "keywords": "Class XmlByteConverter Inheritance Object XmlConverter < Byte > XmlBasicConverter < Byte > XmlBasicRawConverter < Byte > XmlByteConverter Implements IXmlConverter Inherited Members XmlBasicRawConverter<Byte>.WriteXml(XmlWriter, Object, XmlSerializationContext) XmlBasicConverter<Byte>.ReadXml(XmlReader, XmlSerializationContext) XmlConverter<Byte>.CanRead(Type) XmlConverter<Byte>.CanWrite(Type) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters.Basics Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlByteConverter : XmlBasicRawConverter<byte>, IXmlConverter Methods | Improve this Doc View Source Parse(String, XmlSerializationContext) Declaration protected override byte Parse(string value, XmlSerializationContext context) Parameters Type Name Description String value XmlSerializationContext context Returns Type Description Byte Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.Byte>.Parse(System.String, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) | Improve this Doc View Source ToString(Byte, XmlSerializationContext) Declaration protected override string ToString(byte value, XmlSerializationContext context) Parameters Type Name Description Byte value XmlSerializationContext context Returns Type Description String Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.Byte>.ToString(System.Byte, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) Implements IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMappingType.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlMappingType.html",
    "title": "Enum XmlMappingType | DotNetHelper-Serializer",
    "keywords": "Enum XmlMappingType Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts Assembly : DotNetHelper-Serializer.dll Syntax public enum XmlMappingType Fields Name Description Attribute Element InnerText Extension Methods TypeExtension.CanHaveNullValue<XmlMappingType>()"
  },
  "api/DotNetHelper_Serializer.DataSource.DataSourceCsv.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.DataSourceCsv.html",
    "title": "Class DataSourceCsv | DotNetHelper-Serializer",
    "keywords": "Class DataSourceCsv Class DataSourceCsv. This class cannot be inherited. Inheritance Object DataSourceCsv Implements ICsvSerializer DotNetHelper_IO.Interface.ISerializer IConvertible Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource Assembly : DotNetHelper-Serializer.dll Syntax public sealed class DataSourceCsv : ICsvSerializer, ISerializer, IConvertible Constructors | Improve this Doc View Source DataSourceCsv(Configuration) Initializes a new instance of the DataSourceCsv class. Declaration public DataSourceCsv(Configuration configuration = null) Parameters Type Name Description CsvHelper.Configuration.Configuration configuration The configuration. | Improve this Doc View Source DataSourceCsv(Encoding, Configuration) Initializes a new instance of the DataSourceCsv class. Declaration public DataSourceCsv(Encoding encoding, Configuration configuration = null) Parameters Type Name Description Encoding encoding The encoding. CsvHelper.Configuration.Configuration configuration The configuration. Properties | Improve this Doc View Source Configuration Gets the CSV configuration. Declaration public Configuration Configuration { get; } Property Value Type Description CsvHelper.Configuration.Configuration The CSV configuration. | Improve this Doc View Source Encoding Gets or sets the encoding. Declaration public Encoding Encoding { get; set; } Property Value Type Description Encoding The encoding. Methods | Improve this Doc View Source DeserializeFromFile(String) Declaration public dynamic DeserializeFromFile(string fullFilePath) Parameters Type Name Description String fullFilePath Returns Type Description Object | Improve this Doc View Source DeserializeFromFile(Type, String) Deserializes from file. Declaration public object DeserializeFromFile(Type type, string fullFilePath) Parameters Type Name Description Type type The type. String fullFilePath Returns Type Description Object System.Object. | Improve this Doc View Source DeserializeFromFile<T>(String) Deserializes from file. Declaration public T DeserializeFromFile<T>(string fullFilePath) where T : class Parameters Type Name Description String fullFilePath Returns Type Description T T. Type Parameters Name Description T | Improve this Doc View Source DeserializeFromStream(Stream, Type) Deserializes from stream. Declaration public object DeserializeFromStream(Stream stream, Type type) Parameters Type Name Description Stream stream The stream. Type type The type. Returns Type Description Object System.Object. | Improve this Doc View Source DeserializeFromStream<T>(Stream) Deserializes from stream. Declaration public T DeserializeFromStream<T>(Stream stream) Parameters Type Name Description Stream stream The stream. Returns Type Description T T. Type Parameters Name Description T | Improve this Doc View Source DeserializeFromString(String, Type) Deserializes from string. Declaration public object DeserializeFromString(string content, Type type) Parameters Type Name Description String content The content. Type type The type. Returns Type Description Object System.Object. | Improve this Doc View Source DeserializeFromString<T>(String) Deserializes from string. Declaration public T DeserializeFromString<T>(string text) where T : class Parameters Type Name Description String text The text. Returns Type Description T T. Type Parameters Name Description T | Improve this Doc View Source DeserializeListFromFile(String) Declaration public IEnumerable<dynamic> DeserializeListFromFile(string fullFilePath) Parameters Type Name Description String fullFilePath Returns Type Description IEnumerable < Object > | Improve this Doc View Source DeserializeListFromFile<T>(String) Declaration public IEnumerable<T> DeserializeListFromFile<T>(string fullFilePath) where T : class Parameters Type Name Description String fullFilePath Returns Type Description IEnumerable <T> Type Parameters Name Description T | Improve this Doc View Source DeserializeToCSharpClass(String, String) Deserializes to c sharp class. Declaration public string DeserializeToCSharpClass(string content, string className = null) Parameters Type Name Description String content The content. String className Name of the class. Returns Type Description String System.String. Exceptions Type Condition NotImplementedException NotImplementedException | Improve this Doc View Source DeserializeToList(String) Declaration public IEnumerable<dynamic> DeserializeToList(string content) Parameters Type Name Description String content Returns Type Description IEnumerable < Object > | Improve this Doc View Source DeserializeToList<T>(String) Deserializes to list. Declaration public List<T> DeserializeToList<T>(string content) where T : class Parameters Type Name Description String content The content. Returns Type Description List <T> List<T>. Type Parameters Name Description T | Improve this Doc View Source GetTypeCode() Declaration public TypeCode GetTypeCode() Returns Type Description TypeCode | Improve this Doc View Source SerializeToFile(Object, String, FileOption) Declaration public void SerializeToFile(dynamic obj, string fullFilePath, FileOption option) Parameters Type Name Description Object obj String fullFilePath DotNetHelper_Contracts.Enum.IO.FileOption option | Improve this Doc View Source SerializeToFile(Object, Type, String, FileOption) Serializes to file. Declaration public void SerializeToFile(object obj, Type type, string fullFilePath, FileOption option) Parameters Type Name Description Object obj The object. Type type The type. String fullFilePath The full file path. DotNetHelper_Contracts.Enum.IO.FileOption option Exceptions Type Condition ArgumentOutOfRangeException mode - null ArgumentOutOfRangeException mode - null | Improve this Doc View Source SerializeToFile<T>(T, String, FileOption) Serializes to file. Declaration public void SerializeToFile<T>(T obj, string file, FileOption mode) where T : class Parameters Type Name Description T obj The object. String file The file. DotNetHelper_Contracts.Enum.IO.FileOption mode The mode. Type Parameters Name Description T | Improve this Doc View Source SerializeToFile<T>(IEnumerable<T>, String, FileOption) Serializes to file. Declaration public void SerializeToFile<T>(IEnumerable<T> list, string fullFilePath, FileOption option) where T : class Parameters Type Name Description IEnumerable <T> list The list. String fullFilePath The full file path. DotNetHelper_Contracts.Enum.IO.FileOption option Type Parameters Name Description T | Improve this Doc View Source SerializeToStream(Object, Type, Stream, Int32, Boolean) Serializes to stream. Declaration public void SerializeToStream(object obj, Type type, Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) Parameters Type Name Description Object obj The object. Type type The type. Stream stream The stream. Int32 bufferSize Boolean leaveStreamOpen | Improve this Doc View Source SerializeToStream<T>(T, Stream, Int32, Boolean) Serializes to stream. Declaration public void SerializeToStream<T>(T obj, Stream stream, int bufferSize = 1024, bool leaveStreamOpen = false) where T : class Parameters Type Name Description T obj The object. Stream stream The stream. Int32 bufferSize Boolean leaveStreamOpen Type Parameters Name Description T | Improve this Doc View Source SerializeToString(Object) Serializes to string. Declaration public string SerializeToString(object obj) Parameters Type Name Description Object obj The object. Returns Type Description String System.String. | Improve this Doc View Source SerializeToString<T>(T) Serializes to string. Declaration public string SerializeToString<T>(T obj) where T : class Parameters Type Name Description T obj The object. Returns Type Description String System.String. Type Parameters Name Description T | Improve this Doc View Source ToBoolean(IFormatProvider) Declaration public bool ToBoolean(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Boolean | Improve this Doc View Source ToByte(IFormatProvider) Declaration public byte ToByte(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Byte | Improve this Doc View Source ToChar(IFormatProvider) Declaration public char ToChar(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Char | Improve this Doc View Source ToDateTime(IFormatProvider) Declaration public DateTime ToDateTime(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description DateTime | Improve this Doc View Source ToDecimal(IFormatProvider) Declaration public decimal ToDecimal(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Decimal | Improve this Doc View Source ToDouble(IFormatProvider) Declaration public double ToDouble(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Double | Improve this Doc View Source ToInt16(IFormatProvider) Declaration public short ToInt16(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Int16 | Improve this Doc View Source ToInt32(IFormatProvider) Declaration public int ToInt32(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Int32 | Improve this Doc View Source ToInt64(IFormatProvider) Declaration public long ToInt64(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Int64 | Improve this Doc View Source ToSByte(IFormatProvider) Declaration public sbyte ToSByte(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description SByte | Improve this Doc View Source ToSingle(IFormatProvider) Declaration public float ToSingle(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description Single | Improve this Doc View Source ToString(IFormatProvider) Declaration public string ToString(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description String | Improve this Doc View Source ToType(Type, IFormatProvider) Declaration public object ToType(Type conversionType, IFormatProvider provider) Parameters Type Name Description Type conversionType IFormatProvider provider Returns Type Description Object | Improve this Doc View Source ToUInt16(IFormatProvider) Declaration public ushort ToUInt16(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description UInt16 | Improve this Doc View Source ToUInt32(IFormatProvider) Declaration public uint ToUInt32(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description UInt32 | Improve this Doc View Source ToUInt64(IFormatProvider) Declaration public ulong ToUInt64(IFormatProvider provider) Parameters Type Name Description IFormatProvider provider Returns Type Description UInt64 Implements ICsvSerializer DotNetHelper_IO.Interface.ISerializer System.IConvertible Extension Methods TypeExtension.CanHaveNullValue<T>(T) See Also ICsvSerializer ICsvSerializer"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlSByteConverter.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlSByteConverter.html",
    "title": "Class XmlSByteConverter | DotNetHelper-Serializer",
    "keywords": "Class XmlSByteConverter Inheritance Object XmlConverter < SByte > XmlBasicConverter < SByte > XmlBasicRawConverter < SByte > XmlSByteConverter Implements IXmlConverter Inherited Members XmlBasicRawConverter<SByte>.WriteXml(XmlWriter, Object, XmlSerializationContext) XmlBasicConverter<SByte>.ReadXml(XmlReader, XmlSerializationContext) XmlConverter<SByte>.CanRead(Type) XmlConverter<SByte>.CanWrite(Type) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters.Basics Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlSByteConverter : XmlBasicRawConverter<sbyte>, IXmlConverter Methods | Improve this Doc View Source Parse(String, XmlSerializationContext) Declaration protected override sbyte Parse(string value, XmlSerializationContext context) Parameters Type Name Description String value XmlSerializationContext context Returns Type Description SByte Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.SByte>.Parse(System.String, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) | Improve this Doc View Source ToString(SByte, XmlSerializationContext) Declaration protected override string ToString(sbyte value, XmlSerializationContext context) Parameters Type Name Description SByte value XmlSerializationContext context Returns Type Description String Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.SByte>.ToString(System.SByte, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) Implements IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlContract.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlContract.html",
    "title": "Class XmlContract | DotNetHelper-Serializer",
    "keywords": "Class XmlContract Inheritance Object XmlContract XmlEnumContract XmlObjectContract Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts Assembly : DotNetHelper-Serializer.dll Syntax public class XmlContract Constructors | Improve this Doc View Source XmlContract(Type, XmlName) Declaration public XmlContract(Type valueType, XmlName name) Parameters Type Name Description Type valueType XmlName name Properties | Improve this Doc View Source Name Declaration public XmlName Name { get; } Property Value Type Description XmlName | Improve this Doc View Source ValueType Declaration public Type ValueType { get; } Property Value Type Description Type Methods | Improve this Doc View Source GetDefaultMember() Declaration protected virtual XmlMember GetDefaultMember() Returns Type Description XmlMember Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Collections.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Collections.html",
    "title": "Namespace DotNetHelper_Serializer.DataSource.Xml.Converters.Collections | DotNetHelper-Serializer",
    "keywords": "Namespace DotNetHelper_Serializer.DataSource.Xml.Converters.Collections Classes XmlArrayConverter XmlCollectionConverter XmlDictionaryConverter XmlListConverter Interfaces ICollectionProxy"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlTimeSpanConverter.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlTimeSpanConverter.html",
    "title": "Class XmlTimeSpanConverter | DotNetHelper-Serializer",
    "keywords": "Class XmlTimeSpanConverter Inheritance Object XmlConverter < TimeSpan > XmlBasicConverter < TimeSpan > XmlBasicRawConverter < TimeSpan > XmlTimeSpanConverter Implements IXmlConverter Inherited Members XmlBasicRawConverter<TimeSpan>.WriteXml(XmlWriter, Object, XmlSerializationContext) XmlBasicConverter<TimeSpan>.ReadXml(XmlReader, XmlSerializationContext) XmlConverter<TimeSpan>.CanRead(Type) XmlConverter<TimeSpan>.CanWrite(Type) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters.Basics Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlTimeSpanConverter : XmlBasicRawConverter<TimeSpan>, IXmlConverter Methods | Improve this Doc View Source Parse(String, XmlSerializationContext) Declaration protected override TimeSpan Parse(string value, XmlSerializationContext context) Parameters Type Name Description String value XmlSerializationContext context Returns Type Description TimeSpan Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.TimeSpan>.Parse(System.String, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) | Improve this Doc View Source ToString(TimeSpan, XmlSerializationContext) Declaration protected override string ToString(TimeSpan value, XmlSerializationContext context) Parameters Type Name Description TimeSpan value XmlSerializationContext context Returns Type Description String Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.TimeSpan>.ToString(System.TimeSpan, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) Implements IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.Attribute.html": {
    "href": "api/DotNetHelper_Serializer.Attribute.html",
    "title": "Namespace DotNetHelper_Serializer.Attribute | DotNetHelper-Serializer",
    "keywords": "Namespace DotNetHelper_Serializer.Attribute Classes DataValidationAttritube Class DataValidationAttritube. SqlColumnAttritube Class SqlColumnAttritube. SqlTableAttritube This specifies that the following property is also an SQL table Enums DataValidationAttritubeMembers Enum DataValidationAttritubeMembers SqlColumnAttritubeMembers Enum SqlColumnAttritubeMembers SQLJoinType SqlTableAttritubeMembers Enum SqlColumnAttritubeMembers"
  },
  "api/DotNetHelper_Serializer.Helper.SqlSyntaxHelper.html": {
    "href": "api/DotNetHelper_Serializer.Helper.SqlSyntaxHelper.html",
    "title": "Class SqlSyntaxHelper | DotNetHelper-Serializer",
    "keywords": "Class SqlSyntaxHelper Inheritance Object SqlSyntaxHelper Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.Helper Assembly : DotNetHelper-Serializer.dll Syntax public class SqlSyntaxHelper Constructors | Improve this Doc View Source SqlSyntaxHelper(DataBaseType) Declaration public SqlSyntaxHelper(DataBaseType type) Parameters Type Name Description DotNetHelper_Contracts.Enum.DataSource.DataBaseType type Properties | Improve this Doc View Source DataBaseType Declaration public DataBaseType DataBaseType { get; } Property Value Type Description DotNetHelper_Contracts.Enum.DataSource.DataBaseType Methods | Improve this Doc View Source BuildIfExistStatement(String, String, String) Declaration public string BuildIfExistStatement(string selectStatement, string onTrueSql, string onFalseSql) Parameters Type Name Description String selectStatement String onTrueSql String onFalseSql Returns Type Description String | Improve this Doc View Source GetEnclosedValueChar(Type) Declaration public string GetEnclosedValueChar(Type type) Parameters Type Name Description Type type Returns Type Description String | Improve this Doc View Source GetTableClosedChar() Declaration public string GetTableClosedChar() Returns Type Description String | Improve this Doc View Source GetTableOpenChar() Declaration public string GetTableOpenChar() Returns Type Description String | Improve this Doc View Source RemoveBracketsChar(String) Declaration public string RemoveBracketsChar(string value) Parameters Type Name Description String value Returns Type Description String Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlName.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlName.html",
    "title": "Class XmlName | DotNetHelper-Serializer",
    "keywords": "Class XmlName Inheritance Object XmlName Implements IEquatable < XmlName > Inherited Members Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlName : IEquatable<XmlName> Constructors | Improve this Doc View Source XmlName(String) Declaration public XmlName(string localName) Parameters Type Name Description String localName | Improve this Doc View Source XmlName(String, String) Declaration public XmlName(string localName, string namespaceUri) Parameters Type Name Description String localName String namespaceUri Properties | Improve this Doc View Source LocalName Declaration public string LocalName { get; } Property Value Type Description String | Improve this Doc View Source NamespaceUri Declaration public string NamespaceUri { get; } Property Value Type Description String Methods | Improve this Doc View Source Equals(XmlName) Declaration public bool Equals(XmlName other) Parameters Type Name Description XmlName other Returns Type Description Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides Object.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides Object.GetHashCode() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String Overrides Object.ToString() Operators | Improve this Doc View Source Implicit(String to XmlName) Declaration public static implicit operator XmlName(string name) Parameters Type Name Description String name Returns Type Description XmlName Implements System.IEquatable<T> Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.Extension.ExtFastMember.html": {
    "href": "api/DotNetHelper_Serializer.Extension.ExtFastMember.html",
    "title": "Class ExtFastMember | DotNetHelper-Serializer",
    "keywords": "Class ExtFastMember Inheritance Object ExtFastMember Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.Extension Assembly : DotNetHelper-Serializer.dll Syntax public static class ExtFastMember Methods | Improve this Doc View Source GetActualMemberName(AdvanceMember) Declaration public static string GetActualMemberName(this AdvanceMember av) Parameters Type Name Description AdvanceMember av Returns Type Description String | Improve this Doc View Source GetAdvanceMembers(Type) Declaration public static List<AdvanceMember> GetAdvanceMembers(Type type) Parameters Type Name Description Type type Returns Type Description List < AdvanceMember > A List Of Advance Members Of T | Improve this Doc View Source GetAdvanceMembers<T>(T) Declaration public static List<AdvanceMember> GetAdvanceMembers<T>(T poco = null) where T : class Parameters Type Name Description T poco If Null Default Value Will Be Used For Members Returns Type Description List < AdvanceMember > A List Of Advance Members Of T Type Parameters Name Description T | Improve this Doc View Source GetAdvanceMembersForDynamic<T>(T) Declaration public static List<AdvanceMember> GetAdvanceMembersForDynamic<T>(T poco = null) where T : class Parameters Type Name Description T poco If Null Default Value Will Be Used For Members Returns Type Description List < AdvanceMember > A List Of Advance Members Of T Type Parameters Name Description T | Improve this Doc View Source GetMemberValue<T>(Member, T, TypeAccessor) Declaration public static object GetMemberValue<T>(Member p, T poco, TypeAccessor accessor) Parameters Type Name Description FastMember.Member p T poco FastMember.TypeAccessor accessor Returns Type Description Object Type Parameters Name Description T | Improve this Doc View Source SetMemberValue<T>(T, String, Object) Declaration public static void SetMemberValue<T>(T poco, string propertyName, object value) Parameters Type Name Description T poco String propertyName Object value Type Parameters Name Description T"
  },
  "index.html": {
    "href": "index.html",
    "title": "DotNetHelper-Serializer | DotNetHelper-Serializer",
    "keywords": "DotNetHelper-Serializer An Awesome XML, CSV, JSON, & Binary Serializer & Deserializer Supports working with files, streams, & objects Strongly Types // code snippet Dynamic Types // code snippet Anynomus Types // code snippet Targeted .NET Frameworks NET452 NETSTANDARD2.0"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlDateTimeConverter.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Basics.XmlDateTimeConverter.html",
    "title": "Class XmlDateTimeConverter | DotNetHelper-Serializer",
    "keywords": "Class XmlDateTimeConverter Inheritance Object XmlConverter < DateTime > XmlBasicConverter < DateTime > XmlBasicRawConverter < DateTime > XmlDateTimeConverter Implements IXmlConverter Inherited Members XmlBasicRawConverter<DateTime>.WriteXml(XmlWriter, Object, XmlSerializationContext) XmlBasicConverter<DateTime>.ReadXml(XmlReader, XmlSerializationContext) XmlConverter<DateTime>.CanRead(Type) XmlConverter<DateTime>.CanWrite(Type) Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters.Basics Assembly : DotNetHelper-Serializer.dll Syntax public sealed class XmlDateTimeConverter : XmlBasicRawConverter<DateTime>, IXmlConverter Methods | Improve this Doc View Source Parse(String, XmlSerializationContext) Declaration protected override DateTime Parse(string value, XmlSerializationContext context) Parameters Type Name Description String value XmlSerializationContext context Returns Type Description DateTime Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.DateTime>.Parse(System.String, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) | Improve this Doc View Source ToString(DateTime, XmlSerializationContext) Declaration protected override string ToString(DateTime value, XmlSerializationContext context) Parameters Type Name Description DateTime value XmlSerializationContext context Returns Type Description String Overrides DotNetHelper_Serializer.DataSource.Xml.Converters.XmlBasicConverter<System.DateTime>.ToString(System.DateTime, DotNetHelper_Serializer.DataSource.Xml.XmlSerializationContext) Implements IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlNamespace.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.XmlNamespace.html",
    "title": "Class XmlNamespace | DotNetHelper-Serializer",
    "keywords": "Class XmlNamespace Inheritance Object XmlNamespace Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts Assembly : DotNetHelper-Serializer.dll Syntax public class XmlNamespace Constructors | Improve this Doc View Source XmlNamespace(String, String) Declaration public XmlNamespace(string prefix, string namespaceUri) Parameters Type Name Description String prefix String namespaceUri Properties | Improve this Doc View Source NamespaceUri Declaration public string NamespaceUri { get; } Property Value Type Description String | Improve this Doc View Source Prefix Declaration public string Prefix { get; } Property Value Type Description String Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlObjectContractBuilder-1.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.XmlObjectContractBuilder-1.html",
    "title": "Class XmlObjectContractBuilder<T> | DotNetHelper-Serializer",
    "keywords": "Class XmlObjectContractBuilder<T> Inheritance Object XmlContractBuilder XmlObjectContractBuilder XmlObjectContractBuilder<T> Implements IXmlCollectionBuilder IXmlBuilder Inherited Members XmlObjectContractBuilder.TypeHandling XmlObjectContractBuilder.Properties XmlObjectContractBuilder.Item XmlObjectContractBuilder.Create(XmlObjectContract) XmlObjectContractBuilder.Build() XmlObjectContractBuilder.BuildContract() XmlContractBuilder.ValueType XmlContractBuilder.Name Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders Assembly : DotNetHelper-Serializer.dll Syntax public class XmlObjectContractBuilder<T> : XmlObjectContractBuilder, IXmlCollectionBuilder, IXmlBuilder Type Parameters Name Description T Constructors | Improve this Doc View Source XmlObjectContractBuilder() Declaration public XmlObjectContractBuilder() Implements IXmlCollectionBuilder IXmlBuilder Extension Methods TypeExtension.CanHaveNullValue<T>(T) XmlBuilderExtensions.SetName<TBuilder>(TBuilder, XmlName) XmlBuilderExtensions.SetItem<TBuilder>(TBuilder, XmlName) XmlBuilderExtensions.SetItem<TBuilder>(TBuilder, Type, XmlName) XmlBuilderExtensions.SetItem<TBuilder>(TBuilder, Action<XmlItemBuilder>) XmlBuilderExtensions.SetItem<TBuilder>(TBuilder, Type, Action<XmlItemBuilder>) XmlContractBuilderExtensions.SetTypeHandling<TBuilder>(TBuilder, Nullable<XmlTypeHandling>) XmlContractBuilderExtensions.SetProperty<TBuilder>(TBuilder, String, XmlName, XmlMappingType) XmlContractBuilderExtensions.SetProperty<TBuilder>(TBuilder, String, Action<XmlPropertyBuilder>) XmlContractBuilderExtensions.RemoveProperty<TBuilder>(TBuilder, String) XmlContractBuilderExtensions.SetProperty<T, TProperty>(XmlObjectContractBuilder<T>, Expression<Func<T, TProperty>>, XmlName, XmlMappingType) XmlContractBuilderExtensions.SetProperty<T, TProperty>(XmlObjectContractBuilder<T>, Expression<Func<T, TProperty>>, Action<XmlPropertyBuilder>) XmlContractBuilderExtensions.RemoveProperty<T, TProperty>(XmlObjectContractBuilder<T>, Expression<Func<T, TProperty>>)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.IXmlBuilder.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders.IXmlBuilder.html",
    "title": "Interface IXmlBuilder | DotNetHelper-Serializer",
    "keywords": "Interface IXmlBuilder Namespace : DotNetHelper_Serializer.DataSource.Xml.Contracts.Builders Assembly : DotNetHelper-Serializer.dll Syntax public interface IXmlBuilder Properties | Improve this Doc View Source Name Declaration XmlName Name { get; set; } Property Value Type Description XmlName | Improve this Doc View Source ValueType Declaration Type ValueType { get; } Property Value Type Description Type Extension Methods TypeExtension.CanHaveNullValue<T>(T) XmlBuilderExtensions.SetName<TBuilder>(TBuilder, XmlName)"
  },
  "api/DotNetHelper_Serializer.Attribute.SqlColumnAttritube.html": {
    "href": "api/DotNetHelper_Serializer.Attribute.SqlColumnAttritube.html",
    "title": "Class SqlColumnAttritube | DotNetHelper-Serializer",
    "keywords": "Class SqlColumnAttritube Class SqlColumnAttritube. Inheritance Object Attribute SqlColumnAttritube Implements _Attribute Inherited Members Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.Equals(Object) Attribute.GetHashCode() Attribute.Match(Object) Attribute.IsDefaultAttribute() Attribute._Attribute.GetTypeInfoCount(UInt32) Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr) Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr) Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr) Attribute.TypeId Object.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.Attribute Assembly : DotNetHelper-Serializer.dll Syntax [AttributeUsage(AttributeTargets.Class | AttributeTargets.Property)] public class SqlColumnAttritube : Attribute, _Attribute Fields | Improve this Doc View Source MappingIds Gets or sets the mappings for keys to join with. Declaration public string[] MappingIds Field Value Type Description String [] an array of ids, that will join a column to another table. Properties | Improve this Doc View Source ApiId Gets or sets a value indicating whether [API identifier]. Declaration public bool? ApiId { get; set; } Property Value Type Description Nullable < Boolean > null if [API identifier] contains no value, true if [API identifier]; otherwise, false . | Improve this Doc View Source AutoIncrementBy Gets or sets the automatic increment by. If this value is set then the property will be treated as an IDENTITY column Declaration public int? AutoIncrementBy { get; set; } Property Value Type Description Nullable < Int32 > The automatic increment by. | Improve this Doc View Source DefaultValue Gets or sets the default value. Declaration public object DefaultValue { get; set; } Property Value Type Description Object The default value. | Improve this Doc View Source Ignore If true property will be use when the class is being used by a DATASOURCE Object Declaration public bool? Ignore { get; set; } Property Value Type Description Nullable < Boolean > null if [ignore] contains no value, true if [ignore]; otherwise, false . | Improve this Doc View Source MapTo If true property will be use when the class is being used by a DATASOURCE Object Declaration public string MapTo { get; set; } Property Value Type Description String The map to. | Improve this Doc View Source MaxColumnSize Defaults To MAX used for creating table Declaration public int? MaxColumnSize { get; set; } Property Value Type Description Nullable < Int32 > The maximum size of the column. | Improve this Doc View Source Nullable Gets or sets a value indicating whether this SqlColumnAttritube is nullable. Declaration public bool? Nullable { get; set; } Property Value Type Description Nullable < Boolean > null if [nullable] contains no value, true if [nullable]; otherwise, false . | Improve this Doc View Source PrimaryKey Gets or sets a value indicating whether [primary key]. Declaration public bool? PrimaryKey { get; set; } Property Value Type Description Nullable < Boolean > null if [primary key] contains no value, true if [primary key]; otherwise, false . | Improve this Doc View Source SerializableType Defaults To MAX used for creating table Declaration public SerializableType SerializableType { get; set; } Property Value Type Description DotNetHelper_Contracts.Enum.SerializableType The maximum size of the column. | Improve this Doc View Source SetApiId Gets or sets a value indicating whether [set API identifier]. Declaration public bool SetApiId { get; set; } Property Value Type Description Boolean true if [set API identifier]; otherwise, false . Exceptions Type Condition Exception Nooo... Your Using SqlColumnAttritube wrong do not try to get from the Set Property use the orignial | Improve this Doc View Source SetAutoIncrementBy Gets or sets the set automatic increment by. Declaration public int SetAutoIncrementBy { get; set; } Property Value Type Description Int32 The set automatic increment by. Exceptions Type Condition Exception Nooo... Your Using SqlColumnAttritube wrong do not try to get from the Set Property use the orignial | Improve this Doc View Source SetIgnore Gets or sets a value indicating whether [set ignore]. Declaration public bool SetIgnore { get; set; } Property Value Type Description Boolean true if [set ignore]; otherwise, false . Exceptions Type Condition Exception Nooo... Your Using SqlColumnAttritube wrong do not try to get from the Set Property use the orignial | Improve this Doc View Source SetMaxColumnSize Gets or sets the size of the set maximum column. Declaration public int SetMaxColumnSize { get; set; } Property Value Type Description Int32 The size of the set maximum column. Exceptions Type Condition Exception Nooo... Your Using SqlColumnAttritube wrong do not try to get from the Set Property use the orignial | Improve this Doc View Source SetNullable Gets or sets a value indicating whether [set nullable]. Declaration public bool SetNullable { get; set; } Property Value Type Description Boolean true if [set nullable]; otherwise, false . Exceptions Type Condition Exception Nooo... Your Using SqlColumnAttritube wrong do not try to get from the Set Property use the orignial | Improve this Doc View Source SetPrimaryKey Gets or sets a value indicating whether [set primary key]. Declaration public bool SetPrimaryKey { get; set; } Property Value Type Description Boolean true if [set primary key]; otherwise, false . Exceptions Type Condition Exception Nooo... Your Using SqlColumnAttritube wrong do not try to get from the Set Property use the orignial | Improve this Doc View Source SetStartIncrementAt Gets or sets the set start increment at. Declaration public int SetStartIncrementAt { get; set; } Property Value Type Description Int32 The set start increment at. Exceptions Type Condition Exception Nooo... Your Using SqlColumnAttritube wrong do not try to get from the Set Property use the orignial | Improve this Doc View Source SetSyncTime Gets or sets a value indicating whether [set synchronize time]. Declaration public bool SetSyncTime { get; set; } Property Value Type Description Boolean true if [set synchronize time]; otherwise, false . Exceptions Type Condition Exception Nooo... Your Using SqlColumnAttritube wrong do not try to get from the Set Property use the orignial | Improve this Doc View Source SetUtcDateTime Gets or sets a value indicating whether [set UTC date time]. Declaration public bool SetUtcDateTime { get; set; } Property Value Type Description Boolean true if [set UTC date time]; otherwise, false . Exceptions Type Condition Exception Nooo... Your Using SqlColumnAttritube wrong do not try to get from the Set Property use the orignial | Improve this Doc View Source SetxRefOnDeleteCascade Gets or sets a value indicating whether [setx reference on delete cascade]. Declaration public bool SetxRefOnDeleteCascade { get; } Property Value Type Description Boolean true if [setx reference on delete cascade]; otherwise, false . Exceptions Type Condition Exception Nooo... Your Using SqlColumnAttritube wrong do not try to get from the Set Property use the orignial | Improve this Doc View Source SetxRefOnUpdateCascade Gets or sets a value indicating whether [setx reference on update cascade]. Declaration public bool SetxRefOnUpdateCascade { get; } Property Value Type Description Boolean true if [setx reference on update cascade]; otherwise, false . Exceptions Type Condition Exception Nooo... Your Using SqlColumnAttritube wrong do not try to get from the Set Property use the orignial | Improve this Doc View Source SetxRefTableType Gets or sets the type of the setx reference table. Declaration public Type SetxRefTableType { get; set; } Property Value Type Description Type The type of the setx reference table. Exceptions Type Condition Exception Nooo... Your Using SqlColumnAttritube wrong do not try to get from the Set Property use the orignial | Improve this Doc View Source StartIncrementAt Gets or sets the start increment at. Declaration public int? StartIncrementAt { get; set; } Property Value Type Description Nullable < Int32 > The start increment at. | Improve this Doc View Source SyncTime When A Record Is Be Inserted Or Updated This Column Value Will Be DateTime.Now Declaration public bool? SyncTime { get; set; } Property Value Type Description Nullable < Boolean > null if [synchronize time] contains no value, true if [synchronize time]; otherwise, false . | Improve this Doc View Source TSQLDefaultValue Gets or sets the default value THIS IS ONLY WHEN THIS LIBRARY IS CREATING A TABLE SCRIPT Declaration public string TSQLDefaultValue { get; set; } Property Value Type Description String The default value. | Improve this Doc View Source UtcDateTime Gets or sets a value indicating whether [UTC date time]. Declaration public bool? UtcDateTime { get; set; } Property Value Type Description Nullable < Boolean > null if [UTC date time] contains no value, true if [UTC date time]; otherwise, false . | Improve this Doc View Source xRefJoinOnColumn Gets or sets the x reference join on column. Declaration public string xRefJoinOnColumn { get; set; } Property Value Type Description String The x reference join on column. | Improve this Doc View Source xRefOnDeleteCascade Gets or sets a value indicating whether [x reference on delete cascade]. Declaration public bool? xRefOnDeleteCascade { get; set; } Property Value Type Description Nullable < Boolean > null if [x reference on delete cascade] contains no value, true if [x reference on delete cascade]; otherwise, false . | Improve this Doc View Source xRefOnUpdateCascade Gets or sets a value indicating whether [x reference on update cascade]. Declaration public bool? xRefOnUpdateCascade { get; set; } Property Value Type Description Nullable < Boolean > null if [x reference on update cascade] contains no value, true if [x reference on update cascade]; otherwise, false . | Improve this Doc View Source xRefTableName Gets or sets the name of the x reference table. Declaration public string xRefTableName { get; set; } Property Value Type Description String The name of the x reference table. | Improve this Doc View Source xRefTableSchema Gets or sets the x reference table schema. Declaration public string xRefTableSchema { get; set; } Property Value Type Description String The x reference table schema. | Improve this Doc View Source xRefTableType Gets or sets the type of the x reference table. Declaration public Type xRefTableType { get; set; } Property Value Type Description Type The type of the x reference table. Implements System.Runtime.InteropServices._Attribute Extension Methods TypeExtension.CanHaveNullValue<T>(T) See Also Attribute"
  },
  "api/DotNetHelper_Serializer.Tools.html": {
    "href": "api/DotNetHelper_Serializer.Tools.html",
    "title": "Namespace DotNetHelper_Serializer.Tools | DotNetHelper-Serializer",
    "keywords": "Namespace DotNetHelper_Serializer.Tools Classes DevelopersTools"
  },
  "api/DotNetHelper_Serializer.Model.DbTable.html": {
    "href": "api/DotNetHelper_Serializer.Model.DbTable.html",
    "title": "Class DbTable | DotNetHelper-Serializer",
    "keywords": "Class DbTable Inheritance Object DbTable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.Model Assembly : DotNetHelper-Serializer.dll Syntax public class DbTable Properties | Improve this Doc View Source CreatedDate Declaration public DateTime? CreatedDate { get; set; } Property Value Type Description Nullable < DateTime > | Improve this Doc View Source Description Declaration public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source ModifiedDate Declaration public DateTime? ModifiedDate { get; set; } Property Value Type Description Nullable < DateTime > | Improve this Doc View Source Objtype Declaration public string Objtype { get; set; } Property Value Type Description String | Improve this Doc View Source Owner Declaration public string Owner { get; set; } Property Value Type Description String | Improve this Doc View Source ParentObjectId Declaration public int? ParentObjectId { get; set; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source Rootpage SQLITE ONLY Declaration public long Rootpage { get; set; } Property Value Type Description Int64 | Improve this Doc View Source Rows Declaration public long? Rows { get; set; } Property Value Type Description Nullable < Int64 > | Improve this Doc View Source SchemaId Declaration public int? SchemaId { get; set; } Property Value Type Description Nullable < Int32 > | Improve this Doc View Source Sql SQLITE ONLY Declaration public string Sql { get; set; } Property Value Type Description String | Improve this Doc View Source TableCatalog Declaration public string TableCatalog { get; set; } Property Value Type Description String | Improve this Doc View Source TableGuid Declaration public string TableGuid { get; set; } Property Value Type Description String | Improve this Doc View Source TableName Declaration public string TableName { get; set; } Property Value Type Description String | Improve this Doc View Source TablePropid Declaration public string TablePropid { get; set; } Property Value Type Description String | Improve this Doc View Source TableSchema Declaration public string TableSchema { get; set; } Property Value Type Description String | Improve this Doc View Source TableType Declaration public string TableType { get; set; } Property Value Type Description String | Improve this Doc View Source TypeDesc Declaration public string TypeDesc { get; set; } Property Value Type Description String | Improve this Doc View Source UsedBytes Declaration public decimal? UsedBytes { get; set; } Property Value Type Description Nullable < Decimal > | Improve this Doc View Source UsedGb Declaration public decimal? UsedGb { get; set; } Property Value Type Description Nullable < Decimal > Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.Model.DbSchema.html": {
    "href": "api/DotNetHelper_Serializer.Model.DbSchema.html",
    "title": "Class DbSchema | DotNetHelper-Serializer",
    "keywords": "Class DbSchema Inheritance Object DbSchema Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.Model Assembly : DotNetHelper-Serializer.dll Syntax public class DbSchema Properties | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source PrincipalId Declaration public int PrincipalId { get; set; } Property Value Type Description Int32 | Improve this Doc View Source SchemaId Declaration public int SchemaId { get; set; } Property Value Type Description Int32 Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  },
  "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Collections.XmlCollectionConverter.html": {
    "href": "api/DotNetHelper_Serializer.DataSource.Xml.Converters.Collections.XmlCollectionConverter.html",
    "title": "Class XmlCollectionConverter | DotNetHelper-Serializer",
    "keywords": "Class XmlCollectionConverter Inheritance Object XmlCollectionConverter Implements IXmlConverter Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : DotNetHelper_Serializer.DataSource.Xml.Converters.Collections Assembly : DotNetHelper-Serializer.dll Syntax public abstract class XmlCollectionConverter : IXmlConverter Methods | Improve this Doc View Source CanRead(Type) Declaration public abstract bool CanRead(Type valueType) Parameters Type Name Description Type valueType Returns Type Description Boolean | Improve this Doc View Source CanWrite(Type) Declaration public virtual bool CanWrite(Type valueType) Parameters Type Name Description Type valueType Returns Type Description Boolean | Improve this Doc View Source CreateProxy(Type) Declaration public abstract ICollectionProxy CreateProxy(Type valueType) Parameters Type Name Description Type valueType Returns Type Description ICollectionProxy | Improve this Doc View Source ReadXml(XmlReader, XmlSerializationContext) Declaration public object ReadXml(XmlReader reader, XmlSerializationContext context) Parameters Type Name Description XmlReader reader XmlSerializationContext context Returns Type Description Object | Improve this Doc View Source WriteXml(XmlWriter, Object, XmlSerializationContext) Declaration public void WriteXml(XmlWriter writer, object value, XmlSerializationContext context) Parameters Type Name Description XmlWriter writer Object value XmlSerializationContext context Implements IXmlConverter Extension Methods TypeExtension.CanHaveNullValue<T>(T)"
  }
}